{"version":3,"sources":["Home/helpers/imgClass/cropImage.js","Home/helpers/imgClass/rotateImage.js","Home/helpers/dialogViewImg/index.js","Home/helpers/avatar/index.js","Home/helpers/imgClass/index.js","Home/helpers/dialogFail/index.js","switch.js","Home/api/index.js","Home/api_controller/index.js","Home/helpers/colors/index.js","Home/register/index.js","Home/helpers/dialogCheck/index.js","Home/topbar/dialogMenu/index.js","Home/socket/WebSocket.js","Home/socket/socket.js","Home/topbar/index.js","Home/chat/chatVerlauf.js","Home/chat/search.js","Home/chat/chatroom.js","Home/chat/chatImage/rotateImage.js","Home/chat/emoji/index.js","Home/chat/chatImage/index.js","Home/chat/inputDevice.js","Home/helpers/get_Id.js","Home/chat/index.js","Home/profile/index.js","Home/colorMenu/index.js","Home/index.js","index.js","Home/chat/emoji/emojiRegex.js"],"names":["createImage","url","Promise","resolve","reject","image","Image","addEventListener","error","setAttribute","src","getRadianAngle","degreeValue","Math","PI","getCroppedImg","imageSrc","pixelCrop","a","rotation","canvas","document","createElement","ctx","getContext","safeArea","max","width","height","translate","rotate","drawImage","data","getImageData","putImageData","x","y","toBlob","file","URL","createObjectURL","getRotatedImage","ViewImg","props","dialogText","className","state","text","close","open","imgUrl","prevProps","this","setState","Dialog","fullScreen","onClick","size","alt","React","Component","Avatar","imgViewClose","e","imgViewOpen","stringToColor","str","hash","i","length","charCodeAt","colour","j","toString","substr","name","imgLow","imgHigh","imgView","user","divStyle","background","ava","charAt","lastPart","lastIndexOf","undefined","style","ORIENTATION_TO_ANGLE","readFile","reader","FileReader","result","readAsDataURL","ImgSize","onCropChange","crop","onCropComplete","croppedArea","croppedAreaPixels","onZoomChange","zoom","showResult","isCropping","croppedImage","callbackCorrectImg","onClose","img","correctImg","imageDataUrl","getOrientation","orientation","isHeic","heic2any","blob","toType","multiple","quality","then","res","heicFile","onHeicFileChange","catch","console","log","heicImg","heicLoad","onFileChange","target","files","type","spinner","loading","margin","color","oldImg","userName","aspect","id","accept","onChange","mobil","disabled","showGrid","DialogFail","dialogCallback","failChecked","num","api","setUrl","setPATH","serverUrl","axios","create","baseURL","config","headers","apiPic","apiChatPic","apiChat","apiChats","apiChatroomMap","apis","insertUser","payload","post","updateUserById","patch","deleteUserById","delete","getUserById","get","insertImg","deleteImgById","createChatroom","updateLastMess","put","updateChatroom","deleteChatroomById","getUserbyEmailAndPassw","getUserbySearch","getNext100Chats","getChatroomMapByUserId","messReadHandleByChatroomId","insertChatImg","deleteChatImgById","success","getUser","search","users","update","chatroom","chatroomMap","Map","resData","chatrooms","Object","keys","map","set","chatroomId","chats","chatroomUpgrade","ctrl","imgSave","newUserSave","getUserbyEAndP","getSearch","updateUser","deleteChatroom","deleteImg","deleteUser","getCharoomList","get100Mess","deleteFromChatroom","chatImgSave","deleteChatImg","highBlue","grey","pink","green","orange","white","black","accentColor","Regis","back","handleChange","value","croppedImg","picName","fetch","r","blobFile","File","noImg","email","password","phone","openDialogFail","txt","newUser","storageImg","insertNewUser","imgId","userDb","userFail","step","backgroundColor","bubbleColor","fontColor","fontColor2","bubbleColor2","regisSteps","bind","navibuttons","profilImg","DialogCheck","checked","MenuTab","chatroomClose","deleteId","openSelect","logoutHandle","logout","DialogCheckText","n","fontWeight","dialogCheck","userDelete","deleteUserBtn","cUserId","useContact","cMap","allMap","cName","cPic","callbackDialogcheck","cId","_id","userUpdate","updateUserCallback","clearStarage","localStorage","removeItem","Popover","anchorEl","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onBackdropClick","API_PATH","path","WebSocketService","callbacks","socketRef","instance","room","WebSocket","onopen","onmessage","socketNewMessage","onerror","message","onclose","parsedData","JSON","parse","command","messages","sendMessage","username","newMessageCallback","send","stringify","err","readyState","callback","socket","recursion","waitForSocketConnection","setTimeout","WebSocketInstance","getInstance","register","component","initChatUser","chatroomName","msg","userId","messageObject","author","newChatMessage","hack","charLength","hacking","callbackPool","messagesCallback","addCallbacks","unregisterHandler","disconnect","connect","roomName","pingContact","contact","contactPing","pingAnswer","answerPing","onEnterRoom","userStatus","statusUser","Topbar","getImg","build","updateUserHome","menuClose","dropdown","addChatUser","inviIndex","handleClickDropdown","divRef","current","client","s3upload","createRef","userData","prevState","invitUserName","invitUserImgUrl","ref","aria-owns","aria-haspopup","mobile","Preloader","ListItem","Chatbox","handleScroll","event","node","scrollHeight","scrollTop","clientHeight","backhandle","closeMess","scrollToBottom","messagesEnd","scrollIntoView","behavior","block","inline","imgChatBlase","singleEmoji","match","emojiRegex","join","chatVerlauf","dateformat","hour12","hour","minute","dateformat2","month","day","chat","lines","dateLine","read","Date","date","toLocaleString","push","borderBottomColor","toLocaleTimeString","messageStatus","key","indexOf","start","input","imgLoading","chatsLength","imgCount","filter","float","clear","el","Search","handleSearch","searchChatUser","placeholder","chatUser","searchFound","chatUserArr","forEach","selectUser","items","updateContactUser","chatUserId","contacts","find","conracts","Chatroom","runopenChatbox","openChat","openDialogCheck","searchUpdate","messageReads","inquiry","pic","picHigh","createRoom","sortMap","lastchatTime2","entries","sort","b","online","newMess","lastchat","lastchatUser","lastchatTime","toLocaleDateString","chatMap","usersMap","chatUserJoined","avatar","progress","chatroomView","openNewChat","Emoji","show","onEmojiClick","emojiObject","emoji","emojiPicker","chosenEmoji","setChosenEmoji","handleChangeEmoji","InputDevice","croom","charCount","useImg","mongoObjectId","getTime","replace","random","toLowerCase","connectSocket","rooms","Array","from","values","ping_room","setName","runChatroom","cRoom","runNewChatroom","sendData","createChatroomDb","selected","getId","creator","members","roomId","inquiryUser","answerContact","roomMap","newRoom","default","onSendMessage","m","user_id","chatverlauf","login","joinedUser","addMessagesCallback","onlineUser","answer","window","alert","hackTime","user_self","concat","status","splice","mapId","searchValue","getIdByValue","has","panel","scrollTo","main","Profile","dialogCheckText","newImg","userUpgrade","saveBtn","change","profileMain","colorChange","side","ColorMenu","changeColor","colorTaget","pos","leftUser","rightUser","exampleChat","colorMain","chatColor","textColor","Home","backHandleRegis","use","use4","profileUserUprade","updateImg_userDB","update_userDb","setItem","storageLogin","addUser","loadMap","remoteUser","handleKeyDown","updateWindowDimensions","frameToLogin","topbar","storage","getItem","removeEventListener","innerWidth","documentElement","setProperty","innerHeight","onKeyDown","loginLoad","updateMap","App","exact","ReactDOM","render","Fragment","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6479aa47.chunk.js","sourcesContent":["const createImage = url =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', error => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nfunction getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n * @param {File} image - Image File url\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\n * @param {number} rotation - optional rotation parameter\n */\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  const safeArea = Math.max(image.width, image.height) * 2\n\n  // set each dimensions to double largest dimension to allow for a safe area for the\n  // image to rotate in without being clipped by canvas context\n  canvas.width = safeArea\n  canvas.height = safeArea\n\n  // translate canvas context to a central location on image to allow rotating around the center.\n  ctx.translate(safeArea / 2, safeArea / 2)\n  ctx.rotate(getRadianAngle(rotation))\n  ctx.translate(-safeArea / 2, -safeArea / 2)\n\n  // draw rotated image and store data.\n  ctx.drawImage(\n    image,\n    safeArea / 2 - image.width * 0.5,\n    safeArea / 2 - image.height * 0.5\n  )\n  const data = ctx.getImageData(0, 0, safeArea, safeArea)\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width\n  canvas.height = pixelCrop.height\n\n  // paste generated rotate image with correct offsets for x,y crop values.\n  ctx.putImageData(\n    data,\n    0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x,\n    0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y\n  )\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise(resolve => {\n    canvas.toBlob(file => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n","\n\n\nexport const createImage = url =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', error => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nexport async function getRotatedImage(imageSrc, rotation = 0) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  const orientationChanged =\n    rotation === 90 || rotation === -90 || rotation === 270 || rotation === -270\n  if (orientationChanged) {\n    canvas.width = image.height\n    canvas.height = image.width\n  } else {\n    canvas.width = image.width\n    canvas.height = image.height\n  }\n\n  ctx.translate(canvas.width / 2, canvas.height / 2)\n  ctx.rotate((rotation * Math.PI) / 180)\n  ctx.drawImage(image, -image.width / 2, -image.height / 2)\n\n  return new Promise(resolve => {\n    canvas.toBlob(file => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n","import React from 'react';\nimport './index.css';\nimport Dialog from '@material-ui/core/Dialog';\nimport { GoX } from \"react-icons/go\";\n\n\n\n\n\n\n\n         \n\n\nexport class ViewImg extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            open: this.props.open,\n            imgUrl: this.props.imgUrl\n\n\n        }\n      \n    }\n\n\n    componentDidUpdate(prevProps){\n        if(this.props.open!==prevProps.open){\n            this.setState({open:this.props.open})\n        }\n        if(this.props.imgUrl!==prevProps.imgUrl){\n            this.setState({imgUrl:this.props.imgUrl})\n        }\n    }\n\n    dialogText = ()=>{\n        return(\n            <div className='dialogCheckText'>{this.state.text}</div>\n        )\n    }\n    close = ()=>{\n        this.props.close(true)\n    }\n\n    \n\n    render(){\n        return(\n            <Dialog \n            className='imgViewDialog'\n            open={this.state.open===true}\n            fullScreen>\n                <div className='imgViewHead'><button className='chatheadBtn' onClick={()=>this.close()}><GoX size={36}/></button></div>\n                <div className='imgViewFrame'>\n                    <div className='imgViewDiv'><img className='imgViewImg' src={this.state.imgUrl} alt='...'/></div>\n                </div>\n            </Dialog>\n        ); \n    }\n}\n\nexport default ViewImg;\n\n\n\n  ","import React from 'react';\nimport './index.css';\nimport ImgView from './../dialogViewImg'\n\n\n\n\nexport class Avatar extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            name: this.props.name,\n            imgLow: this.props.imgLow,\n            imgHigh: this.props.imgHigh,\n\n            \n            imgViewOpen:false,\n            imgView:null,\n        }\n    }\n\n    \n\n    \n    componentDidUpdate(prevProps){\n        if(this.props.name!==prevProps.name){\n            this.setState({user:this.props.name})\n        }\n        if(this.props.imgLow!==prevProps.imgLow){\n            this.setState({imgLow:this.props.imgLow, imgHigh: this.props.imgHigh})\n        }\n    \n    }\n\n    imgViewClose = (e)=>{\n        if(e){\n            this.setState({imgViewOpen:false})\n        }\n\n    }\n\n    \n    \n    stringToColor = (str)=> {\n        let hash = 0\n        for (var i = 0; i < str.length; i++) {\n            hash = str.charCodeAt(i) + ((hash << 5) - hash)\n          }\n          var colour = '#';\n          for (var j = 0; j < 3; j++) {\n            var value = (hash >> (j * 8)) & 0xFF;\n            colour += ('00' + value.toString(16)).substr(-2)\n          }\n          return colour;\n    }\n    \n\n    \n\n    render(){\n        const divStyle = {\n            background: this.stringToColor(this.state.name)\n        }\n        const ava = this.state.name.charAt(0)\n        const url = this.props.imgLow\n        let lastPart = 1\n        if(url){\n            lastPart = url.substr(url.lastIndexOf('/') + 1);\n        }\n        if(!this.props.imgLow || this.props.imgLow===undefined || lastPart==='null' || lastPart==='undefined'){\n            return(\n                <div className='avatar' style = {divStyle}>{ava}</div>\n            )\n        }else{\n            return(\n                <div>\n                    <img className='avatar'  src={this.state.imgLow} alt={this.state.name} onClick={()=>this.setState({imgViewOpen: true, imgView:this.state.imgHigh})}/>\n                    <ImgView open={this.state.imgViewOpen} imgUrl={this.state.imgView} close={this.imgViewClose}/>\n                </div>\n            )\n        }\n        \n    }\n}\n\nexport default Avatar;\n\n\n\n  ","import React, { Fragment } from 'react'\nimport Cropper from 'react-easy-crop'\nimport { getOrientation } from 'get-orientation/browser'\nimport getCroppedImg from './cropImage'\nimport { getRotatedImage } from './rotateImage'\nimport './index.css'\nimport Dialog from '@material-ui/core/Dialog';\nimport { FiCamera} from \"react-icons/fi\";\nimport { GoX } from \"react-icons/go\";\nimport heic2any from \"heic2any\";\nimport DotLoader from \"react-spinners/DotLoader\";\nimport Avatar from './../avatar'\n\n\n\n\nconst ORIENTATION_TO_ANGLE = {\n  '3': 180,\n  '6':  0,\n  '8': -90,\n}\n\n\n\nclass ImgSize extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      imageSrc: null,\n      crop: { x: 0, y: 0 },\n      zoom: 2,\n      aspect: 1 / 1,\n      croppedAreaPixels: null,\n      croppedImage: null,\n      isCropping: false,\n      correctImg: null,\n      file: null,\n      heicFile:null,\n      heicLoad: false,\n    }\n  }\n\n\n  onCropChange = crop => {\n    this.setState({ crop })\n  }\n\n  onCropComplete = (croppedArea, croppedAreaPixels) => {\n    this.setState({\n      croppedAreaPixels,\n    })\n  }\n\n  onZoomChange = zoom => {\n    this.setState({ zoom })\n  }\n\n  showResult = async () => {\n    try {\n      this.setState({\n        isCropping: true,\n      })\n      const croppedImage = await getCroppedImg(\n        this.state.imageSrc,\n        this.state.croppedAreaPixels\n      )\n      this.setState({\n        croppedImage,\n        isCropping: false,\n      },()=>this.callbackCorrectImg(croppedImage))\n    } catch (e) {\n      this.setState({\n        isCropping: false,\n      },()=>this.onClose())\n    }\n  }\n\n  // callback cropped Image......\n  callbackCorrectImg = async (e) =>{\n    this.props.img(e)\n    this.setState({correctImg: e})\n    this.close()\n  }\n\n  \n\n\n  onClose = async () => {\n    this.setState({\n      croppedImage: null,\n    })\n  }\n\n  rotation = async () => {\n    if(this.state.file=== null){\n      return\n    }\n    const file = this.state.file\n      let imageDataUrl = await readFile(file)\n\n      // auto rotation.....\n      const orientation = await getOrientation(file)\n      const rotation = ORIENTATION_TO_ANGLE[orientation]\n      if (rotation) {\n        imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\n      }\n      this.setState({\n        imageSrc: imageDataUrl,\n        crop: { x: 0, y: 0 },\n        zoom: 1,\n      })\n    \n  }\n\n\n  isHeic = async file =>{\n    await heic2any({\n      blob: file,\n      toType: \"image/jpeg\",\n      multiple: false,\n      quality: 0.2\n    })\n      .then(res=> {\n        this.setState({heicFile:res},()=>this.onHeicFileChange())\n      })\n    .catch((e) => {\n      console.log('catch file')\n      console.log(e)\n    });\n    \n\n    \n  }\n\n  onHeicFileChange = async()  => {\n    const heicImg = this.state.heicFile\n    let imageDataUrl = await readFile(heicImg)\n\n    // auto rotation.....\n    const orientation = await getOrientation(heicImg)\n    const rotation = ORIENTATION_TO_ANGLE[orientation]\n    if (rotation) {\n       imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\n    }\n    this.setState({\n      file: heicImg,\n      heicLoad:false,\n      imageSrc: imageDataUrl,\n      crop: { x: 0, y: 0 },\n      zoom: 1,\n    })\n  }\n\n  onFileChange = async e => {\n    if (e.target.files && e.target.files.length > 0) {\n      const file = e.target.files[0]\n      if(file.type==='image/heic'){\n        this.setState({heicLoad:true},()=>this.isHeic(file))\n        return\n      }\n      let imageDataUrl = await readFile(file)\n\n      // auto rotation.....\n      const orientation = await getOrientation(file)\n      const rotation = ORIENTATION_TO_ANGLE[orientation]\n      if (rotation) {\n        imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\n      }\n      this.setState({\n        file: file,\n        imageSrc: imageDataUrl,\n        crop: { x: 0, y: 0 },\n        zoom: 1,\n      })\n    }\n  }\n\n\n\n  \n\n\n  close = async ()=>{\n      this.setState({imageSrc:null})\n  }\n\n  spinner = ()=>{\n    const loading = this.state.heicLoad\n    if(loading){\n      return(\n        <div className='heicSpinner'><DotLoader size={50} margin={2} color='#000000' loading={loading}/></div>\n      )\n    }else if(this.props.oldImg){\n      return(\n          <Avatar name={this.props.userName} imgUrl={this.props.imgUrl}/>\n      )\n\n    \n    }else{\n      return(\n        <button className=\"fakefile\"><FiCamera size={30}/></button>\n      )\n    }\n }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"ggg\">\n          <div className=\"picPos\">\n            <div className=\"imgPadd\">{this.spinner()}</div>\n            <input id=\"fileInput\" className=\"hidden\" type=\"file\" accept=\"image/* .heic\" multiple=\"multiple\" onChange={this.onFileChange}/>  \n            </div>\n          </div>\n          <Dialog \n          className='ImgSizeDialog'\n          open={!!this.state.imageSrc}\n          fullScreen>\n          <div className={!this.props.mobil?'imgSizeFrame':'imgSizeFrameMobil'}>\n            <div className='imgSizeHeadDiv'>\n            <button className=\"imgSizeHeadDivReturnBtnI\"\n                    onClick={()=>{this.setState({imageSrc: null})}}\n                    disabled={this.state.isCropping}>\n                    <GoX className='imgSizeHeadDivReturnIcon' size={35}/>\n            </button>\n            </div>\n            {this.state.imageSrc && (\n            <Fragment>\n              <div className=\"crop-container\">\n                <Cropper\n                  image={this.state.imageSrc}\n                  crop={this.state.crop}\n                  zoom={this.state.zoom}\n                  aspect={this.state.aspect}\n                  onCropChange={this.onCropChange}\n                  onCropComplete={this.onCropComplete}\n                  onZoomChange={this.onZoomChange}\n                  showGrid={false}\n                />\n              </div>\n                <div className=\"buttonAuswahlConImgSize\">\n                  <button className=\"buttonAuswahl\" onClick={this.showResult} disabled={this.state.isCropping}>Auswahl</button>\n                </div>\n          </Fragment>\n        )}\n        </div>\n        </Dialog>\n      </div>\n     \n    )\n  }\n}\n\nfunction readFile(file) {\n  return new Promise(resolve => {\n    const reader = new FileReader()\n    reader.addEventListener('load', () => resolve(reader.result), false)\n    reader.readAsDataURL(file)\n  })\n}\n\n\nexport default ImgSize;","import React from 'react';\nimport './index.css';\nimport Dialog from '@material-ui/core/Dialog';\n\n\n\n\n\n\n\n         \n\n\nexport class DialogFail extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            text: this.props.text,\n            open: this.props.open,\n        }\n      \n    }\n\n\n    componentDidUpdate(prevProps){\n        if(this.props.open!==prevProps.open){\n            this.setState({open:this.props.open})\n        }\n        if(this.props.text!==prevProps.text){\n            this.setState({text:this.props.text})\n        }\n    }\n\n    dialogText = ()=>{\n        return(\n            <div className='dialogCheckText'>{this.state.text}</div>\n        )\n    }\n    dialogCallback = (e)=>{\n        this.props.failChecked(e)\n    }\n\n    \n\n    render(){\n        return(\n            <Dialog \n            className='checkDialog'\n            open={this.state.open===true}\n            fullScreen>\n                <div className='dialogCheckFrame'>\n                    {this.dialogText()}\n                    <div className='placeholderDiv'></div>\n                    <div className='dialogCheckBtnDiv'>\n                        <button className='dialogCheckBtn' onClick={()=>this.dialogCallback(true)}>Ok</button>\n                    </div>\n                </div>\n            </Dialog>\n        ); \n    }\n}\n\nexport default DialogFail;\n\n\n\n  ","\nconst local = false\n\nlet num = null\nif(!local){\n    num = 0\n}else{\n    num = 1\n}\n\n\n\nconst API_PATH = ['wss://archa-backend.herokuapp.com/ws/chat/','ws://localhost:3000/ws/chat/']\n\n\n\nconst API_URL = ['https://archa-backend.herokuapp.com','http://localhost:3000']\n\n\n\n\n\n\n\nconst setUrl = API_URL[num]\nconst setPATH = API_PATH[num]\n\nconst api ={\n    setUrl,\n    setPATH\n}\n\nexport default api","\n/*\n.catch(function (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  });\n  */\n\n\nimport axios from 'axios'\nimport url from './../../switch'\n\n\n// django\nconst serverUrl =  url.setUrl\nconst api = axios.create({\n    baseURL: serverUrl+'/api',\n\n})\nexport const insertUser = payload => api.post(`/user`, payload)\nexport const updateUserById = (id, payload) => api.patch(`/user/${id}`, payload)\nexport const deleteUserById = id => api.delete(`/user/${id}`)\nexport const getUserById = id => api.get(`/user/${id}`)\nexport const getUserbyEmailAndPassw = payload => api.put(`/user`, payload)\nexport const getUserbySearch = payload => api.patch(`/user`, payload)\n\n\n// Filedata Img Django Rest-framework\n///\nconst config = {\n  headers: {\n    'Content-Type': 'multipart/form-data;boundary=boundary',\n    'Content-Disposition': 'attachment;filename=file.jpg',\n    \n  },\n}\nconst apiPic = axios.create({\n    baseURL: serverUrl+'/apiimg'\n})\nexport const insertImg = payload => apiPic.post(`/images`, payload, config)\nexport const deleteImgById = id => apiPic.delete(`/images/${id}`)\n\nconst apiChatPic = axios.create({\n  baseURL: serverUrl+'/apichatimg'\n})\nexport const insertChatImg = payload => apiChatPic.post(`/images`, payload, config)\nexport const deleteChatImgById = id => apiChatPic.delete(`/images/${id}`)\n\n\n\nconst apiChat = axios.create({\n    baseURL: serverUrl+'/apichat',\n})\nexport const createChatroom = payload => apiChat.post(`/chatroom`, payload)\nexport const updateChatroom = (id,payload) => apiChat.put(`/chatroom/${id}`, payload)\nexport const deleteChatroomById = (id,payload) => apiChat.delete(`/chatroom/${id}`, payload)\n\n\nconst apiChats = axios.create({\n    baseURL: serverUrl+'/apichats',\n})\nexport const getNext100Chats = id => apiChats.get(`/chats/${id}`)\nexport const updateLastMess = (id,payload)=> apiChats.put(`/chats/${id}`,payload)\nexport const messReadHandleByChatroomId = (id,payload)=> apiChats.patch(`/chats/${id}`, payload)\n\n\nconst apiChatroomMap = axios.create({\n    baseURL: serverUrl+'/apichatroommap',\n})\nexport const getChatroomMapByUserId = id => apiChatroomMap.get(`/${id}`)\n\n\n\n\n\n\n\nconst apis = {\n    insertUser,\n    updateUserById,\n    deleteUserById,\n    getUserById,\n    insertImg,\n    deleteImgById,\n    createChatroom,\n    updateLastMess,\n    updateChatroom,\n    deleteChatroomById,\n    getUserbyEmailAndPassw,\n    getUserbySearch,\n    getNext100Chats,\n    getChatroomMapByUserId,\n    messReadHandleByChatroomId,\n    insertChatImg,\n    deleteChatImgById\n    \n}\n\n\nexport default apis","\nimport api from './../api/index'\n\n\n\n\n\n  /////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////BILDER///////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n\n\n\n  // Speichere Bild User\n  export async function imgSave(file) {\n    const e = await api.insertImg(file).then(res=> {\n      console.log(res)\n        const imgId = res.data\n        /*\n        .id\n        .imgLow\n        .imgHigh\n        */\n        return imgId\n    })\n\n        \n    \n    return e\n  }\n\n\n  // lösche Bild. User ....\n  export async function deleteImg(id){\n    const e = await api.deleteImgById(id).then(res=>{\n      if(res){\n        console.log('bild gelöscht !')\n        return res.success\n      }\n    })\n    return e\n  }\n\n\n  // Speichere Bild Chats\n  export async function chatImgSave(file) {\n    const e = await api.insertChatImg(file).then(res=> {\n      console.log(res)\n        const imgId = res.data\n        /*\n        .id\n        .imgLow\n        .imgHigh\n        */\n        return imgId\n    })\n\n        \n    \n    return e\n  }\n\n\n  // lösche Bild Chats ....\n  export async function deleteChatImg(id){\n    const e = await api.deleteImgById(id).then(res=>{\n      if(res){\n        console.log('bild gelöscht !')\n        return res.success\n      }\n    })\n    return e\n  }\n\n\n\n\n\n\n\n\n/////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////USER///////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n\n\n\n  // Speichere neuen USer\nexport async function newUserSave(payload) {\n    const e = await api.insertUser(payload).then(res => {\n      console.log('res- new User')\n      console.log(res)\n      const userDb = res.data\n      return userDb\n    })\n    return e\n  }\n\n  // suche user nach id\n  export async function getUser(id){\n    const e = await api.getUserById(id).then(res=>{\n      if(res.data.success){\n        const user = res.data.data\n        return user\n      }else{\n        return false\n      }\n      \n    })\n    return e\n  }\n\n\n  // suche user nach Email und password\n  export async function getUserbyEAndP(payload){\n    const e = await api.getUserbyEmailAndPassw(payload).then(res=>{\n      if(!res.data.userName){\n        return false\n      }else{\n        const user = res.data\n        console.log(user)\n        return user\n      }\n      \n    })\n    return e\n  }\n\n  \n\n  // suche .....\n  export async function getSearch(search){\n    const e = await api.getUserbySearch(search).then(res=>{\n      if(res.data.success){\n        const user = res.data.users\n        console.log(user, ' gefunden !')\n        return user\n      }else{\n        return false\n      }\n      \n    })\n    return e\n  }\n\n   // update User....\n  export async function updateUser(id,payload){\n    const e = await api.updateUserById(id, payload).then(res=>{\n      console.log(res)\n      if(res.data.success){\n        const user = res.data.update\n        return user\n      }else{\n        return false\n      }\n      \n    })\n    return e\n  }\n\n\n  // lösche User.....\n  export async function deleteUser(id){\n    const e = await api.deleteUserById(id).then(res=>{\n      if(res){\n        return res.success\n      }\n    })\n    return e\n  }\n\n\n\n\n\n\n\n\n\n\n\n/////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////Chatroom///////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n\n  // erstelle Chatroom\n  export async function createChatroom(payload) {\n    const chatroom = await api.createChatroom(payload).then(res => {\n      const chatroomData = res.data\n      return chatroomData\n    })\n    return chatroom\n  }\n\n\n  \n\n   // update Chatroom....\n   export async function updateChatroom(id,payload){\n    const e = await api.updateChatroom(id, payload).then(res=>{\n      if(res.data.success){\n        return true\n      }else{\n        return false\n      }\n      \n    })\n    return e\n  }\n \n\n  // lösche chatroom.....\n  export async function deleteChatroom(id){\n    const e = await api.deleteChatroomById(id).then(res=>{\n      if(res){\n        return res.success\n      }\n    })\n    return e\n  }\n\n\n\n\n/////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////Chatrooms///////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n\n  export async function getCharoomList(id){\n    const chatroomMap = new Map()\n    console.log('lade liste chatroom')\n    await api.getChatroomMapByUserId(id).then(res=> {\n      const resData = res.data.chatrooms\n      console.log(resData)\n      const chatrooms = Object.keys(resData)\n      console.log(chatrooms)\n      chatrooms.map(e=> chatroomMap.set(e, resData[e]))\n    })\n    return chatroomMap\n    \n  }\n\n  export async function get100Mess(chatroomId){\n    const chats = await api.getNext100Chats(chatroomId).then(res=> {return res.data.data})\n    if(chats){\n      return chats\n    }\n    \n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   /////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////delete Chatroom ///////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n\n\n  export async function deleteFromChatroom(chatroomId,id ){\n    const chatroomUpgrade = await api.deleteChatroomById(chatroomId).then(res=>{\n      if(res.data.success){\n        const update = getUser(id)\n        return update\n      }\n    })\n    return chatroomUpgrade\n    \n  }\n\n\n\n\n  \n\n\n\n  const ctrl =  {\n    imgSave,\n    newUserSave,\n    getUser,\n    getUserbyEAndP,\n    getSearch,\n    updateUser,\n    createChatroom,\n    updateChatroom,\n    deleteChatroom,\n    deleteImg,\n    deleteUser,\n    getCharoomList,\n    get100Mess,\n    deleteFromChatroom,\n    chatImgSave,\n    deleteChatImg\n    \n\n  }\n  export default ctrl","\n\n// colors\nconst highBlue = '#5ba3c7'\nconst grey = '#f0f0f0'\nconst pink = '#e8c8c8'\nconst green = '#a3c49f'\nconst orange = '#ebd7b7'\nconst white = '#ffffff'\nconst black = '#212121'\n\nconst accentColor = '#2e96e0'\n\nconst color = {highBlue, grey, pink, green, orange, white, black, accentColor } \n\nexport default color\n","import React from 'react';\nimport './index.css';\nimport { MdKeyboardArrowLeft, MdKeyboardArrowRight } from \"react-icons/md\";\nimport ImgSize from './../helpers/imgClass'\nimport DotLoader from \"react-spinners/DotLoader\"\nimport DialogFail from './../helpers/dialogFail'\nimport ctrl from './../api_controller'\nimport color from './../helpers/colors'\n\n\n\n\nexport class Regis extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            step: 1,\n            email:'',\n            phone:'',\n            userName:'',\n            password:'',\n            img:'',\n            imgUrl:'',\n            noImg: true,\n            imgId: null,\n            insertNewUser: false,\n            openDialogFail: false,\n            text: '',\n            // standart Farbeinstellung\n            color: {\n                backgroundColor: color.white,\n                bubbleColor: color.highBlue,\n                fontColor: color.white,\n                fontColor2: color.black,\n                bubbleColor2: color.grey\n            },\n\n                    \n        }\n        this.regisSteps = this.regisSteps.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.navibuttons = this.navibuttons.bind(this)\n        this.profilImg = this.profilImg.bind(this)\n        this.insertNewUser = this.insertNewUser.bind(this)\n    }\n\n\n    \n    \n    back=(e)=>{\n        this.props.back(e)\n    }\n    handleChange = ({ target }) => {\n        this.setState({ [target.name]: target.value })\n    }\n    croppedImg = async (e)=>{ \n        const picName = this.state.userName\n        let file = await fetch(e)\n        .then(r => r.blob())\n        .then(blobFile => new File([blobFile], picName, {type: \"image/jpeg\", name: 'file' }))\n        this.setState({\n            img:file,\n            imgUrl:e,\n            noImg:false, \n        })\n    }\n\n\n\n    insertImg = async()=>{\n        // neuer User ohne Profilbild......\n        if(!this.state.imgUrl){\n            const {userName, email, password, phone, color} = this.state\n            const payload = {userName, email, password, phone, color}\n            if(userName===''|| email===''|| password===''){\n                const txt = 'um sich anzumelden, müssen die Felder Email, Benutzernamen und passwort ausgefüllt sein!'\n                return this.setState({text: txt, openDialogFail:true})\n            }\n            const user = await ctrl.newUserSave(payload)\n            if (user){\n                if(user.success ===false){\n                \n                    const txt = 'Ihre email: '+email+' wird schon von eine anderen Benutzer benutzt'\n                    return this.setState({text: txt, openDialogFail:true})\n                }\n                return this.props.newUser(user)\n            }\n        }\n        \n        const img = this.state.img\n        const storageImg = await ctrl.imgSave(img)\n        if(storageImg){\n            this.insertNewUser(storageImg)\n        }\n    \n    }\n\n    insertNewUser= async(res)=>{\n        const imgLow = res.imgLow\n        const imgHigh = res.imgHigh\n        const imgId = res.id\n        const {userName, email, password, phone, color} = this.state\n        const payload = {userName, email, password, phone, imgId, imgLow, imgHigh, color}\n        const userDb = await ctrl.newUserSave(payload)\n        if (userDb){\n            if(!userDb.id){\n                const txt = 'Ihre email: '+userDb.email+' wird schon von eine anderen Benutzer benutzt'\n                return this.setState({text: txt, openDialogFail:true})\n            }else{\n                this.setState({insertNewUser:true})\n                this.props.newUser(userDb)\n            }\n            \n        }\n\n\n    }\n\n\n\n    profilImg(){\n        if(this.state.noImg){\n            return(\n                <div className=\"regisImgDiv\">\n                    <ImgSize img={this.croppedImg} mobil={this.props.mobil} />\n                </div>\n            )\n        }\n        return(\n            <div className=\"regisImgDiv\">\n                <img className='regisImg' src={this.state.imgUrl} alt={this.state.userName}></img>\n                <button className='regisImgBtn' onClick={()=>this.setState({noImg:true})}>x</button>\n            </div>\n        );                    \n    }\n    \n\n    regisSteps(){\n        switch(this.state.step){\n            case 1:\n                return(\n                    <div className='regisStepsDiv'>\n                        <div className='loginframeTxt2'>Telefonnummer:</div>\n                        <div className='regisInputDiv'><input className='regisInput' type='number' name='phone' value={this.state.phone} onChange={this.handleChange}></input></div>\n                        <div className='loginframeTxt2'>oder</div>\n                        <div className='loginframeTxt2'>E-mail:</div>\n                        <div className='regisInputDiv'><input className='regisInput' type='email' name='email' value={this.state.email} onChange={this.handleChange}></input></div>\n                    </div>\n                )\n            case 2:\n                return(\n                    <div className='regisStepsDiv'>\n                        {this.profilImg()}\n                        <div className='loginframeTxt2'>Benutzername:</div>\n                        <div className='regisInputDiv'><input className='regisInput' type='text' name='userName' value={this.state.userName} onChange={this.handleChange}></input></div>\n                        <div className='loginframeTxt2'></div>\n                        <div className='loginframeTxt2'>Passwort:</div>\n                        <div className='regisInputDiv'><input className='regisInput' type='text' name='password' value={this.state.password} onChange={this.handleChange}></input></div>\n                    </div>\n                )\n            case 3:\n                const loading = this.state.insertNewUser\n                return(\n                    <div className='regisStepsDiv'>\n                        <div className='loginframeTxt2'>erstellt</div>\n                        <div className='loginframeTxt2'>Benutzer</div>\n                        <div className='heicSpinner'><DotLoader size={50} margin={2} color='#639cdd' loading={loading}/></div>\n                    </div>\n                )\n            default:\n                return(null)\n        }\n    }\n\n    navibuttons(){\n        if(this.state.step===1){\n            return(\n                <div className=\"regisStepsBtnDiv\">\n                    <button className=\"regisStepsBtnBack\" onClick={()=>{this.state.step===1?this.back(true):this.setState({step: this.state.step - 1})}}>\n                        <MdKeyboardArrowLeft size={40}/>\n                        <div className=\"regisStepsTextBtn\">zurück</div>\n                    </button>   \n                    <button className=\"regisStepsBtnNext\" onClick={()=>{this.setState({step: this.state.step + 1})}}>\n                        <div className=\"regisStepsTextBtn\">weiter</div>\n                        <MdKeyboardArrowRight size={40}/>\n                    </button>  \n                </div> \n            )\n        }else if(this.state.step===2){\n            return(\n                <div className=\"regisStepsBtnDiv\">\n                    <button className=\"regisStepsBtnBack\" onClick={()=>{this.setState({step: this.state.step - 1})}}>\n                        <MdKeyboardArrowLeft size={40}/>\n                        <div className=\"regisStepsTextBtn\">zurück</div>\n                    </button> \n                    <button className=\"regisStepsBtnNext\" onClick={()=>{this.setState({step: this.state.step + 1 },()=>this.insertImg())}}>\n                        <div className=\"regisStepsTextBtn\">erstellen</div>\n                        <MdKeyboardArrowRight size={40}/>\n                    </button> \n                </div> \n            )\n        }else{\n            \n        }\n    }\n    \n\n    userFail = ()=>{\n        this.setState({openDialogFail:false, step:1})\n    }\n\n    \n\n    render(){\n        return(\n            <div className='regisScreen'>\n            {this.regisSteps()}\n            {this.navibuttons()}\n            <DialogFail text={this.state.text} open={this.state.openDialogFail} failChecked={this.userFail}/>\n                \n            </div>\n        ); \n    }\n}\n\n\nexport default Regis;\n\n\n\n  ","import React from 'react';\nimport './index.css';\nimport Dialog from '@material-ui/core/Dialog';\n\n\n\n\n\n\n\n         \n\n\nexport class DialogCheck extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            text: this.props.text,\n            open: this.props.open,\n\n\n        }\n      \n    }\n\n\n    componentDidUpdate(prevProps){\n        if(this.props.open!==prevProps.open){\n            this.setState({open:this.props.open})\n        }\n        if(this.props.text!==prevProps.text){\n            this.setState({text:this.props.text})\n        }\n    }\n\n    dialogText = ()=>{\n        return(\n            <div className='dialogCheckText'>{this.state.text}</div>\n        )\n    }\n    dialogCallback = (e)=>{\n        this.props.checked(e)\n    }\n\n    \n\n    render(){\n        return(\n            <Dialog \n            className='checkDialog'\n            open={this.state.open===true}\n            fullScreen>\n                <div className='dialogCheckFrame'>\n                    {this.dialogText()}\n                    <div className='placeholderDiv'></div>\n                    <div className='dialogCheckBtnDiv'>\n                        <button className='dialogCheckBtn' onClick={()=>this.dialogCallback(true)}>ja</button>\n                        <button className='dialogCheckBtn' onClick={()=>this.dialogCallback(false)}>nein</button>\n                    </div>\n                </div>\n            </Dialog>\n        ); \n    }\n}\n\nexport default DialogCheck;\n\n\n\n  ","import React from 'react';\nimport './index.css';\nimport { Popover  } from '@material-ui/core';\nimport Avatar from './../../helpers/avatar'\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport DialogCheck from './../../helpers/dialogCheck'\nimport ctrl from './../../api_controller'\n\n\n\nexport class MenuTab extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            open: this.props.open,\n            imgUrl: this.props.imgHigh,\n            user: this.props.user,\n            useContact: this.props.useContact,\n            dialogCheck: false,\n            text:'',\n            userDelete: null\n        }\n      \n    }\n\n\n    componentDidUpdate(prevProps){\n        if(this.props.open!==prevProps.open){\n            this.setState({open:this.props.open})\n        }\n        if(this.props.user!==this.state.user){\n            this.setState({user:this.props.user})\n        }\n    }\n\n    componentWillUnmount(){\n        this.setState({text:'', userDelete: null})\n    }\n\n    close = ()=>{\n        this.props.close(true)\n    }\n    chatroomClose = (deleteId)=>{\n        this.props.chatroomClose(deleteId)\n        this.props.close(true)\n    }\n\n    openSelect = (e)=>{\n        this.props.openSelect(e)\n    }\n\n    logoutHandle = ()=>{\n        this.close()\n        this.props.logout(true)\n    }\n\n    DialogCheckText = (n, id)=>{\n        const text = <div >bist du dir sicher das du <div style={{fontWeight: \"bold\"}}>{n}</div> und den gesamten Chat aus deinem Account löschen willst ?</div>\n        this.setState({text: text, dialogCheck: true, userDelete: id })\n    }\n\n\n    deleteUserBtn = ()=>{\n        const cUserId = this.props.useContact \n        const cMap = this.props.chatroomMap\n        const allMap = new Map([...cMap])\n        if(cUserId===null || allMap.size===0){\n            return null\n        }\n        const cName = allMap.get(cUserId).userName\n        const cPic = allMap.get(cUserId).imgLow\n        return(\n            <button className='Menubtnchatroomuser' onClick={()=>this.DialogCheckText(cName, cUserId)}>\n                        <div className='Menuchatroomuser'>\n                        \n                            <div className='MenuchatroomuserDiv'>\n                            <div className='MenuTrashIconDiv'> <FaTrashAlt className='trashMenuIcon' size={20}/></div>\n                                <div className=\"MenuchatroomImgDiv\">\n                                    <Avatar name={cName} imgUrl={cPic}/>\n                                </div>\n                                 <div className='MenuchatroomProfilName'>{cName}</div>\n                            </div>\n                        </div>\n                        </button>\n        )\n    }\n    \n    callbackDialogcheck = async(e)=>{\n        if(e){\n            const cMap = this.props.chatroomMap\n            const allMap = new Map([...cMap])\n            const cUserId = this.props.useContact \n            const cId = allMap.get(cUserId).chatroomId\n            const userUpdate = await ctrl.deleteFromChatroom(cId, this.state.user._id )\n            if(userUpdate){\n                this.setState({dialogCheck: false},()=>this.props.updateUserCallback(userUpdate))\n                this.chatroomClose(cId)\n                \n            }\n        }else{\n            this.setState({dialogCheck: false,})\n        }\n       \n        \n    }\n\n    clearStarage=()=>{\n        localStorage.removeItem('login_archa')\n        this.logoutHandle()\n    }\n\n    \n\n\n\n    \n\n    render(){\n        /* openSelect....... \n\n            => 5 === openProfile\n            => 6 === openSudoku\n\n\n        */\n        return(\n            <Popover \n            id='menu-topbar'\n            anchorEl={this.props.anchorEl}\n            getContentAnchorEl={null}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            onBackdropClick= {()=>this.close()}\n            open={this.state.open===true}\n             >\n                <div className={!this.props.mobil?'topbarDropdownFrame':'topbarDropdownFrameMobil'}>\n                    <button className='topbarDropdownBtn' onClick={()=>this.openSelect(2)} >Profil</button>\n                    <button className='topbarDropdownBtn' onClick={()=>this.openSelect(3)} >Farben</button>\n                    <button className='topbarDropdownBtn' >über Archa</button>\n                    <button className='topbarDropdownBtn' >Impressum</button>\n                    {!this.props.useContact?<button className='topbarDropdownBtn' >löschen</button>:this.deleteUserBtn()}\n                    <button className='topbarDropdownBtn' onClick={()=>this.clearStarage()}>Abmelden </button>\n                    <button className='topbarDropdownBtn' onClick={()=>this.logoutHandle()}>Ausloggen</button>\n                    <DialogCheck text={this.state.text} open={this.state.dialogCheck} checked={this.callbackDialogcheck}></DialogCheck>\n                </div>\n            </Popover>\n        ); \n    }\n}\n\nexport default MenuTab\n\n\n\n  ","\nimport path from './../../switch'\n//const API_PATH = 'ws://localhost:3000/ws/chat/';\nconst API_PATH = path.setPATH\n\nclass WebSocketService {\n  static instance = null;\n  callbacks = {};\n\n  static getInstance() {\n    if (!WebSocketService.instance) {\n      WebSocketService.instance = new WebSocketService();\n    }\n    return WebSocketService.instance;\n  }\n\n  constructor() {\n    this.socketRef = null;\n  }\n\n\n  connect(room) {\n    const path = API_PATH+room+'/';\n    this.socketRef = new WebSocket(path);\n    this.socketRef.onopen = (e) => {\n      console.log(e)\n      console.log('WebSocket open');\n    };\n    this.socketRef.onmessage = e => {\n      this.socketNewMessage(e.data);\n    };\n\n    this.socketRef.onerror = e => {\n      console.log(e.message);\n    };\n    this.socketRef.onclose = () => {\n      console.log(\"WebSocket closed let's reopen\");\n      //this.connect();\n    };\n  }\n  disconnect(){\n    console.log('websocket schllesen')\n    this.socketRef.close()\n  }\n\n  socketNewMessage(data) {\n    const parsedData = JSON.parse(data);\n    const command = parsedData.command;\n    if (Object.keys(this.callbacks).length === 0) {\n      return;\n    }\n    if (Object.keys(this.callbacks).length > 0) {\n    }\n    if (command === 'messages') {\n      console.log(command, 'socket')\n      this.callbacks[command](parsedData.messages);\n    }\n    if (command === 'new_message') {\n      console.log('socket_new_mess ')\n      this.callbacks[command](parsedData.message);\n    }\n    if (command === 'new_room') {\n      console.log('socket_new_room')\n      this.callbacks[command](parsedData.message);\n    }\n    if (command === 'create_room') {\n      console.log('socket_create_room')\n      this.callbacks[command](parsedData.message);\n    }\n    if (command === 'read_message') {\n      console.log('socket_read_message')\n      this.callbacks[command](parsedData.message);\n    }\n    if (command === 'init_chat') {\n      console.log('socket_status => user init')\n      this.callbacks[command](parsedData.message);\n    }\n    if (command === 'user_status') {\n      console.log('socket_status => user status')\n      this.callbacks[command](parsedData.message);\n    }\n    if (command === 'hacking') {\n      console.log('socket_status => keyboard hack')\n      this.callbacks[command](parsedData.message);\n    }\n  }\n\n  initChatUser(user) {\n    //console.log('initChatUser  => : ', user)\n    this.sendMessage({ command: 'init_chat', user });\n  }\n\n  fetchMessages(username) {\n    //console.log('fetchMessage  => : ', username)\n    this.sendMessage({ command: 'fetch_messages', username: username });\n  }\n\n  newChatMessage(message) {\n    message.command = 'new_message'\n    //console.log('newChatMessage  => : ', message, '=> send !')\n    this.sendMessage(message); \n     \n  }\n\n  onEnterRoom(message) {\n    message.command = 'read_message'\n    //console.log('on Enter Chatroom  => : ', message, '=> send !')\n    this.sendMessage(message); \n     \n  }\n\n  contactPing(message) {\n    message.command = 'contact_ping'\n    //console.log('newPingMessage  => : ', message, '=> send !')\n    this.sendMessage(message); \n     \n  }\n\n  answerPing(message) {\n    message.command = 'answer_ping'\n    //console.log('newPingMessage  => : ', message, '=> send !')\n    this.sendMessage(message); \n  }\n\n  statusUser(message) {\n    message.command = 'user_status'\n    //console.log('online  /  offline status  => : ', message, '=> send !')\n    this.sendMessage(message); \n     \n  }\n\n  hacking(message) {\n    message.command = 'hacking'\n    //console.log('keyboard hack => : ', message, '=> send !')\n    this.sendMessage(message); \n     \n  }\n\n  addCallbacks(newMessageCallback) {\n    this.callbacks['new_message'] = newMessageCallback;\n    this.callbacks['new_room'] = newMessageCallback;\n    this.callbacks['create_room'] = newMessageCallback;\n    this.callbacks['read_message'] = newMessageCallback;\n    this.callbacks['init_chat'] = newMessageCallback;\n    this.callbacks['user_status'] = newMessageCallback;\n    this.callbacks['hacking'] = newMessageCallback;\n  }\n  \n  sendMessage(data) {\n    try {\n      this.socketRef.send(JSON.stringify({ ...data }));\n    }\n    catch(err) {\n      console.log(err.message);\n    }  \n  }\n\n  state() {\n    return this.socketRef.readyState;\n  }\n\n   waitForSocketConnection(callback){\n    const socket = this.socketRef;\n    const recursion = this.waitForSocketConnection;\n    setTimeout(\n      function () {\n        if (socket.readyState === 1) {\n          console.log(\"Connection is made\")\n          if(callback != null){\n            callback();\n          }\n          return;\n\n        } else {\n          console.log(\"wait for connection...\")\n          recursion(callback);\n        }\n      }, 1); // wait 5 milisecond for the connection...\n  }\n\n}\n\nconst WebSocketInstance = WebSocketService.getInstance();\n\nexport default WebSocketInstance;\n","\nimport WebSocketInstance from './WebSocket'\n\n\nconst waitForSocketConnection = (callback)=> {\n  const component = this;\n  setTimeout(\n    function () {\n      // Check if websocket state is OPEN\n      if (WebSocketInstance.state() === 1) {\n        console.log(\"Connection is made\")\n        callback();\n        return;\n      } else {\n        console.log(\"wait for connection...\")\n        component.waitForSocketConnection(callback);\n      }\n  }, 500); // wait 100 milisecond for the connection...\n}\n\n\nexport default function () {\n  console.log('connection ws')\n  \n  \n\n  function callbackPool(messagesCallback) {\n      WebSocketInstance.addCallbacks(messagesCallback)\n    \n  }\n\n  function connect(roomName){\n    WebSocketInstance.connect(roomName)\n  }\n\n  function disconnect(){\n    console.log('hier')\n    WebSocketInstance.disconnect()\n  }\n\n  function unregisterHandler() {\n  }\n  function register(user) {\n    waitForSocketConnection(()=>\n    \n      WebSocketInstance.initChatUser(user)\n    )\n  }\n\n\n  function onEnterRoom(chatroomName, user) {\n    const messageObject = {\n      room: chatroomName,\n      user: user\n    };\n    WebSocketInstance.onEnterRoom(messageObject);\n  }\n\n  function message(chatroomName, msg, imgHigh, imgLow, imgId, userId) {\n    const messageObject = {\n      author: userId,\n      text: msg,\n      room: chatroomName,\n      imgHigh: imgHigh,\n      imgLow: imgLow,\n      imgId: imgId\n    };\n    WebSocketInstance.newChatMessage(messageObject);\n  }\n\n  function pingContact(contact) {\n    const messageObject = contact\n    messageObject.text = 'new_room'\n    \n    WebSocketInstance.contactPing(messageObject);\n  }\n\n  function pingAnswer(contact) {\n    const messageObject = contact\n    messageObject.text = 'create_room'\n    \n    WebSocketInstance.answerPing(messageObject);\n  }\n\n  function userStatus(contact) {\n    const messageObject = contact\n    messageObject.text = 'user_status'\n    \n    WebSocketInstance.statusUser(messageObject);\n  }\n\n  function hack(chatroomName, charLength, author) {\n    const messageObject = {\n      text: 'hacking',\n      author,\n      charLength,\n      chatroomName,\n    };\n    WebSocketInstance.hacking(messageObject);\n\n  }\n\n\n  return {\n    register,\n    message,\n    hack,\n    callbackPool,\n    unregisterHandler,\n    disconnect,\n    connect,\n    pingContact,\n    pingAnswer,\n    onEnterRoom,\n    userStatus\n  }\n}","import React from 'react';\nimport './index.css';\nimport { MdMenu } from \"react-icons/md\";\nimport MenuClass from './dialogMenu'\nimport Avatar from './../helpers/avatar'\nimport socket from './../socket/socket'\nimport color from './../helpers/colors'\nimport { ClassicSpinner } from \"react-spinners-kit\";\n\n\n\n\n\nexport class Topbar extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            user: this.props.user,\n            imgUrl: null,\n            build:false,\n            dialogCheck:false,\n            inviIndex: null,\n            dropdown: false,\n            client: socket(),\n            accentColor: color.accentColor,\n            s3upload: false,\n\n        }\n        this.divRef = React.createRef();\n        this.userData = this.userData.bind(this)\n    }\n\n\n    \n    componentDidUpdate(prevProps, prevState){\n        if(this.props.user!==prevState.user){\n            if(this.props.user!==null){\n               this.setState({user:this.props.user, build:true})\n            }else{\n               this.setState({\n                   user:this.props.user, \n                   build:false,\n                   imgUrl: null,\n                   invitUserName:[],\n                   invitUserImgUrl:[],\n                   dialogCheck:false,\n                   inviIndex: null,\n                   dropdown: false,\n                   useContact: this.props.useContact,\n                   anchorEl: null\n                })\n            }\n           \n        }\n        if(this.props.user.imgHigh!==prevProps.user.imgHigh){\n            this.setState({s3upload:false})\n            console.log('bild änderung')\n            console.log('bild änderung')\n            console.log('bild änderung')\n            console.log('bild änderung')\n        }\n    }\n\n    \n\n    \n\n   \n    getImg = async()=>{\n        if(this.state.user===null){\n            this.setState({build:false})\n            return\n        }\n        if(!this.props.user.imgUrl){\n            this.setState({build:true})\n        }\n        const imgUrl = this.props.user.imgLow\n        this.setState({imgUrl:imgUrl})\n    }\n\n\n    \n\n    \n    updateUser = (e)=>{\n        this.props.updateUserHome(e)\n    }\n\n\n    \n    menuClose = (e)=>{\n        if(e){\n            this.setState({dropdown:false})\n        }\n    }\n    chatroomClose= (e)=>{\n        if(e){\n            this.props.chatroomClose(e)\n        }\n    }\n    logoutHandle = (e)=>{\n        this.setState({build:false})\n        this.props.logout(e)\n    }\n    openSelect = (e)=>{\n        this.setState({dropdown:false})\n        this.props.openSelect(e)\n    }\n\n    \n\n    dialogCallback = (e)=>{\n        if(e){\n            this.setState({dialogCheck:false},()=>this.addChatUser(this.state.inviIndex))\n        }else{\n            this.setState({dialogCheck:false})\n        }\n    }\n    handleClickDropdown = ()=> {\n        this.setState({ anchorEl: this.divRef.current, dropdown:true });\n      };\n\n    \n\n    userData(){\n        const user = this.props.user\n        if(this.state.build){\n            return(\n                <div className='topScreenDiv'>\n                    <div className='topScreenLeftSide'>\n                        <div className='topSreenAppName'>ARCHA</div>\n                    </div>\n                    <div className='topScreenRightSide'>\n                        <div className='topScreenUser' style={{color: color.accentColor}}>{this.state.user.userName}</div>\n                        \n                        <div className=\"topScreenImgDiv\">\n                            <Avatar name={user.userName} imgLow={this.state.user.imgLow} imgHigh={this.state.user.imgHigh}/>\n                        </div>\n                        <div ref={this.divRef}>\n                        <button \n                            className='topScreenMenuBtn' \n                            aria-owns={this.state.anchorEl ? \"menu-topbar\" : null}\n                            aria-haspopup=\"true\"\n                            onClick={()=>this.handleClickDropdown()}><MdMenu size={35}/>\n                        </button>\n                        </div>\n                    </div>\n                </div>\n            )\n        \n        }else{\n            return(\n                <div className='topScreenDiv'>\n                    <div className='topScreenLeftSide'>\n                        <div className='topSreenAppName'>ARCHA</div>\n                    </div>\n                    <div className='topScreenRightSide'>\n                        <div className='topScreenUser'></div>\n                        <div className=\"topScreenImgDiv\">\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n\n   }\n\n\n    \n\n    render(){\n        return(\n            <div className='topScreen'>\n                {this.userData()}\n                <MenuClass \n                    open={this.state.dropdown} \n                    close={this.menuClose} \n                    chatroomClose={this.chatroomClose}\n                    useContact={this.props.useContact} \n                    logout={this.logoutHandle} \n                    user={this.props.user} \n                    anchorEl={this.state.anchorEl}\n                    updateUserCallback={this.updateUser} \n                    mobile={this.props.mobil}\n                    chatroomMap={this.props.chatroomMap}\n                    openSelect={this.openSelect}\n                    \n                />\n            </div>\n        ); \n    }\n}\n\nexport default Topbar;\n\n\n\n  ","import React from 'react';\nimport './chatverlauf.css'\nimport { ClassicSpinner } from \"react-spinners-kit\";\nimport ImgView from './../helpers/dialogViewImg'\nimport { FaCheck } from \"react-icons/fa\";\nimport emojiRegex from './emoji/emojiRegex'\nimport ImageLoader from 'react-load-image';\n\n\n\nfunction Preloader() {\n    return <div className='heicSpinnerChat'><ClassicSpinner size={50} margin={2} color='#000000' loading={true}/></div>;\n}\n\n\n\nfunction ListItem(props) {\n    return (<div>\n                <div className= \"chatValue\">{props.value}</div>\n            </div>);\n}\n\n\n\nexport class Chatbox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            start:false,\n            input:'',\n            date: new Date(),\n            imgViewOpen:false,\n            imgView:null,\n            imgLoading: 0,\n            chatsLength: this.props.chatroom.chat.length,\n            imgCount: this.props.chatroom.chat.filter(e => e.imgLow!==null)\n\n        }\n        this.backhandle = this.backhandle.bind(this)    \n                   \n    }\n\n\n    \n    componentDidUpdate(prevProps, prevState){  \n        if(this.props.chatroom.chat.length!==prevState.chatsLength){\n            console.log('neue nachtricht')\n            setTimeout(()=>this.scrollToBottom('smooth'), 100)\n        }\n        \n    }\n    \n\n    componentDidMount() {\n        setTimeout(()=>this.scrollToBottom('auto'), 100)\n        console.log('======> nachtrichten lesen')\n        \n  \n    }\n\n    handleScroll = (event) =>{\n        var node = event.target;\n        const bottom = node.scrollHeight - node.scrollTop === node.clientHeight;\n        if (bottom) {\n            console.log('am boden');\n        }\n        if(node.scrollTop ===0){\n            console.log('oben');\n            this.get100Mess()\n        }\n    }\n    \n   \n    get100Mess = async()=>{\n        return\n        /*\n        const messArr = await ctrl.get100Mess(this.props.chatroom.chatroomId)\n        if(messArr && messArr.length > 0){\n            messArr.reverse()\n            const messD = this.props.chatHistory[0].date\n            const messDLast = messArr[messArr.length - 1].date\n            if(messD===messDLast){\n                console.log('alle chats geladen')\n                return\n            }\n            messArr.map(e=>this.props.chatHistory.unshift(e))\n            this.setState({start:true})\n        \n        }\n        */\n        \n    }\n    // Dialog schließen ===>\n    backhandle = (e) => {\n            this.props.closeMess(e)\n    }\n\n\n    scrollToBottom = (e) => {\n        this.messagesEnd.scrollIntoView({ behavior: e, block: 'nearest', inline: 'end' });\n    }\n    imgViewClose = (e)=>{\n        if(e){\n            this.setState({imgViewOpen:false})\n        }\n\n    }\n\n    \n     \n\n    imgChatBlase = (i,user)=>{\n        if(i.imgId && i.imgLow){\n            return(\n                <ImageLoader\n                src={i.imgLow}\n                >\n                    <img className={user? 'imgBlase' : 'imgBlaseChatUser'}  onClick={()=>this.setState({imgViewOpen: true, imgView:i.imgLow})}   alt='...' />\n                    <div>Error!</div>\n                    <Preloader/>\n                </ImageLoader>\n                \n            )\n        }\n            \n    }\n\n    singleEmoji = (message)=>{\n        if (message.length===2 && message.match(emojiRegex().join('|'))) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    \n      \n    chatVerlauf = ()=> {\n        const dateformat = { \n            //month: 'short', \n            //day: 'numeric',\n            hour12: false,\n            hour:  \"2-digit\",\n            minute: \"2-digit\"\n        };\n        const dateformat2 = { \n            month: 'short', \n            day: 'numeric',\n            //hour12: false,\n            //hour:  \"2-digit\",\n            //minute: \"2-digit\"\n        };\n        \n        if(this.props.chatroom.chat===[]){\n            return null\n        }\n        let user = true\n        const lines = [];\n        let dateLine = ''\n        for(let i of this.props.chatroom.chat){\n            if(i.message || i.imgLow){\n                if(i.author===this.props.user.id){\n                    user = false\n                }else{\n                    user = true\n                }\n                let read = 2\n                if(i.read){\n                    read = 3\n                }\n                if(new Date(i.date).toLocaleString('de-DE', dateformat2)!==dateLine){\n                    dateLine = new Date(i.date).toLocaleString('de-DE', dateformat2)\n                    lines.push(\n                        <div className='chatDateLine' style={this.props.user.color.backgroundColor==='rgb(93, 100, 102)'? null:{color:'black', borderBottomColor: 'black'}}>{dateLine}</div>\n                    )\n                }\n                lines.push(\n                    <div className={user? 'chatinList' : 'chatinListChatUser'}>\n                        <div className={user? 'chatblase' : 'chatblaseChatUser'} style={user?{background:this.props.user.color.bubbleColor2}:{background:this.props.user.color.bubbleColor}}>\n                            <div className='chatMessage'>\n                                {i.imgId?<div>{this.imgChatBlase(i,user)}</div>:null}\n                                <div className={user? 'chatMessageBlase' : 'chatMessageBlaseChatUser'} style={user?{color:this.props.user.color.fontColor2}:{color:this.props.user.color.fontColor}} >\n                                {this.singleEmoji(i.message)?<div className='singleEmoji'>{i.message}</div>:i.message}</div>\n                                <div className={user? 'chatdate' : 'chatdateChatUser'} >\n                                    <div>{new Date(i.date).toLocaleTimeString('de-DE', dateformat)}</div>\n                                    <div>{user? null: this.messageStatus(read)}</div>\n                                </div>\n                            </div>\n                        </div>\n                   </div>\n                )\n            }\n        }\n        const listItems = lines.map((message) =>\n        <ListItem value={message} key={lines.indexOf(message) } />);\n        return listItems; \n    }\n\n\n\n    messageStatus=(e)=>{\n        switch(e){\n            case 1:\n                return(\n                    <div className='chatMessageStatus'><FaCheck size={8}/></div>\n                )\n            case 2:\n                return(\n                    <div className='chatMessageStatus'><FaCheck size={8}/><FaCheck size={8}/></div>\n                )\n            case 3:\n                return(\n                    <div className='chatMessageStatusColor'><FaCheck size={8}/><FaCheck size={8}/></div>\n                )\n            default:\n                break\n        }\n    }\n        \n\n    render(){\n        const paneDidMount = (node) => {\n            if (node) {\n                node.addEventListener('scroll', this.handleScroll);\n            }\n        };\n        return(\n            <div className='chatFrame' style={{background:this.props.user.color.backgroundColor}}>\n                <div className='chatListVerlauf' ref={paneDidMount}>\n                    {this.chatVerlauf()}\n                    <div style={{ float:\"left\", clear: \"both\" }}\n                    ref={(el) => { this.messagesEnd = el; }}>\n                    </div>\n                </div>\n                <ImgView open={this.state.imgViewOpen} imgUrl={this.state.imgView} close={this.imgViewClose}/>\n            </div>     \n        )    \n        \n        \n        \n    }\n        \n    \n}\n\nexport default Chatbox;\n\n\n\n  ","import React from 'react';\nimport './chatroom.css'\nimport DialogCheck from './../helpers/dialogCheck'\nimport { MdSearch, MdChat } from \"react-icons/md\";\nimport Avatar from './../helpers/avatar'\nimport ctrl from './../api_controller'\n\n\nfunction ListItem(props){\n    return (<div>\n                <div className= \"chatValue\">{props.value}</div>\n            </div>);\n} \n\n\nexport class Search extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            user: this.props.user,\n            chat:false,\n            search:'',\n            conracts: null,\n            searchFound:false,\n            chatUser: null,\n            dialogCheck:false,\n            selectUser: null\n        }  \n                   \n    }\n\n\n    componentDidUpdate(prevProps){\n        \n    }\n    \n\n    componentDidMount() {\n  \n    }\n\n    handleSearch = ({ target }) => {\n        this.setState({ [target.name]: target.value, searchFound:false  },()=>this.searchChatUser())\n    }\n    \n    search = ()=>{\n        return(\n            <div className='searchFrame'>\n                <div className='searchDiv'>\n                    <div className='searchInputDiv'>\n                        <input className='searchInput' type='text' name='search' placeholder='Suche' value={this.state.search} onChange={this.handleSearch}></input>\n                        <button className='searchIconBtn' onClick={()=>this.searchChatUser()}><MdSearch size={30}/></button>\n                    </div>\n                    {this.addChatUser()}\n                </div>\n            </div>\n        )\n    }\n\n    searchChatUser = async()=>{\n        if(this.state.search===''){\n            return\n        }\n        const {search} = this.state\n        const user = this.state.user.id\n        const payload = {search, user}\n        const users = await ctrl.getSearch(payload)\n        if(users){\n            console.log(users)\n            this.setState({chatUser:users, searchFound:true })\n        }\n    }\n\n    \n    addChatUser = ()=>{\n        if(this.state.searchFound){\n            const chatUserArr = []\n            const searchedList = this.state.chatUser\n            \n            searchedList.forEach(e=>{\n\n                chatUserArr.push(\n                    <div className='searchFoundFrame'>\n                        <button className='searchUserBtn' onClick={()=>this.setState({dialogCheck:true,selectUser:e })}>\n                            <div className='searchUserImgDiv'>\n                                <Avatar name={e.userName} imgLow={e.imgLow} imgHigh={e.imgHigh}/>\n                            </div>\n                            <div className='searchUserNameDiv'>{e.userName}</div>\n                            <div className='searchUserIcon'><MdChat size={36}/></div>\n                        </button>\n                        <DialogCheck \n                            text={<div>möchtest du <div style={{fontWeight: \"bold\"}}>{e.userName}</div> zu dein kontakten hinzufügen ?</div>}\n                            open={this.state.dialogCheck}\n                            checked={this.dialogCallback}\n                        />\n\n                    </div>\n                )\n            })\n            \n            const listItems = chatUserArr.map((items) =>\n                <ListItem value={items} key={chatUserArr.indexOf(items) } />\n                )\n            return listItems;\n        }else{\n            return null\n        }\n    }\n\n    dialogCallback = (e)=>{\n        if(e){\n            this.setState({search:'', dialogCheck:false, searchFound: false},()=>this.updateContactUser())\n        }else{\n            this.setState({search:'', dialogCheck:false, searchFound: false, selectUser: null})\n        }\n    }\n\n    updateContactUser = ()=>{\n        const id = this.state.user._id\n        const chatUserId = this.state.selectUser.id\n        if(id===chatUserId){\n            return\n        }\n        const contacts = this.state.user.contacts\n        if(contacts.find(e=> e===chatUserId)){\n            return\n        }\n        const payload = {\n            user: this.state.selectUser,\n            chatUser: true\n\n        }\n        this.props.selectUser(payload)\n        this.setState({selectUser: null})\n        \n        \n    }\n\n   \n\n\n\n\n    render(){\n        return(\n            <div>\n                {this.search()}\n            </div>\n        )  \n    }\n        \n    \n}\n\nexport default Search;\n\n\n\n  ","import React from 'react'\nimport './chatroom.css'\nimport Avatar from './../helpers/avatar'\nimport socket from './../socket/socket'\nimport Search from './search'\nimport DialogCheck from './../helpers/dialogCheck'\nimport { AiOutlinePicture } from \"react-icons/ai\"\n\n\n\nfunction ListItem(props) {\n    return (<div>\n                <div className= \"chatValue\">{props.value}</div>\n            </div>);\n}\n\nexport class Chatroom extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n                date: new Date(),\n                user: this.props.user,\n                chatrooms: this.props.user.chatrooms,\n                chatroomMap: this.props.chatroomMap,\n                loading: true,\n                openChat: null,     \n                chatMap: null,\n                usersMap: null,\n                chatUserJoined: null,\n                avatar:null,\n                client: socket(),\n                start: true,\n                chatUser: null,\n                openDialogCheck: false,\n                progress:false,\n        }\n    }\n\n    handleChange = ({ target }) => {\n        this.setState({ [target.name]: target.value })\n    }\n\n    componentDidUpdate(prevProps, prevState){\n    }\n\n    componentDidMount(){\n        //console.log('mount chatroom liste')\n        \n    }\n    \n    componentWillUnmount(){\n        //console.log('unmount chatroom liste')\n    }\n   \n    \n\n     \n\n\n\n\n    runopenChatbox = (id) => {\n        this.props.openChat(id)\n    }\n\n\n\n    \n    // Callback Dialog-Check\n    dialogCallback = (e)=>{\n        if(e){\n            this.setState({openDialogCheck:false})\n        }else{\n            this.setState({openDialogCheck:false})\n        }\n    }\n\n    // callback search user->update\n    searchUpdate = (user)=>{\n        this.setState({user})\n    }\n\n\n\n\n\n    \n\n\n\n\n\n    messageReads = (chatroom)=>{\n        /** \n        console.log('_______________lade messages_______________')\n        console.log(chatroom.chat)\n        console.log('___________________________________________')\n        */\n        const author = chatroom.chat.filter(e=>e.author !== this.props.user.id)\n        const count = author.filter(e=>e.read === false).length\n        return count\n    }\n\n    inquiry = (i ,name, pic, picHigh)=> {\n        return(\n            <div className='chatroominListe'>\n                <button className='btnchatroomuser' onClick={()=>this.props.createRoom(i)}>\n                    <div className='chatroomuser'>\n                        <div className='chatroomuserDiv'>\n                            <div className=\"chatroomImgDiv\" >\n                                <Avatar name={name} imgLow={pic} imgHigh={picHigh}/>\n                            </div>\n                            <div className='chatroomSpecsDiv'>\n                                <div className='chatroomTxtDivTop'>\n                                    <div className='chatroomProfilName'>{name}</div>\n                                </div>\n                                <div className='chatroomTxtDivBotton'>\n                                    <div className='chatroomLastChatDiv' >\n                                        ...fragt nach einem gemeinsamen Chatroom\n                                    </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </button>\n                </div>\n        )\n    }\n\n\n\n\n\n    chatrooms = ()=> {\n        const dateformat = { \n            month: 'short', \n            day: 'numeric',\n            hour12: false,\n            hour:  \"2-digit\",\n            minute: \"2-digit\"\n        };\n        const sortMap = (e)=>{\n            const chat = e[1].chat?e[1].chat:[]\n            const lastchatTime2 = chat.length<=0?'':chat[chat.length-1].date\n            const dateTime = new Date(lastchatTime2)\n            return dateTime\n        }\n\n\n            const lines = [];\n            // Chatuser mit Chatroom => map\n            const chatroomMap = this.props.chatroomMap\n            console.log([...chatroomMap.entries()])\n            // CHatuser on Chatroom => map\n            const MapSort = new Map([...chatroomMap.entries()].sort((a, b) => sortMap(b) - sortMap(a)))\n            const keys = MapSort.keys()\n            for(let i of keys ){\n                const text = chatroomMap.get(i).text\n                const online = this.props.online.find(e=>e===chatroomMap.get(i).id)\n                const name = chatroomMap.get(i).userName\n                const pic = chatroomMap.get(i).imgLow\n                const picHigh = chatroomMap.get(i).imgHigh\n                if(text==='new_room'){\n                    lines.push(this.inquiry(chatroomMap.get(i),name, pic, picHigh))\n                }else{\n                    const chats = chatroomMap.get(i).chat\n                const newMess = this.messageReads(chatroomMap.get(i))\n                const lastchat = chats.length<=0?'Leerer Chat':chats[chats.length-1].message\n                const lastchatUser = chats.length<=0?null:chats[chats.length-1].author\n                const lastchatTime = chats.length<=0?'':chats[chats.length-1].date\n                \n                    lines.push(\n                        <div className='chatroominListe'>\n                        <button className='btnchatroomuser' onClick={()=>this.runopenChatbox(i)}>\n                            <div className='chatroomuser'>\n                                <div className='chatroomuserDiv'>\n                                    <div className=\"chatroomImgDiv\" >\n                                        <Avatar name={name} imgLow={pic} imgHigh={picHigh}/>\n                                        {newMess===0?null:\n                                            <div className='underDateDiv'>\n                                                <div className='messageCountDiv'>{newMess}</div>\n                                            </div>\n                                        }\n                                    </div>\n                                    <div className='chatroomSpecsDiv'>\n                                        <div className='chatroomTxtDivTop'>\n                                            <div className='chatroomProfilName'>{name}</div>\n                                            <div className='chatroomProfilDate'>\n                                                {new Date(lastchatTime).toLocaleDateString('de-DE', dateformat)}\n                                            </div>\n                                        </div>\n                                        <div className='chatroomTxtDivBotton'>\n                                            <div className='chatroomLastChatDiv' >\n                                                {lastchat===''?<AiOutlinePicture size={35}/>:<div>\n                                                    <div style={{color: 'rgb(99, 156, 221)'}}>{lastchatUser!==this.props.user.id?null:'Du: '}</div>\"{lastchat}\"</div>}\n                                            </div>\n                                            {!online?null:<div className='chatroomJoined'>online</div>}\n                                        </div>\n                                    </div>\n                                </div>\n                                \n                            </div>\n                            </button>\n                       </div>\n                    )\n\n                }\n                \n            }\n            \n            const listItems = lines.map((room) =>\n            <ListItem value={room} key={lines.indexOf(room) } />);\n            return listItems;\n       \n        \n}\n\n\n        \n\n    \n\n   \n    \n    render(){\n        if(this.props.chatroomView){\n            return(\n                <div className='chatroomDiv'>\n                    <div className='chatListRooms'>\n                        <Search user={this.state.user} selectUser={this.props.openNewChat}/>\n                        <div className='chatroomListeFrame'>\n                            {this.chatrooms()}\n                            <DialogCheck \n                                text={<div>möchtest du <div style={{fontWeight: \"bold\"}}></div> zu dein kontakten hinzufügen ?</div>}\n                                open={this.state.openDialogCheck}\n                                checked={this.dialogCallback}\n                            />\n                        </div>\n                    </div>\n                </div>  \n            )\n        }else{\n            return null\n        }\n    } \n        \n    \n    \n}\n\nexport default Chatroom   \n","\n\n\nexport const createImage = url =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', error => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nexport async function getRotatedImage(imageSrc, rotation = 0) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  const orientationChanged =\n    rotation === 90 || rotation === -90 || rotation === 270 || rotation === -270\n  if (orientationChanged) {\n    canvas.width = image.height\n    canvas.height = image.width\n  } else {\n    canvas.width = image.width\n    canvas.height = image.height\n  }\n\n  ctx.translate(canvas.width / 2, canvas.height / 2)\n  ctx.rotate((rotation * Math.PI) / 180)\n  ctx.drawImage(image, -image.width / 2, -image.height / 2)\n\n  return new Promise(resolve => {\n    canvas.toBlob(file => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n","\nimport React from 'react'\nimport { FiSmile } from \"react-icons/fi\";\nimport Picker from 'emoji-picker-react';\nimport './index.css'\nimport Dialog from '@material-ui/core/Dialog';\n\n\n\nexport class Emoji extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            chosenEmoji:null,\n            setChosenEmoji:null,\n            show: false\n        }\n    }\n\n    close = ()=>{\n        this.setState({show:false})\n    }\n    onEmojiClick = (event, emojiObject)=>{\n        //console.log(emojiObject)\n        //console.log(event)\n        //this.setState({chosenEmoji:emojiObject.emoji})\n        this.props.emoji(emojiObject.emoji)\n    }\n\n    emojiPicker=()=>{\n        return(\n            <Dialog\n            className='emojiDialog'\n            open={this.state.show===true}\n            onBackdropClick= {()=>this.close()}\n        \n        \n            >\n            <div className='emojiDialogDiv'>\n                <Picker onEmojiClick={this.onEmojiClick} />\n            </div>\n            </Dialog>\n        )\n    }\n    \n\n\n    \n\n    \n\n    render(){\n        return(\n            <div>\n            <button className='emojiBtn'\n            onClick={()=>this.setState({show:true})}>\n                <FiSmile  size={20}/>\n            </button>\n            {this.emojiPicker()}\n            </div>\n        )\n    }  \n    \n}\n\nexport default Emoji\n\n\n    \n\n    \n      \n        \n    \n","import React, { Fragment } from 'react'\nimport { getOrientation } from 'get-orientation/browser'\nimport { getRotatedImage } from './rotateImage'\nimport './index.css'\nimport Dialog from '@material-ui/core/Dialog';\nimport { FiCamera } from \"react-icons/fi\";\nimport { GoX } from \"react-icons/go\";\nimport heic2any from \"heic2any\";\nimport DotLoader from \"react-spinners/DotLoader\";\nimport Emoji from './../emoji'\n\n\n\n\nconst ORIENTATION_TO_ANGLE = {\n  '3': 180,\n  '6':  0,\n  '8': -90,\n}\n\n\n\nclass ImgSize extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      imageSrc: null,\n      crop: { x: 0, y: 0 },\n      zoom: 2,\n      aspect: 1 / 1,\n      croppedAreaPixels: null,\n      croppedImage: null,\n      isCropping: false,\n      correctImg: null,\n      file: null,\n      heicFile:null,\n      heicLoad: false,\n      input:'',\n\n    }\n  }\n\n  // input user => eingabefelder setten......\n  handleChange = ({ target }) => {\n    this.setState({ [target.name]: target.value });\n  } \n\n  // input user => emoji props\n  handleChangeEmoji = (e) => {\n    this.setState({input:this.state.input+e});\n  } \n\n\n  onCropChange = crop => {\n    this.setState({ crop })\n  }\n\n  onCropComplete = (croppedArea, croppedAreaPixels) => {\n    this.setState({\n      croppedAreaPixels,\n    })\n  }\n\n  onZoomChange = zoom => {\n    this.setState({ zoom })\n  }\n\n\n  // callback cropped Image......\n  callbackCorrectImg = async (e) =>{\n    this.props.img(e, this.state.input)\n    this.setState({correctImg: e, input:''})\n    this.close()\n  }\n\n  \n\n\n  onClose = async () => {\n    this.setState({\n      croppedImage: null,\n      input:''\n    })\n  }\n\n  rotation = async () => {\n    if(this.state.file=== null){\n      return\n    }\n    const file = this.state.file\n      let imageDataUrl = await readFile(file)\n\n      // auto rotation.....\n      const orientation = await getOrientation(file)\n      const rotation = ORIENTATION_TO_ANGLE[orientation]\n      if (rotation) {\n        imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\n      }\n      this.setState({\n        imageSrc: imageDataUrl,\n        crop: { x: 0, y: 0 },\n        zoom: 1,\n      })\n    \n  }\n\n\n  isHeic = async file =>{\n    await heic2any({\n      blob: file,\n      toType: \"image/jpeg\",\n      multiple: false,\n      quality: 0.1\n    })\n      .then(res=> {\n        this.setState({heicFile:res},()=>this.onHeicFileChange())\n      })\n    .catch((e) => {\n      console.log('catch file')\n      console.log(e)\n    });\n    \n\n    \n  }\n\n  onHeicFileChange = async()  => {\n    const heicImg = this.state.heicFile\n    let imageDataUrl = await readFile(heicImg)\n\n    // auto rotation.....\n    const orientation = await getOrientation(heicImg)\n    const rotation = ORIENTATION_TO_ANGLE[orientation]\n    if (rotation) {\n       imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\n    }\n    this.setState({\n      file: heicImg,\n      heicLoad:false,\n      imageSrc: imageDataUrl,\n      crop: { x: 0, y: 0 },\n      zoom: 1,\n    })\n  }\n\n  onFileChange = async e => {\n    if (e.target.files && e.target.files.length > 0) {\n      const file = e.target.files[0]\n      if(file.type==='image/heic'){\n        this.setState({heicLoad:true},()=>this.isHeic(file))\n        return\n      }\n      let imageDataUrl = await readFile(file)\n\n      // auto rotation.....\n      const orientation = await getOrientation(file)\n      const rotation = ORIENTATION_TO_ANGLE[orientation]\n      if (rotation) {\n        imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\n      }\n      this.setState({\n        file: file,\n        imageSrc: imageDataUrl,\n        crop: { x: 0, y: 0 },\n        zoom: 1,\n      })\n    }\n  }\n\n\n\n  \n\n\n  close = async ()=>{\n      this.setState({\n        imageSrc:null,\n        croppedAreaPixels: null,\n        croppedImage: null,\n        isCropping: false,\n        correctImg: null,\n        file: null,\n        heicFile:null,\n        heicLoad: false,\n        input:'',\n      })\n  }\n\n  spinner = ()=>{\n    const loading = this.state.heicLoad\n    if(loading){\n      return(\n        <div className='heicSpinner'><DotLoader size={30} margin={2} color='#000000' loading={loading}/></div>\n      )\n    }else{\n      return(\n        <button className=\"fakefile\"><FiCamera size={20}/></button>\n      )\n    }\n }\n \n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"ggg\">\n          <div className=\"picPos\">\n            <div className=\"imgPadd\">{this.spinner()}</div>\n            <input id=\"fileInput\" className=\"hidden\" type=\"file\" accept=\"image/* .heic\" multiple=\"multiple\" onChange={this.onFileChange}/>  \n            </div>\n          </div>\n          <Dialog \n          className='ImgChatDialog'\n          open={!!this.state.imageSrc}\n          fullScreen>\n          <div className={!this.props.mobile?'imgChatFrame':'imgChatFrameMobil'}>\n            <div className='chatheadImg'>\n              <button className='chatheadBtnImg' onClick={()=>this.close()}><GoX size={16}/></button>\n            </div>\n            {this.state.imageSrc && (\n            <Fragment>\n              <div className=\"imgChatImgDiv\">\n                <img className='imgChatImg' src={this.state.imageSrc} alt='...'></img>\n              </div>\n              <div className='chatEingabe'>\n                <textarea className=\"chatInput\" placeholder='deine Nachricht...' name=\"input\" value={this.state.input}  onChange={this.handleChange} ></textarea>\n                <div className='chatEingabeIcons'>\n                  <Emoji emoji={this.handleChangeEmoji}/>\n                </div>\n                <div className='chatEingbeRight'>\n                  <button className=\"chatBtn\" onClick={()=>this.callbackCorrectImg(this.state.imageSrc)}>senden</button>    \n                </div>\n              </div>\n          </Fragment>\n        )}\n        </div>\n        </Dialog>\n      </div>\n     \n    )\n  }\n}\n\nfunction readFile(file) {\n  return new Promise(resolve => {\n    const reader = new FileReader()\n    reader.addEventListener('load', () => resolve(reader.result), false)\n    reader.readAsDataURL(file)\n  })\n}\n\n\nexport default ImgSize;","\nimport React from 'react'\nimport './index.css'\nimport ChatImg from './chatImage'\nimport Emoji from './emoji'\nimport ctrl from './../api_controller'\n\n\n\n\nexport class InputDevice extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            input: '',\n            img: null,\n            storageImg: {\n                imgLow: null,\n                imgHigh: null,\n                id: null\n            },\n            imgId: null,\n            client: this.props.socket,\n            \n        }\n        \n        \n                         \n    }\n\n    componentDidMount(){\n        \n    }\n\n    componentWillUnmount(){\n    }\n\n\n    // input user => eingabefelder setten......\n    handleChange = ({ target }) => {\n        const croom = this.props.chatroomName\n        const charCount = target.value.length\n        const author = this.props.user.id\n        const sendList = [1,5,10,15,20,25,30,35,40,45,50,55,60,65,70]\n        if(sendList.find(e => e===charCount)){\n            this.state.client.hack(croom, target.value.length, author )\n          }\n        \n        this.setState({ [target.name]: target.value });\n    }  \n\n    // input user => emoji props\n    handleChangeEmoji = (e) => {\n        this.setState({input:this.state.input+e});\n    } \n\n   \n    useImg = async (e,txt)=>{ \n        const picName = this.props.user.userName\n        let file = await fetch(e)\n        .then(r => r.blob())\n        .then(blobFile => new File([blobFile], picName, {type: \"image/jpeg\" }))\n        const storageImg = await ctrl.chatImgSave(file)\n        if(storageImg){\n            this.setState({\n                img:file,\n                storageImg,\n                input: txt,\n            },()=>this.send()) \n        }\n    }\n\n    send = ()=>{\n        this.props.send(this.state.input, this.state.storageImg.imgLow, this.state.storageImg.imgHigh, this.state.storageImg.id)\n        this.setState({\n            input:'',\n            img: null,\n            storageImg: {\n                imgLow: null,\n                imgHigh: null,\n                id: null\n            },\n            imgId: null,\n        })\n    }\n\n\n\n    \n\n    \n\n    render(){\n        return(\n            <div className='chatEingabe'>\n                <textarea className=\"chatInput\" placeholder='deine Nachricht...' name=\"input\" value={this.state.input}  onChange={this.handleChange} ></textarea>\n                <div className='chatEingabeIcons'>\n                    <Emoji emoji={this.handleChangeEmoji}/>\n                    <ChatImg mobile={this.props.mobile} img={this.useImg}/>\n                </div>\n                <div className='chatEingbeRight'>\n                    <button className=\"chatBtn\" onClick={()=>this.send()}>senden</button>     \n                </div>\n            </div>\n        )\n                            \n                       \n            \n            \n        \n    }\n}       \n        \n    \n\n\nexport default InputDevice;","\n\nconst  mongoObjectId = function () {\n    var timestamp = (new Date().getTime() / 1000 | 0).toString(16);\n    return timestamp + 'xxxxxxxxxxxxxxxx'.replace(/[x]/g, function() {\n        return (Math.random() * 16 | 0).toString(16);\n    }).toLowerCase();\n};\n\n\nexport default mongoObjectId","\nimport React from 'react'\nimport socket from './../socket/socket'\nimport './index.css'\nimport Chatverlauf from './chatVerlauf'\nimport Chatroom from './chatroom'\nimport { GoX, } from \"react-icons/go\";\nimport Avatar from './../helpers/avatar'\nimport InputDevice from './inputDevice'\nimport getId from './../helpers/get_Id'\nimport ctrl from './../api_controller'\n\n\n\nexport class Chatbox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            client: socket(),\n            user: this.props.user,\n            chatUser: null,\n            chatroomMap: this.props.chatroomMap,\n            login: true,\n            chatroom: null,\n            joinedUser: [],\n            connect: false,\n            chatroomView: true,\n            default: null,\n            online: [],\n            hacking: false,\n            \n        }\n        this.addMessagesCallback = this.addMessagesCallback.bind(this)\n        this.onSendMessage = this.onSendMessage.bind(this)  \n    }\n\n\n\n    componentDidMount(){\n        this.connectSocket()\n        this.state.client.callbackPool(this.addMessagesCallback)\n        this.setName(this.props.user.contacts)\n        \n        \n    }\n\n\n\n\n\n\n\n\n    connectSocket = ()=>{\n        const rooms = Array.from(this.state.chatroomMap.values())\n        if(rooms){\n            rooms.forEach(e=>{\n                this.state.client.connect(e.name)\n            })\n        }\n        // connect ping__room\n        const ping_room = this.state.user.id\n        this.state.client.connect(ping_room)\n    \n        \n        \n    }\n\n\n    // erstellt user im Socket........\n    setName = (contacts) => {\n        const payload = {\n            user: this.state.user.id,\n            contacts: contacts\n        }\n        this.state.client.register(payload)\n        this.setState({\n            connect: true\n        })\n    }\n\n\n\n\n    componentWillUnmount(){\n        console.log('klasse chat geschlossen')\n        const onlineUser = this.state.online\n        const user = this.state.user.id\n        onlineUser.forEach(e=>{\n            const answer = {\n                chatroomName: e,\n                answer: false,\n                user: user\n            }\n            this.state.client.userStatus(answer)\n        })\n        this.state.client.disconnect()\n        this.setState({\n            chatroom: null,\n            chatUser: null,\n            chatroomView: true,\n        })\n    }\n\n    // schließe -Dialog -message -chatroom\n    close = () =>{\n        console.log(' close chatroom => State reset')\n        this.props.useContact(null)\n        this.setState({\n            chatroom: null,\n            chatUser: null,\n            chatroomView: true\n        })\n    } \n\n\n\n    \n\n\n\n    componentDidUpdate(prevProps, prevState){\n        if(JSON.stringify(this.props.user)!==JSON.stringify(prevProps.user)){\n            this.setState({ user: this.props.user})\n        }\n        if(this.props.chatroomClose!==prevProps.chatroomClose){\n            console.log('chat wird geschlossen')\n            this.close()\n        }\n        if(this.props.chatroomMap.size>prevState.chatroomMap.size){\n            console.log('ÄNDERUNG _chatroomMap')\n            this.setState({chatroomMap: this.props.chatroomMap})\n        }\n    }\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n    \n\n\n\n\n\n    runChatroom = (e)=>{\n        console.log('ÖFFNE CHAT')\n        this.props.useContact(e)\n        const cRoom  = this.state.chatroomMap.get(e)\n        if(!('chat' in cRoom)){\n            cRoom.chat = []\n        } \n        this.state.client.onEnterRoom(cRoom.name, this.state.user.id)    \n        this.setState({\n            chatUser: cRoom.id,\n            chatroom: cRoom,\n            chatroomView: false\n        })  \n    }\n\n    runNewChatroom = (payload ) =>{\n        const sendData = {\n            id: this.state.user.id,\n            imgHigh: this.state.user.imgHigh,\n            imgLow: this.state.user.imgLow,\n            room: payload.user.id,\n            userName: this.state.user.userName,\n        }\n        this.state.client.pingContact(sendData)\n\n    }\n\n    \n\n    // erstellt die Datenbank für neuen Chatroom!!!!!!\n    createChatroomDb = async(selected)=>{\n        const userId = this.state.user.id\n        const chatUserId = selected.id\n        const name = getId()\n        const users = {creator: chatUserId, members: [userId]}\n        const payload = {name, users}\n        const chatroom = await ctrl.createChatroom(payload)\n        if(chatroom){\n            const key = chatroom.id\n            const sendData = {\n                room: selected.id,\n                roomId: chatroom.id,\n                inquiryUser: this.state.user.id\n            }\n            this.state.client.pingAnswer(sendData)\n            this.state.chatroomMap.delete(chatUserId)\n            chatroom.id = chatUserId\n            chatroom.userName = selected.userName\n            chatroom.imgLow = !selected.imgLow?null:selected.imgLow\n            chatroom.imgHigh = !selected.imgHigh?null:selected.imgHigh\n            chatroom.chat = []\n            this.state.chatroomMap.set(key, chatroom)\n            this.state.client.connect(chatroom.name)\n            this.setState({\n                chatUser: chatUserId,\n                chatroom: chatroom,\n                chatroomView: false\n            }) \n        }\n\n        \n    }\n\n    answerContact = async(message)=>{\n        const roomMap = await ctrl.getCharoomList(this.state.user.id)\n        if(roomMap){\n            console.log(roomMap)\n            const newRoom = roomMap.get(message.roomId.toString())\n            console.log('newRoom', newRoom)\n            this.state.chatroomMap.set(message.roomId.toString(), newRoom)\n            this.state.client.connect(newRoom.name)\n            this.setState({default: null})\n        }\n        \n    }\n     \n\n    \n   \n    \n\n    \n\n    \n\n    \n            \n    \n    \n    \n\n   \n\n    \n    \n    \n    \n\n\n    \n\n    \n    \n    \n\n\n    \n    \n\n    // INPUTEVICE => sende MAessage\n    onSendMessage = (m, imgLow, imgHigh, imgId) =>{ \n        const message = m\n        const chatroomName = this.state.chatroom.name\n        const user_id = this.state.user.id\n        if(imgLow===null){\n            if(m===''){\n                return\n            }\n            this.state.client.message(chatroomName, message,'','', null, user_id)\n        }else{\n            this.state.client.message(chatroomName, message, imgLow, imgHigh, imgId, user_id)\n        }\n    }\n\n\n    \n\n\n    ////////////////////////////////////////////////////////////////\n    ////////////____socket Callback______//////////////////////////\n\n    addMessagesCallback(message){\n        const getIdByValue = (searchValue)=>{\n            const map = this.state.chatroomMap\n            for (let [key, value] of map.entries()){\n              if (value.name === searchValue)\n                return key;\n            }\n        }\n\n        switch(message.text){\n\n\n\n            \n            case 'new_room':\n                window.alert('fick die wand an')\n                this.state.chatroomMap.set(message.id, message)\n                this.setState({default:null})\n            break\n\n\n            \n            case 'read_message':\n                if(message.reader){\n                    if(this.state.chatroom){\n                        this.state.chatroom.chat.forEach(e => {\n                            e.read = true\n                        })\n                        this.setState({chatroom: this.state.chatroom})\n                    }\n                }\n            break\n\n\n\n            case 'hacking':\n                const hackTime = setTimeout(()=>{this.setState({hacking: false})},1500)\n                if(!this.state.chatroomView){\n                    const chatroomName = this.state.chatroom.name\n                    const userId = this.state.user.id\n                    if(message.hack && chatroomName === message.chatroomName && userId !== message.author){\n                        if(!this.state.hacking){\n                            console.log(message)\n                            this.setState({hacking: true}, ()=>hackTime)\n                        }\n                    }\n                }\n            break\n\n\n\n            case 'init_chat':\n                if(message.online){\n                    const user_self = this.state.user.id\n                    const onlineUser = message.online\n                    const answer = {\n                        chatroomName: onlineUser,\n                        answer: true,\n                        user: user_self\n                    }\n                    this.state.client.userStatus(answer)\n                    if(this.state.online.find(e=>e===onlineUser)){\n                        return\n                    }\n                    this.setState({online: this.state.online.concat(onlineUser)})\n                } \n            break\n\n\n\n\n            case 'user_status':\n                if(message.status){\n                    const onlineUser = message.user\n                    this.setState({online: this.state.online.concat(onlineUser)})\n                    break\n    \n                }else if(!message.status){\n                    const onlineUser = message.user\n                    console.log(this.state.online)\n                    if(this.state.online.find(e=>e===onlineUser)){\n                        this.state.online.forEach((e, i)=>{\n                            if(e===onlineUser){\n                                this.state.online.splice(i, 1)\n        \n                            }\n                        })\n                        this.setState({online: this.state.online})\n                    }\n                    break\n                }\n            break\n\n\n\n            case 'create_room':\n                window.alert('fick die wand nochmal an')\n                this.answerContact(message)\n            break\n\n\n\n            case 'new_message':\n                const mapId = getIdByValue(message.chatroomName)\n                console.log('addMessage=>    ',message, mapId)\n                if(mapId){\n                    if(this.props.chatroomMap.has(mapId)){\n                        const room = this.props.chatroomMap.get(mapId)\n                        room.chat.push(message)\n                        this.state.chatroomMap.set(mapId, room)\n                        this.setState({default:null})\n                    }\n                    \n                }else{\n                    console.log('unbekannte Nachricht')\n                }\n            break\n\n            default:\n                break\n\n\n\n\n        }\n       \n        \n        \n        \n        \n    }\n\n    \n       \n\n\n\n\n    scrollChatToBottom() {\n        this.panel.scrollTo(0, this.panel.scrollHeight)\n    }\n\n\n    \n\n    chatverlauf =()=>{\n        const hack = this.state.hacking\n        const online = this.state.online.find(e=>e===this.state.chatUser)\n        return(\n            <div className='ChatverlaufCon'>\n                <div className='chathead'>\n                    <div className='chatHeadImgDiv'><Avatar name={this.state.chatroom.userName} imgLow={this.state.chatroom.imgLow} imgHigh={this.state.chatroom.imgHigh}/></div>\n                    <div className='chatheadName'>{this.state.chatroom.userName}{!hack?null:<div className='chartoomWrite'> schreibt...</div>}</div>\n                        {!online?null:<div className='chatroomJoinedHead'>online</div>}\n                        <button className='chatheadBtn' onClick={()=>this.close()}><GoX size={16}/></button>\n                    </div>\n                    <div className='chatContainer'>\n                        <Chatverlauf \n                            chatroom={this.state.chatroom} \n                            closeMess={this.close} \n                            user={this.props.user}\n                        />\n                        <InputDevice\n                            mobile = {this.props.mobile}\n                            send = {this.onSendMessage}\n                            chatroomName = {this.state.chatroom.name}\n                            user = {this.props.user}\n                            socket = {this.state.client}\n                        />\n                    </div>\n                </div>\n        )\n    }\n\n    \n\n    \n\n    render(){\n        if(this.state.connect && this.props.main===1){\n            return(\n                <div className='ChatDiv'>\n                    {!this.state.chatroomView?this.chatverlauf():null}\n                    <div className='chatroomFrame'>\n                        <Chatroom \n                            user={this.state.user} \n                            openChat={this.runChatroom}\n                            openNewChat={this.runNewChatroom} \n                            online={this.state.online}\n                            chatroomMap={this.state.chatroomMap}\n                            chatroomView={this.state.chatroomView}\n                            createRoom={this.createChatroomDb}\n                        />\n                    </div>  \n                </div>\n            )\n            \n        }else{\n            return null\n        }\n    }\n}       \n        \n    \n\n\nexport default Chatbox;","import React from 'react';\nimport './index.css';\nimport { GoX } from \"react-icons/go\";\nimport DialogCheck from './../helpers/dialogCheck'\nimport ImgSize from './../helpers/imgClass'\n//import DialogFail from './../dialogFail'\n\n\n\n\n\n\nexport class Profile extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            user: this.props.user,\n            userName: this.props.user.userName,\n            email: this.props.user.email,\n            phone: this.props.user.phone,\n            password: this.props.user.password, \n            dialogCheck: false,\n            img: null,\n            imgUrl: this.props.user.imgHigh,\n            newImg: false, \n            change: false,\n            colorChange: false,\n            side: 1\n        }\n    }\n\n    handleChange = ({ target }) => {\n        this.setState({ [target.name]: target.value , change:true })\n    }\n\n\n    componentDidMount() {\n    }\n    \n    componentWillUnmount() {\n    }\n    \n    close = ()=>{\n        this.props.openChat()\n    }\n\n\n\n\n    dialogCheckText = ()=>{\n        const text = <div >Bist sicher das du die Änderungen übernehmen willst <div style={{fontWeight: \"bold\"}}>{this.state.user.userName}</div> ? </div>\n        this.setState({text: text, dialogCheck: true })\n        \n    }\n    callbackDialogcheck = (e)=>{\n        this.setState({dialogCheck: false,})\n        if(e){\n            this.userUpdate()\n        }\n       \n        \n    }\n\n    croppedImg = async (e)=>{\n        const picName = this.state.userName\n        let file = await fetch(e)\n        .then(r => r.blob())\n        .then(blobFile => new File([blobFile], picName, {type: \"image/png\" }))\n        this.setState({\n            img:file,\n            imgUrl:e,\n            newImg: true, \n        })\n    }\n\n    userUpdate = ()=>{\n        if(this.state.newImg){\n            const {password, phone, userName, email, img} = this.state\n            this.props.userUpgrade({password, phone, userName, email, img})\n        }else{\n            const {password, phone, userName, email} = this.state\n            this.props.userUpgrade({password, phone, userName, email})\n        }\n        this.close()\n    }\n\n\n\n\n\n\n\n\n\n    profilImg(){\n        if(!this.state.imgUrl){\n            return(\n                <div className=\"regisImgDiv\">\n                    <ImgSize img={this.croppedImg} mobil={this.props.mobil} />\n                </div>\n            )\n        }\n        console.log(this.state)\n        return(\n            <div className=\"regisImgDiv\">\n                <img className='regisImg' src={this.state.imgUrl} alt={this.state.userName}></img>\n                <button className='regisImgBtn' onClick={()=>this.setState({imgUrl: null})}>x</button>\n            </div>\n        );                    \n    }\n\n    saveBtn = ()=>{\n        const {change, newImg} = this.state\n        if(change || newImg){\n            return(\n                <button className='profileSaveBtn' onClick={()=>this.dialogCheckText()}>Änderung speichern</button>\n            )   \n        }else{\n            return(\n                <button className='profileSaveBtn'><div/></button>\n            )\n        }\n    }\n\n    profileMain = ()=>{\n        return(\n            <div>\n                <div className='profileHead'>\n                    <button className='profileBackBackBtn' ></button>\n                    <button className='profileBackBtn' onClick={()=>this.close()}><GoX size={16}/></button>\n                </div>\n                <div className='profileMain'>\n                    <div className='profileImgDiv'>\n                        {this.profilImg()}\n                    </div>\n                      \n                    <div className='profileDataDiv'>\n                        <div className='profileBez'>Benutzername:</div>\n                        <input className='profileInput' value={this.state.userName} name='userName'  onChange={this.handleChange}></input>\n                    </div>\n                    <div className='profileDataDiv'>\n                        <div className='profileBez'>Email:</div>\n                        <input className='profileInput' value={this.state.email} name='email'  onChange={this.handleChange}></input>\n                    </div>\n                    <div className='profileDataDiv'>\n                        <div className='profileBez'>Passwort:</div>\n                        <input className='profileInput' value={this.state.password} name='password' type='password' onChange={this.handleChange}></input>\n                    </div>\n                    <div className='profileDataDiv'>\n                        <div className='profileBez'>Telefon:</div>\n                        <input className='profileInput' value={this.state.phone} name='phone' type='number' onChange={this.handleChange}></input>\n                    </div>\n                    <div className='profileDataDiv'>\n                        <div className='profileSaveBtnDiv'>\n                            {this.saveBtn()}\n                        </div>\n                            \n                        \n                    </div>\n                </div>\n\n                <DialogCheck text={this.state.text} open={this.state.dialogCheck} checked={this.callbackDialogcheck}></DialogCheck>\n            </div>\n        ) \n       \n    \n    }\n\n    \n\n    render(){\n        if(this.props.main===2){\n            return (\n                <div className='profileScreen'>{this.profileMain()}</div>\n            )\n        }else{\n            return null\n        }\n    }\n        \n}\n\nexport default Profile;\n\n\n\n  ","import React from 'react';\nimport './index.css';\nimport { GoX } from \"react-icons/go\";\nimport DialogCheck from './../helpers/dialogCheck'\nimport color from './../helpers/colors'\n\n\n\n\n\n\nexport class ColorMenu extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            user: this.props.user,\n            chatColor : [color.grey,color.highBlue,color.pink,color.orange,color.green,color.white],\n            textColor : [color.black,color.white],\n            color: {\n                backgroundColor: this.props.user.color.backgroundColor,\n                bubbleColor: this.props.user.color.bubbleColor,\n                fontColor: this.props.user.color.fontColor,\n                bubbleColor2: this.props.user.color.bubbleColor2,\n                fontColor2: this.props.user.color.fontColor2,\n\n            },\n            dialogCheck: false,\n            colorChange: false,\n            side: 1\n        }\n    }\n\n\n\n    componentDidMount() {\n    }\n    \n    componentWillUnmount() {\n    }\n    \n    close = ()=>{\n        if(this.state.colorChange){\n            const {color} = this.state \n            const payload = {color}\n            this.props.color(payload)\n        }\n        this.props.openChat()\n    }\n\n    changeColor = (colorTaget, pos) =>{\n        const {color} = this.state\n        switch(pos){\n            case 1:\n                color.backgroundColor = colorTaget\n                this.setState({color: color, colorChange:true})\n                return\n            case 2:\n                color.bubbleColor = colorTaget\n                this.setState({color: color, colorChange:true})\n                return\n            case 4:\n                color.fontColor = colorTaget\n                this.setState({color: color, colorChange:true})\n                return\n            case 3:\n                color.bubbleColor2 = colorTaget\n                this.setState({color: color, colorChange:true})\n                return\n            case 5:\n                color.fontColor2 = colorTaget\n                this.setState({color: color, colorChange:true})\n                return\n            default:\n                return \n        }\n    }\n\n\n\n    leftUser = (message)=>{\n        const dateformat = { \n            //month: 'short', \n            //day: 'numeric',\n            hour12: false,\n            hour:  \"2-digit\",\n            minute: \"2-digit\"\n        };\n        return(\n            <div className='chatinList'>\n                <div className='chatblase' style={{background:this.state.color.bubbleColor2}}>\n                    <div className='chatMessage'>\n                        <div className='chatMessageBlase'style={{color:this.state.color.fontColor2}}>{message}</div>\n                        <div className='chatdate'>\n                            <div>{new Date().toLocaleTimeString('de-DE', dateformat)}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    rightUser = (message)=>{\n        const dateformat = { \n            //month: 'short', \n            //day: 'numeric',\n            hour12: false,\n            hour:  \"2-digit\",\n            minute: \"2-digit\"\n        };\n        return(\n            <div className='chatinListChatUser'>\n                <div className='chatblaseChatUser' style={{background:this.state.color.bubbleColor}}>\n                    <div className='chatMessage'>\n                        <div className='chatMessageBlaseChatUser' style={{color:this.state.color.fontColor}}>{message}</div>\n                        <div className='chatdateChatUser'>\n                            <div>{new Date().toLocaleTimeString('de-DE', dateformat)}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    exampleChat = ()=>{\n        return(\n            <div>\n                {this.leftUser('Hey, Archa!')}\n                {this.rightUser('Moin! was kann kann ich für dich tuen? 🤓')}\n                {this.leftUser('ich brauche eine Veränderung')}\n                {this.rightUser('wähle deine Farbe 😉')}\n            </div>\n        )\n    }\n    \n\n\n    colorMain = ()=>{\n        return(\n            <div>\n                <div className='profileHead'>\n                    <button className='profileBackBtn' onClick={()=>this.close()}><GoX size={16}/></button>\n\n                </div>\n                <div className='showColorFrame'>\n                    <div className='exampleChatDiv' style={{background:this.state.color.backgroundColor}}>\n                        {this.exampleChat()}\n                    </div>\n                </div>\n                <div className='profileMainColor'>\n                    <div className='profileDataDivColor'>\n                        <div className='profileBezColor'>Hintergrund:</div>\n                        <div className='profileColorDiv'>\n                            {this.state.chatColor.map(e=>\n                                <button className={e===this.state.color.backgroundColor?'profileColorBtnState':'profileColorBtn'} key={e} style={{background:e}} onClick={()=>this.changeColor(e,1)}></button>\n                        )}</div>\n                    </div>\n                    <div className='placeholderDiv'></div>\n                    <div className='profileDataDivColor'>\n                        <div className='profileBezColor'>Chat-Blase rechts:</div>\n                        <div className='profileColorDiv'>\n                            {this.state.chatColor.map(e=>\n                                <button className={e===this.state.color.bubbleColor?'profileColorBtnState':'profileColorBtn'} key={e} style={{background:e}} onClick={()=>this.changeColor(e,2)}></button>\n                            )}</div>\n                    </div>\n                    <div className='placeholderDiv'></div>\n                    <div className='profileDataDivColor'>\n                        <div className='profileBezColor'>Chat-Blase links:</div>\n                        <div className='profileColorDiv'>\n                            {this.state.chatColor.map(e=>\n                                <button className={e===this.state.color.bubbleColor2?'profileColorBtnState':'profileColorBtn'} key={e} style={{background:e}} onClick={()=>this.changeColor(e,3)}></button>\n                            )}</div>\n                    </div>\n                    <div className='placeholderDiv'></div>\n                    <div className='profileDataDivColor'>\n                        <div className='profileBezColor'>Text rechts:</div>\n                        <div className='profileColorDiv'>\n                            {this.state.textColor.map(e=>\n                                <button className={e===this.state.color.fontColor?'profileColorBtnState':'profileColorBtn'} key={e} style={{background:e}} onClick={()=>this.changeColor(e,4)}></button>\n                            )}</div>\n                    </div>\n                    <div className='placeholderDiv'></div>\n                    <div className='profileDataDivColor'>\n                        <div className='profileBezColor'>Text links:</div>\n                        <div className='profileColorDiv'>\n                            {this.state.textColor.map(e=>\n                                <button className={e===this.state.color.fontColor2?'profileColorBtnState':'profileColorBtn'} key={e} style={{background:e}} onClick={()=>this.changeColor(e,5)}></button>\n                            )}</div>\n                    </div>\n                </div>\n                <DialogCheck text={this.state.text} open={this.state.dialogCheck} checked={this.callbackDialogcheck}></DialogCheck>\n            </div>\n        )\n    }\n\n    \n\n    render(){\n        if(this.props.main===3){\n            return (\n                <div className='profileScreen'>{this.colorMain()}</div>\n            )\n        }else{\n            return null\n        }\n        \n    }\n        \n}\n\nexport default ColorMenu;\n\n\n\n  ","import React from 'react';\nimport './index.css';\nimport Regis from './register'\nimport Topbar from './topbar'\nimport { ClassicSpinner } from \"react-spinners-kit\";\nimport Chat from './chat'\nimport Profile from './profile'\nimport ColorMenu from './colorMenu'\nimport color from './helpers/colors'\nimport ctrl from './api_controller'\n\n\n\nexport class Home extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            mobil: false,\n            use: 0,\n            email:'',\n            password:'',\n            user: null,\n            newUser: null,\n            useContact: null,\n            chatroomClose: null,\n            main: 1,\n            // standart Farbeinstellung\n            accentColor: color.accentColor,\n            color: {\n                backgroundColor: color.white,\n                bubbleColor: color.highBlue,\n                fontColor: color.white,\n                fontColor2: color.grey,\n                bubbleColor2: color.black\n            },\n            chatroomMap: new Map(),\n            logout:false         \n        }\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this)\n        this.frameToLogin = this.frameToLogin.bind(this)\n        this.topbar = this.topbar.bind(this)\n        this.use = this.use.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange = ({ target }) => {\n        this.setState({ [target.name]: target.value })\n    }\n\n\n    \n\n\n    componentDidMount() {\n        const storage = localStorage.getItem('login_archa')\n        if(storage){\n            this.storageLogin(JSON.parse(storage))\n        }else{\n            this.setState({use:1})\n        }\n        window.addEventListener(\"resize\", this.updateWindowDimensions());\n    }\n    \n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions)\n    }\n    \n    updateWindowDimensions() {\n        const mobil = window.innerWidth<=500\n        document.documentElement.style.setProperty('--vh', `${window.innerHeight/100}px`);\n        this.setState({ mobil: mobil});\n    }\n    backHandleRegis=(e)=>{\n        if(e){\n            this.setState({use: 1})\n        }\n    }\n\n    openChat = (e)=>{\n        this.setState({useContact: e})\n\n    }\n    \n    openSelect = (e)=>{\n        this.setState({main:e})\n    }\n    use4 = ()=>{\n        this.setState({main:1})\n    }\n\n\n    profileUserUprade = (update)=>{\n        if(update.img){\n            this.updateImg_userDB(update)\n        }else{\n            this.update_userDb(update)\n        }\n        \n    }\n\n    updateImg_userDB = async(update)=>{\n        const img = update.img\n            const storageImg = await ctrl.imgSave(img)\n            if(storageImg){\n                update.imgLow = storageImg.imgLow\n                update.imgHigh = storageImg.imgHigh\n                update.imgId = storageImg.id\n                this.update_userDb(update)\n                await ctrl.deleteImg(this.state.user.imgId)\n            }\n    }\n    \n    update_userDb = async(update)=>{\n        const userId = this.state.user.id\n        const user = await ctrl.updateUser(userId, update)\n        if(user){\n            console.log('########UPDATE#########')\n            const {email, password} = user\n            const payload = {email, password}\n            localStorage.setItem('login_archa', JSON.stringify(payload));\n            this.setState({user})\n        }\n    }\n\n\n\n\n\n\n    storageLogin = async(payload)=>{\n        let user = await ctrl.getUserbyEAndP(payload)\n        if(user){\n            console.log(user, 'api passEmail')\n            // nur bis alle profile geändert sind.....\n            if(!user.color){\n                console.log('neu fügt color daten hinzu')\n                const color = this.state.color\n                const payload = {color}\n                user = await ctrl.updateUser(user.id, payload)\n                \n            }\n            // lade Map chatrooms from user\n            \n            const chatroomMap = await ctrl.getCharoomList(user.id)\n            if(chatroomMap){\n                this.setState({user, use:4, chatroomMap})\n            }\n                \n        }else{\n            window.alert('email oder Passwort stimmen nicht')\n            //localStorage.removeItem('login_archa')\n            this.setState({use:1})\n        }\n    }\n\n    login = async()=>{\n        const email = this.state.email\n        const password = this.state.password\n        if(email===''&&password===''){\n            return\n        }\n        const payload = {email, password}\n        let user= await ctrl.getUserbyEAndP(payload)\n        if(user){\n            localStorage.setItem('login_archa', JSON.stringify(payload));\n            const chatroomMap = await ctrl.getCharoomList(user.id)\n            if(chatroomMap){\n                this.setState({user, use:4, chatroomMap})\n            }\n        }else{\n            window.alert('email oder Passwort stimmen nicht')\n            this.setState({use:1})\n        }\n    }\n    chatroomClose= (e)=>{\n        if(e){\n            this.setState({chatroomClose:e})\n        }\n    }\n\n    newUser = (userDb)=>{\n        this.setState({user: userDb, use:4})\n    }\n\n    addUser = (user)=>{\n        if(user._id===this.state.user._id){\n            this.loadMap(user)\n        }  \n    }\n\n    loadMap = async(user)=>{\n        const chatroomMap = await ctrl.getCharoomList(user.id)\n            if(chatroomMap){\n                this.setState({user, use:4, chatroomMap})\n            }\n    }\n\n\n\n    logoutHandle = (e)=>{\n        console.log('ausloggen....')\n        if(e){\n            this.setState({\n                use: 1,\n                email:'',\n                password:'',\n                newUser: null,\n                user: null,\n                chatroomMap: new Map(),\n                addEventListener: null\n            },()=>this.remoteUser())\n        }\n    }\n    remoteUser = ()=>{\n        setTimeout(()=>this.setState({user:null}),300)\n    }\n\n    handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            this.login()\n        }\n      }\n\n    frameToLogin(){\n        return(\n            <div className='loginframeDiv'  onKeyDown={this.handleKeyDown}>\n                <div className='loginframeTxt1'>ARCHA</div>\n                <div className='placeholderDiv'></div>\n                <div className='loginframeTxt3'>Cloud - messenger</div>\n                <div className='placeholderDiv'></div>\n                <div className='loginframeTxt2'>Willkommen!</div>\n                <div className='loginframeTxt2'>log dich ein oder regestriere dich </div>\n                <div className='placeholderDiv'></div>\n                <div className='loginInputDiv'><input className='loginInput' type='text' name='email' placeholder='E-mail' value={this.state.email} onChange={this.handleChange}></input></div>\n                <div className='placeholderDivHalf'></div>\n                <div className='loginInputDiv'><input className='loginInput' type='password' name='password' placeholder='Passwort'value={this.state.password} onChange={this.handleChange}></input></div>\n                <button className='loginBtn' onClick={()=>this.setState({use:3},()=>this.login())}>Login</button>\n                <button className='regesBtn' onClick={()=>this.setState({use:2})}>registrieren</button>\n            </div>\n        )\n    }\n    topbar(){\n        return(\n            <div className='topbarDivHome'>\n                <Topbar \n                    user={this.state.user} \n                    updateUserHome={this.addUser} \n                    mobil={this.state.mobil} \n                    logout={this.logoutHandle} \n                    useContact={this.state.useContact}\n                    chatroomClose={this.chatroomClose}\n                    chatroomMap={this.state.chatroomMap}\n                    openSelect={this.openSelect}\n                />\n            </div>\n        )\n    }\n\n    use(){\n        switch(this.state.use){\n            case 0:\n                const loginLoad =  this.state.use === 0? true : false\n                return(\n                    <div className='regisDivSwitchLoad'>\n                        <div className='heicSpinner'>\n                            <div className='heicSpinnerStartDiv'>\n                                <ClassicSpinner size={50} margin={2} color='#639cdd' loading={loginLoad}/>\n                            </div>\n                        </div> \n                    </div>\n                )\n            case 1:\n                return(\n                    <div className='regisDivSwitch'>\n                        {this.frameToLogin()}\n                    </div>\n                )\n            // neuer User.....\n            case 2:\n                return(\n                    <div className='regisDivSwitch'>\n                        <Regis mobil={this.state.mobil} back={this.backHandleRegis} newUser={this.newUser}/>\n                    </div>\n                )\n            // einloggen.....\n            case 3:\n                const loading = true\n                return(\n                    <div className='regisDivSwitch'>\n                        <div className='loginframeDiv'>\n                            <div className='placeholderDiv'></div>\n                            <div className='loginframeTxt3'>lade... </div>\n                            <div className='heicSpinner'><ClassicSpinner size={50} margin={2} color='#639cdd' loading={loading}/></div> \n                        </div>               \n                    </div>\n                )\n            // Main Paiper....\n            case 4:\n                return(\n                    <div className='regisDivSwitch'>\n                        <div className='loginframeDiv'>\n                            <Chat \n                                user={this.state.user} \n                                useContact={this.openChat} \n                                chatroomClose={this.state.chatroomClose} \n                                mobile={this.state.mobil} \n                                chatroomMap={this.state.chatroomMap}\n                                updateMap={this.loadMap}\n                                main={this.state.main}\n                            />\n                            <Profile\n                                openChat={this.use4}\n                                user={this.state.user}\n                                userUpgrade={this.profileUserUprade}\n                                main={this.state.main}\n                            />\n                            <ColorMenu\n                                openChat={this.use4}\n                                user={this.state.user}\n                                color={this.profileUserUprade}\n                                main={this.state.main}\n                            />\n                        </div>               \n                    </div>\n                )\n            default: return null\n        }\n    }\n    \n\n    render(){\n        return(\n            <div className={!this.state.mobil?'homeScreen':'homeScreenMobil'} >\n                {this.topbar()}\n                <div className={!this.state.mobil?'loginFrame':'loginFrameMobil'}>\n                    {this.use()}\n                </div>\n            </div>\n        ); \n    }\n}\n\nexport default Home;\n\n\n\n  ","\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './Home';\nimport './Home/index.css'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\n// React Router\n// ========================================\n\n\nfunction App() {\n  \n  \n  return (\n    <div>\n      <Switch>\n        <Route exact path={\"/\"}>\n          <Home/>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\n\n\n\n\n\nReactDOM.render(\n  <React.Fragment>\n    <Router>\n      <App/>\n    </Router>\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n","\n\n\n\nmodule.exports = function () {\n  return  ['/\\uD83C\\uDFF4(?:\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74)\\uDB40\\uDC7F|\\u200D\\u2620\\uFE0F)|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC68(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3]))|\\uD83D\\uDC69\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC68(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83D\\uDC69\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC68(?:\\u200D(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|[#\\0-9]\\uFE0F\\u20E3|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDD1-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDEEB\\uDEEC\\uDEF4-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])|(?:[#\\0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC69\\uDC6E\\uDC70-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3D\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDD1-\\uDDDD])/g']\n  \n}\n\n"],"sourceRoot":""}