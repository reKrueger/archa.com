{"version":3,"sources":["Home/helpers/imgClass/cropImage.js","Home/helpers/imgClass/rotateImage.js","Home/helpers/dialogViewImg/index.js","Home/helpers/avatar/index.js","Home/helpers/imgClass/index.js","Home/helpers/dialogFail/index.js","switch.js","Home/api/index.js","Home/api_controller/index.js","Home/helpers/colors/index.js","Home/register/index.js","Home/helpers/dialogCheck/index.js","Home/topbar/dialogMenu/index.js","Home/socket/WebSocket.js","Home/socket/socket.js","Home/topbar/index.js","Home/helpers/spinner/index.js","Home/chat/insideMessage/imageMessage.js","Home/chat/insideMessage/textMessage.js","Home/chat/insideMessage/dateMessage.js","Home/chat/insideMessage/statusMessage.js","Home/chat/message.js","Home/chat/dateline/index.js","Home/chat/chatVerlauf.js","Home/chat/search.js","Home/chat/insideRooms/dateItem.js","Home/chat/insideRooms/messageItem.js","Home/chat/roomItem.js","Home/chat/chatroom.js","Home/chat/chatImage/rotateImage.js","Home/chat/emoji/index.js","Home/chat/chatImage/index.js","Home/chat/inputDevice.js","Home/helpers/get_Id.js","Home/notifications/push_notification.js","Home/notifications/notifi_reges.js","Home/notifications/notifi_send.js","Home/chat/index.js","Home/profile/index.js","Home/colorMenu/index.js","Home/index.js","serviceWorkerRegistration.js","index.js","Home/chat/emoji/emojiRegex.js"],"names":["createImage","url","Promise","resolve","reject","image","Image","addEventListener","error","setAttribute","src","getRadianAngle","degreeValue","Math","PI","getCroppedImg","imageSrc","pixelCrop","a","rotation","canvas","document","createElement","ctx","getContext","safeArea","max","width","height","translate","rotate","drawImage","data","getImageData","putImageData","x","y","toBlob","file","URL","createObjectURL","getRotatedImage","ViewImg","props","dialogText","className","state","text","close","open","imgUrl","prevProps","this","setState","Dialog","fullScreen","onClick","size","alt","React","Component","Avatar","imgViewClose","e","imgViewOpen","stringToColor","str","hash","i","length","charCodeAt","colour","j","toString","substr","name","imgLow","imgHigh","imgView","user","divStyle","background","ava","charAt","lastPart","lastIndexOf","undefined","style","ORIENTATION_TO_ANGLE","readFile","reader","FileReader","result","readAsDataURL","ImgSize","onCropChange","crop","onCropComplete","croppedArea","croppedAreaPixels","onZoomChange","zoom","showResult","isCropping","croppedImage","callbackCorrectImg","onClose","img","correctImg","imageDataUrl","getOrientation","orientation","isHeic","heic2any","blob","toType","multiple","quality","then","res","heicFile","onHeicFileChange","catch","console","log","heicImg","heicLoad","onFileChange","target","files","type","spinner","loading","margin","color","oldImg","userName","aspect","id","accept","onChange","mobil","disabled","showGrid","DialogFail","dialogCallback","failChecked","num","api","setUrl","setPATH","serverUrl","axios","create","baseURL","config","headers","apiPic","apiChatPic","configMobil","apiPicMobil","apiChatPicMobil","apiChat","apiChats","apiMess","apiChatroomMap","apiNotifi","apis","insertUser","payload","post","updateUserById","patch","deleteUserById","delete","getUserById","get","insertImg","deleteImgById","createChatroom","updateChatroom","put","deleteChatroomById","getUserbyEmailAndPassw","getUserbySearch","getNextMessByChatroomName","getChatroomMapByUserId","messReadHandleByChatroomId","insertChatImg","deleteChatImgById","insertImgMobil","insertChatImgMobil","deleteChatroomMapByName","notifiGetById","contact","notifiPost","success","search","users","update","chatroom","chatroomMap","Map","resData","chatrooms","Object","keys","map","set","userId","chatroomName","cMap","ctrl","imgSave","newUserSave","getUser","getUserbyEAndP","getSearch","updateUser","deleteImg","deleteUser","getCharoomList","chatImgSave","deleteChatImg","chatImgSaveMobil","imgSaveMobil","highBlue","grey","pink","green","orange","white","black","accentColor","olive","lila","red","pastellgreen","Regis","back","handleChange","value","croppedImg","picName","fetch","r","blobFile","File","noImg","email","password","phone","openDialogFail","txt","newUser","storageImg","insertNewUser","imgId","userDb","userFail","step","backgroundColor","bubbleColor","fontColor","fontColor2","bubbleColor2","regisSteps","bind","navibuttons","profilImg","DialogCheck","checked","MenuTab","chatroomClose","deleteId","openSelect","logoutHandle","logout","DialogCheckText","n","fontWeight","dialogCheck","userDelete","deleteUserBtn","cUserId","useContact","allMap","cName","cPic","callbackDialogcheck","userUpdate","clearStarage","localStorage","removeItem","Popover","anchorEl","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onBackdropClick","API_PATH","path","WebSocketService","callbacks","socketRef","instance","room","WebSocket","onopen","onmessage","socketNewMessage","onerror","message","onclose","parsedData","JSON","parse","command","messages","sendMessage","username","newMessageCallback","send","stringify","err","readyState","callback","socket","recursion","waitForSocketConnection","setTimeout","WebSocketInstance","getInstance","register","component","initChatUser","msg","messageObject","author","newChatMessage","hack","charLength","hacking","callbackPool","messagesCallback","addCallbacks","unregisterHandler","disconnect","connect","roomName","pingContact","contactPing","pingAnswer","answerPing","onEnterRoom","userStatus","statusUser","Topbar","getImg","build","updateUserHome","menuClose","dropdown","addChatUser","inviIndex","handleClickDropdown","divRef","current","client","s3upload","createRef","userData","prevState","invitUserName","invitUserImgUrl","ref","aria-owns","aria-haspopup","updateUserCallback","spinner_color","Spinner","Preloader","ImageMessage","imgChatBlase","TextMessage","singleEmoji","mess","match","emojiRegex","join","checkLink","startsWith","href","rel","peruseMessage","mess_update","dateformat","hour12","hour","minute","DateMessage","date","Date","toLocaleTimeString","StatusMessage","messageStatus","read","Message","dateformat2","month","day","Dateline","makeALine","dateLine","dateBefor","toLocaleString","borderBottomColor","ListItem","Chatbox","handleScroll","event","node","messageCount","chat","scrollHeight","scrollTop","clientHeight","archiv","loadingOldMess","getnextMess","next_mess","re_messlist","oldMessage","backhandle","closeMess","scrollToBottom","messagesEnd","scrollIntoView","behavior","block","inline","chatVerlauf","imgSend","lines","forEach","element","index","push","key","indexOf","start","input","imgLoading","chatsLength","imgCount","filter","nextProps","nextState","message_counter","float","clear","el","Search","handleSearch","searchChatUser","placeholder","chatUser","searchFound","chatUserArr","selectUser","items","updateContactUser","_id","chatUserId","contacts","find","conracts","Date_message","toLocaleDateString","MessageItem","RoomItem","messageReads","is_online","online","mapId","lastchat","lastchatTime","createRoom","openChat","Chatroom","runopenChatbox","openDialogCheck","searchUpdate","chatroomItem","sortMap","sortArray","entries","sort","b","mapSort","chatMap","usersMap","chatUserJoined","avatar","progress","chatroomView","openNewChat","Emoji","show","onEmojiClick","emojiObject","emoji","emojiPicker","chosenEmoji","setChosenEmoji","handleChangeEmoji","mobile","InputDevice","croom","charCount","useImg","loader","mongoObjectId","getTime","replace","random","toLowerCase","pushServerPublicKey","isPushNotificationSupported","navigator","window","askUserPermission","Notification","requestPermission","createNotificationSubscription","serviceWorker","ready","pushManager","subscribe","userVisibleOnly","applicationServerKey","Notifi","sub","subscription","Json_sub","parse_sub","getSubcriptionId","getSubscription","pushSubscription","existingSubscription","sendSubscriptionToPushServer","userSubscription","endpoint","auth","p256dh","notifi_key","sendNotification","setNotifi","notifi_class","pushNotifiApo","userSub","sendNotifi","connectSocket","rooms","Array","from","values","ping_room","setName","runChatroom","cRoom","runNewChatroom","sendData","createChatroomDb","selected","getId","creator","members","roomId","inquiryUser","answerContact","roomMap","newRoom","default","onSendMessage","m","mapKey","searchValue","getKeyBychatroomName","user_id","notifi_payload","title","chatverlauf","login","joinedUser","contactSubscription","addMessagesCallback","onlineUser","answer","alert","hackTime","user_self","concat","status","splice","getIdByValue","c_name","mess_c_name","has","panel","scrollTo","main","Profile","dialogCheckText","formData","FormData","append","newImg","userUpgrade","saveBtn","change","profileMain","colorChange","side","examples","ColorMenu","changeColor","colorTaget","pos","exampleMessage","exampleChat","colorMain","chatColor","textColor","Home","backHandleRegis","use","use4","profileUserUprade","updateImg_userDB","update_userDb","setItem","storageLogin","addUser","loadMap","remoteUser","handleKeyDown","updateWindowDimensions","frameToLogin","topbar","storage","getItem","innerWidth","documentElement","setProperty","innerHeight","removeEventListener","onKeyDown","loginLoad","updateMap","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","App","ReactDOM","render","StrictMode","getElementById","process","origin","response","contentType","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","module","exports"],"mappings":"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","file":"static/js/main.4b046930.chunk.js","sourcesContent":["const createImage = url =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', error => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nfunction getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n * @param {File} image - Image File url\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\n * @param {number} rotation - optional rotation parameter\n */\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  const safeArea = Math.max(image.width, image.height) * 2\n\n  // set each dimensions to double largest dimension to allow for a safe area for the\n  // image to rotate in without being clipped by canvas context\n  canvas.width = safeArea\n  canvas.height = safeArea\n\n  // translate canvas context to a central location on image to allow rotating around the center.\n  ctx.translate(safeArea / 2, safeArea / 2)\n  ctx.rotate(getRadianAngle(rotation))\n  ctx.translate(-safeArea / 2, -safeArea / 2)\n\n  // draw rotated image and store data.\n  ctx.drawImage(\n    image,\n    safeArea / 2 - image.width * 0.5,\n    safeArea / 2 - image.height * 0.5\n  )\n  const data = ctx.getImageData(0, 0, safeArea, safeArea)\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width\n  canvas.height = pixelCrop.height\n\n  // paste generated rotate image with correct offsets for x,y crop values.\n  ctx.putImageData(\n    data,\n    0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x,\n    0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y\n  )\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise(resolve => {\n    canvas.toBlob(file => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n","\n\n\nexport const createImage = url =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', error => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nexport async function getRotatedImage(imageSrc, rotation = 0) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  const orientationChanged =\n    rotation === 90 || rotation === -90 || rotation === 270 || rotation === -270\n  if (orientationChanged) {\n    canvas.width = image.height\n    canvas.height = image.width\n  } else {\n    canvas.width = image.width\n    canvas.height = image.height\n  }\n\n  ctx.translate(canvas.width / 2, canvas.height / 2)\n  ctx.rotate((rotation * Math.PI) / 180)\n  ctx.drawImage(image, -image.width / 2, -image.height / 2)\n\n  return new Promise(resolve => {\n    canvas.toBlob(file => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n","import React from 'react';\nimport './index.css';\nimport Dialog from '@material-ui/core/Dialog';\nimport { GoX } from \"react-icons/go\";\n\n\n\n\n\n\n\n         \n\n\nexport class ViewImg extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            open: this.props.open,\n            imgUrl: this.props.imgUrl\n\n\n        }\n      \n    }\n\n\n    componentDidUpdate(prevProps){\n        if(this.props.open!==prevProps.open){\n            this.setState({open:this.props.open})\n        }\n        if(this.props.imgUrl!==prevProps.imgUrl){\n            this.setState({imgUrl:this.props.imgUrl})\n        }\n    }\n\n    dialogText = ()=>{\n        return(\n            <div className='dialogCheckText'>{this.state.text}</div>\n        )\n    }\n    close = ()=>{\n        this.props.close(true)\n    }\n\n    \n\n    render(){\n        return(\n            <Dialog \n            className='imgViewDialog'\n            open={this.state.open===true}\n            fullScreen>\n                <div className='imgViewHead'><button className='chatheadBtn' onClick={()=>this.close()}><GoX size={36}/></button></div>\n                <div className='imgViewFrame'>\n                    <div className='imgViewDiv'><img className='imgViewImg' src={this.state.imgUrl} alt='...'/></div>\n                </div>\n            </Dialog>\n        ); \n    }\n}\n\nexport default ViewImg;\n\n\n\n  ","import React from 'react';\nimport './index.css';\nimport ImgView from './../dialogViewImg'\n\n\n\n\nexport class Avatar extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            name: this.props.name,\n            imgLow: this.props.imgLow,\n            imgHigh: this.props.imgHigh,\n\n            \n            imgViewOpen:false,\n            imgView:null,\n        }\n    }\n\n    \n\n    \n    componentDidUpdate(prevProps){\n        if(this.props.name!==prevProps.name){\n            this.setState({user:this.props.name})\n        }\n        if(this.props.imgLow!==prevProps.imgLow){\n            this.setState({imgLow:this.props.imgLow, imgHigh: this.props.imgHigh})\n        }\n    \n    }\n\n    imgViewClose = (e)=>{\n        if(e){\n            this.setState({imgViewOpen:false})\n        }\n\n    }\n\n    \n    \n    stringToColor = (str)=> {\n        let hash = 0\n        for (var i = 0; i < str.length; i++) {\n            hash = str.charCodeAt(i) + ((hash << 5) - hash)\n          }\n          var colour = '#';\n          for (var j = 0; j < 3; j++) {\n            var value = (hash >> (j * 8)) & 0xFF;\n            colour += ('00' + value.toString(16)).substr(-2)\n          }\n          return colour;\n    }\n    \n\n    \n\n    render(){\n        const divStyle = {\n            background: this.stringToColor(this.state.name)\n        }\n        const ava = this.state.name.charAt(0)+this.state.name.charAt(1)\n        const url = this.props.imgLow\n        let lastPart = 1\n        if(url){\n            lastPart = url.substr(url.lastIndexOf('/') + 1);\n        }\n        if(!this.props.imgLow || this.props.imgLow===undefined || lastPart==='null' || lastPart==='undefined'){\n            return(\n                <div className='avatar' style ={divStyle}>{ava}</div>\n            )\n        }else{\n            return(\n                <div>\n                    <img className='avatar'  src={this.state.imgLow} alt={this.state.name} onClick={()=>this.setState({imgViewOpen: true, imgView:this.state.imgHigh})}/>\n                    <ImgView open={this.state.imgViewOpen} imgUrl={this.state.imgView} close={this.imgViewClose}/>\n                </div>\n            )\n        }\n        \n    }\n}\n\nexport default Avatar;\n\n\n\n  ","import React, { Fragment } from 'react'\nimport Cropper from 'react-easy-crop'\nimport { getOrientation } from 'get-orientation/browser'\nimport getCroppedImg from './cropImage'\nimport { getRotatedImage } from './rotateImage'\nimport './index.css'\nimport Dialog from '@material-ui/core/Dialog';\nimport { FiCamera} from \"react-icons/fi\";\nimport { GoX } from \"react-icons/go\";\nimport heic2any from \"heic2any\";\nimport DotLoader from \"react-spinners/DotLoader\";\nimport Avatar from './../avatar'\n\n\n\n\nconst ORIENTATION_TO_ANGLE = {\n  '3': 180,\n  '6':  0,\n  '8': -90,\n}\n\n\n\nclass ImgSize extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      imageSrc: null,\n      crop: { x: 0, y: 0 },\n      zoom: 2,\n      aspect: 1 / 1,\n      croppedAreaPixels: null,\n      croppedImage: null,\n      isCropping: false,\n      correctImg: null,\n      file: null,\n      heicFile:null,\n      heicLoad: false,\n    }\n  }\n\n\n  onCropChange = crop => {\n    this.setState({ crop })\n  }\n\n  onCropComplete = (croppedArea, croppedAreaPixels) => {\n    this.setState({\n      croppedAreaPixels,\n    })\n  }\n\n  onZoomChange = zoom => {\n    this.setState({ zoom })\n  }\n\n  showResult = async () => {\n    try {\n      this.setState({\n        isCropping: true,\n      })\n      const croppedImage = await getCroppedImg(\n        this.state.imageSrc,\n        this.state.croppedAreaPixels\n      )\n      this.setState({\n        croppedImage,\n        isCropping: false,\n      },()=>this.callbackCorrectImg(croppedImage))\n    } catch (e) {\n      this.setState({\n        isCropping: false,\n      },()=>this.onClose())\n    }\n  }\n\n  // callback cropped Image......\n  callbackCorrectImg = async (e) =>{\n    this.props.img(e)\n    this.setState({correctImg: e})\n    this.close()\n  }\n\n  \n\n\n  onClose = async () => {\n    this.setState({\n      croppedImage: null,\n    })\n  }\n\n  rotation = async () => {\n    if(this.state.file=== null){\n      return\n    }\n    const file = this.state.file\n      let imageDataUrl = await readFile(file)\n\n      // auto rotation.....\n      const orientation = await getOrientation(file)\n      const rotation = ORIENTATION_TO_ANGLE[orientation]\n      if (rotation) {\n        imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\n      }\n      this.setState({\n        imageSrc: imageDataUrl,\n        crop: { x: 0, y: 0 },\n        zoom: 1,\n      })\n    \n  }\n\n\n  isHeic = async file =>{\n    await heic2any({\n      blob: file,\n      toType: \"image/jpeg\",\n      multiple: false,\n      quality: 0.2\n    })\n      .then(res=> {\n        this.setState({heicFile:res},()=>this.onHeicFileChange())\n      })\n    .catch((e) => {\n      console.log('catch file')\n      console.log(e)\n    });\n    \n\n    \n  }\n\n  onHeicFileChange = async()  => {\n    const heicImg = this.state.heicFile\n    let imageDataUrl = await readFile(heicImg)\n\n    // auto rotation.....\n    const orientation = await getOrientation(heicImg)\n    const rotation = ORIENTATION_TO_ANGLE[orientation]\n    if (rotation) {\n       imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\n    }\n    this.setState({\n      file: heicImg,\n      heicLoad:false,\n      imageSrc: imageDataUrl,\n      crop: { x: 0, y: 0 },\n      zoom: 1,\n    })\n  }\n\n  onFileChange = async e => {\n    if (e.target.files && e.target.files.length > 0) {\n      const file = e.target.files[0]\n      if(file.type==='image/heic'){\n        this.setState({heicLoad:true},()=>this.isHeic(file))\n        return\n      }\n      let imageDataUrl = await readFile(file)\n\n      // auto rotation.....\n      const orientation = await getOrientation(file)\n      const rotation = ORIENTATION_TO_ANGLE[orientation]\n      if (rotation) {\n        imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\n      }\n      this.setState({\n        file: file,\n        imageSrc: imageDataUrl,\n        crop: { x: 0, y: 0 },\n        zoom: 1,\n      })\n    }\n  }\n\n\n\n  \n\n\n  close = async ()=>{\n      this.setState({imageSrc:null})\n  }\n\n  spinner = ()=>{\n    const loading = this.state.heicLoad\n    if(loading){\n      return(\n        <div className='heicSpinner'><DotLoader size={50} margin={2} color='#000000' loading={loading}/></div>\n      )\n    }else if(this.props.oldImg){\n      return(\n          <Avatar name={this.props.userName} imgUrl={this.props.imgUrl}/>\n      )\n\n    \n    }else{\n      return(\n        <button className=\"fakefile\"><FiCamera size={30}/></button>\n      )\n    }\n }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"ggg\">\n          <div className=\"picPos\">\n            <div className=\"imgPadd\">{this.spinner()}</div>\n            <input id=\"fileInput\" className=\"hidden\" type=\"file\" accept=\"image/* .heic\" multiple=\"multiple\" onChange={this.onFileChange}/>  \n            </div>\n          </div>\n          <Dialog \n          className='ImgSizeDialog'\n          open={!!this.state.imageSrc}\n          fullScreen>\n          <div className={!this.props.mobil?'imgSizeFrame':'imgSizeFrameMobil'}>\n            <div className='imgSizeHeadDiv'>\n            <button className=\"imgSizeHeadDivReturnBtnI\"\n                    onClick={()=>{this.setState({imageSrc: null})}}\n                    disabled={this.state.isCropping}>\n                    <GoX className='imgSizeHeadDivReturnIcon' size={35}/>\n            </button>\n            </div>\n            {this.state.imageSrc && (\n            <Fragment>\n              <div className=\"crop-container\">\n                <Cropper\n                  image={this.state.imageSrc}\n                  crop={this.state.crop}\n                  zoom={this.state.zoom}\n                  aspect={this.state.aspect}\n                  onCropChange={this.onCropChange}\n                  onCropComplete={this.onCropComplete}\n                  onZoomChange={this.onZoomChange}\n                  showGrid={false}\n                />\n              </div>\n                <div className=\"buttonAuswahlConImgSize\">\n                  <button className=\"buttonAuswahl\" onClick={this.showResult} disabled={this.state.isCropping}>Auswahl</button>\n                </div>\n          </Fragment>\n        )}\n        </div>\n        </Dialog>\n      </div>\n     \n    )\n  }\n}\n\nfunction readFile(file) {\n  return new Promise(resolve => {\n    const reader = new FileReader()\n    reader.addEventListener('load', () => resolve(reader.result), false)\n    reader.readAsDataURL(file)\n  })\n}\n\n\nexport default ImgSize;","import React from 'react';\nimport './index.css';\nimport Dialog from '@material-ui/core/Dialog';\n\n\n\n\n\n\n\n         \n\n\nexport class DialogFail extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            text: this.props.text,\n            open: this.props.open,\n        }\n      \n    }\n\n\n    componentDidUpdate(prevProps){\n        if(this.props.open!==prevProps.open){\n            this.setState({open:this.props.open})\n        }\n        if(this.props.text!==prevProps.text){\n            this.setState({text:this.props.text})\n        }\n    }\n\n    dialogText = ()=>{\n        return(\n            <div className='dialogCheckText'>{this.state.text}</div>\n        )\n    }\n    dialogCallback = (e)=>{\n        this.props.failChecked(e)\n    }\n\n    \n\n    render(){\n        return(\n            <Dialog \n            className='checkDialog'\n            open={this.state.open===true}\n            fullScreen>\n                <div className='dialogCheckFrame'>\n                    {this.dialogText()}\n                    <div className='placeholderDiv'></div>\n                    <div className='dialogCheckBtnDiv'>\n                        <button className='dialogCheckBtn' onClick={()=>this.dialogCallback(true)}>Ok</button>\n                    </div>\n                </div>\n            </Dialog>\n        ); \n    }\n}\n\nexport default DialogFail;\n\n\n\n  ","\nconst local = false\n\nlet num = null\nif(!local){\n    num = 0\n}else{\n    num = 1\n}\n\n\n\nconst API_PATH = ['wss://archa-backend.herokuapp.com/ws/chat/','ws://localhost:3000/ws/chat/']\n\n\n\nconst API_URL = ['https://archa-backend.herokuapp.com','http://127.0.0.1:3000']\n\n\n\n\n\n\n\nconst setUrl = API_URL[num]\nconst setPATH = API_PATH[num]\n\nconst api ={\n    setUrl,\n    setPATH\n}\n\nexport default api","\n/*\n.catch(function (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  });\n  */\n\n\nimport axios from 'axios'\nimport url from './../../switch'\n\n\n/*\nconst configUni = {\n  headers: {\n    'Content-Type': 'application/json'\n  },\n}\n*/\n// django\nconst serverUrl =  url.setUrl\nconst api = axios.create({\n    baseURL: serverUrl+'/api',\n\n})\nexport const insertUser = payload => api.post(`/user`, payload)\nexport const updateUserById = (id, payload) => api.patch(`/user/${id}`, payload)\nexport const deleteUserById = id => api.delete(`/user/${id}`)\nexport const getUserById = id => api.get(`/user/${id}`)\nexport const getUserbyEmailAndPassw = payload => api.put(`/user`, payload)\nexport const getUserbySearch = payload => api.patch(`/user`, payload)\n\n\n// Filedata Img Django Rest-framework\n///\nconst config = {\n  headers: {\n    'Content-Type': 'multipart/form-data;boundary=boundary',\n    'Content-Disposition': 'attachment;filename=file.jpg',\n  },\n}\nconst apiPic = axios.create({\n    baseURL: serverUrl+'/apiimg'\n})\nexport const insertImg = payload => apiPic.post(`/images`, payload, config)\nexport const deleteImgById = id => apiPic.delete(`/images/${id}`)\n\nconst apiChatPic = axios.create({\n  baseURL: serverUrl+'/apichatimg'\n})\nexport const insertChatImg = payload => apiChatPic.post(`/images`, payload, config)\nexport const deleteChatImgById = id => apiChatPic.delete(`/images/${id}`)\n\n// mobil api\n\nconst configMobil = {\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'multipart/form-data'\n  },\n}\nconst apiPicMobil = axios.create({\n  baseURL: serverUrl+'/apiimgmobil'\n})\nexport const insertImgMobil = payload => apiPicMobil.post(`/images`, payload, configMobil)\n\nconst apiChatPicMobil = axios.create({\nbaseURL: serverUrl+'/apichatimgmobil'\n})\nexport const insertChatImgMobil = payload => apiChatPicMobil.post(`/images`, payload)\n\n\nconst apiChat = axios.create({\n    baseURL: serverUrl+'/apichat',\n})\nexport const createChatroom = payload => apiChat.post(`/chatroom`, payload)\nexport const updateChatroom = (id,payload) => apiChat.put(`/chatroom/${id}`, payload)\nexport const deleteChatroomById = (id,payload) => apiChat.delete(`/chatroom/${id}`, payload)\n\n\nconst apiChats = axios.create({\n    baseURL: serverUrl+'/apichats',\n})\nexport const messReadHandleByChatroomId = (id,payload)=> apiChats.patch(`/chats/${id}`, payload)\n\nconst apiMess = axios.create({\n  baseURL: serverUrl+'/apimess',\n})\nexport const getNextMessByChatroomName = name => apiMess.get(`/${name}`)\n\nconst apiChatroomMap = axios.create({\n    baseURL: serverUrl+'/apichatroommap',\n})\nexport const getChatroomMapByUserId = id => apiChatroomMap.get(`/${id}`)\nexport const deleteChatroomMapByName = (id, payload) => apiChatroomMap.put(`/${id}`, payload)\n  \n\n\n// Notifications\nconst apiNotifi = axios.create({\n  baseURL: serverUrl+'/api',\n\n})\nexport const notifiPost = payload => apiNotifi.post(`/notifications`, payload)\nexport const notifiGetById = (contact, payload) => apiNotifi.post(`/notifications/${contact}`, payload)\n\n\n\nconst apis = {\n    insertUser,\n    updateUserById,\n    deleteUserById,\n    getUserById,\n    insertImg,\n    deleteImgById,\n    createChatroom,\n    updateChatroom,\n    deleteChatroomById,\n    getUserbyEmailAndPassw,\n    getUserbySearch,\n    getNextMessByChatroomName,\n    getChatroomMapByUserId,\n    messReadHandleByChatroomId,\n    insertChatImg,\n    deleteChatImgById,\n    insertImgMobil,\n    insertChatImgMobil,\n    deleteChatroomMapByName,\n    notifiGetById,\n    notifiPost\n    \n}\n\n\nexport default apis","\nimport api from './../api/index'\n\n\n\n\n\n  /////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////BILDER///////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n\n\n\n  // Speichere Bild User\n  export async function imgSave(file) {\n    const e = await api.insertImg(file).then(res=> {\n        const imgId = res.data\n        /*\n        .id\n        .imgLow\n        .imgHigh\n        */\n        return imgId\n    })\n\n    return e\n  }\n\n  // Speichere Bild User Mobil\n  export async function imgSaveMobil(file) {\n    const e = await api.insertImgMobil(file).then(res=> {\n        const imgId = res.data\n        /*\n        .id\n        .imgLow\n        .imgHigh\n        */\n        return imgId\n    })\n\n    return e\n  }\n\n\n  // lösche Bild. User ....\n  export async function deleteImg(id){\n    const e = await api.deleteImgById(id).then(res=>{\n      if(res){\n        console.log('bild gelöscht !')\n        return res.success\n      }\n    })\n    return e\n  }\n\n\n  // Speichere Bild Chats\n  export async function chatImgSave(file) {\n    const e = await api.insertChatImg(file).then(res=> {\n        const imgId = res.data\n        /*\n        .id\n        .imgLow\n        .imgHigh\n        */\n        return imgId\n    })\n\n        \n    \n    return e\n  }\n\n\n  // Speichere Bild Chats\n  export async function chatImgSaveMobil(file) {\n    const e = await api.insertChatImgMobil(file).then(res=> {\n        const imgId = res.data\n        /*\n        .id\n        .imgLow\n        .imgHigh\n        */\n        return imgId\n    })\n\n        \n    \n    return e\n  }\n\n\n  // lösche Bild Chats ....\n  export async function deleteChatImg(id){\n    const e = await api.deleteImgById(id).then(res=>{\n      if(res){\n        console.log('bild gelöscht !')\n        return res.success\n      }\n    })\n    return e\n  }\n\n\n\n\n\n\n\n\n/////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////USER///////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n\n\n\n  // Speichere neuen USer\nexport async function newUserSave(payload) {\n    const e = await api.insertUser(payload).then(res => {\n      const userDb = res.data\n      return userDb\n    })\n    return e\n  }\n\n  // suche user nach id\n  export async function getUser(id){\n    const e = await api.getUserById(id).then(res=>{\n      if(res.data.success){\n        const user = res.data.data\n        return user\n      }else{\n        return false\n      }\n      \n    })\n    return e\n  }\n\n\n  // suche user nach Email und password\n  export async function getUserbyEAndP(payload){\n    const e = await api.getUserbyEmailAndPassw(payload).then(res=>{\n      if(!res.data.userName){\n        return false\n      }else{\n        const user = res.data\n        return user\n      }\n      \n    })\n    return e\n  }\n\n  \n\n  // suche .....\n  export async function getSearch(search){\n    const e = await api.getUserbySearch(search).then(res=>{\n      if(res.data.success){\n        const user = res.data.users\n        return user\n      }else{\n        return false\n      }\n      \n    })\n    return e\n  }\n\n   // update User....\n  export async function updateUser(id,payload){\n    const e = await api.updateUserById(id, payload).then(res=>{\n      if(res.data.success){\n        const user = res.data.update\n        return user\n      }else{\n        return false\n      }\n      \n    })\n    return e\n  }\n\n\n  // lösche User.....\n  export async function deleteUser(id){\n    const e = await api.deleteUserById(id).then(res=>{\n      if(res){\n        return res.success\n      }\n    })\n    return e\n  }\n\n\n\n\n\n\n\n\n\n\n\n/////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////Chatroom///////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n\n  // erstelle Chatroom\n  export async function createChatroom(payload) {\n    const chatroom = await api.createChatroom(payload).then(res => {\n      const chatroomData = res.data\n      return chatroomData\n    })\n    return chatroom\n  }\n\n\n  \n\n   // update Chatroom....\n   export async function updateChatroom(id,payload){\n    const e = await api.updateChatroom(id, payload).then(res=>{\n      if(res.data.success){\n        return true\n      }else{\n        return false\n      }\n      \n    })\n    return e\n  }\n \n\n  \n\n\n\n\n/////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////Chatroom...Map///////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n\n  export async function getCharoomList(id){\n    const chatroomMap = new Map()\n    await api.getChatroomMapByUserId(id).then(res=> {\n      const resData = res.data.chatrooms\n      const chatrooms = Object.keys(resData)\n      chatrooms.map(e=> chatroomMap.set(e, resData[e]))\n    })\n    return chatroomMap\n    \n  }\n\n\n  export async function deleteChatroomMapByName(userId,chatroomName){\n    const cMap = await api.deleteChatroomMapByName(userId, chatroomName).then(res=>{\n      return res.data\n    })\n    if(cMap){\n      return cMap\n    }\n    \n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n  const ctrl =  {\n    imgSave,\n    newUserSave,\n    getUser,\n    getUserbyEAndP,\n    getSearch,\n    updateUser,\n    createChatroom,\n    updateChatroom,\n    deleteImg,\n    deleteUser,\n    getCharoomList,\n    chatImgSave,\n    deleteChatImg,\n    chatImgSaveMobil,\n    imgSaveMobil,\n    deleteChatroomMapByName\n    \n\n  }\n  export default ctrl","\n\n// colors\nconst highBlue = '#5ba3c7'\nconst grey = '#f0f0f0'\nconst pink = '#e8c8c8'\nconst green = '#a3c49f'\nconst orange = '#ebd7b7'\nconst white = '#ffffff'\nconst black = '#212121'\nconst olive = '#c4d184'\nconst lila = '#9397d9'\nconst red = '#d993a0'\nconst pastellgreen = '#98b8a7'\n\nconst accentColor = '#2e96e0'\n\nconst color = {highBlue, grey, pink, green, orange, white, black, accentColor, olive, lila, red, pastellgreen } \n\nexport default color\n","import React from 'react';\nimport './index.css';\nimport { MdKeyboardArrowLeft, MdKeyboardArrowRight } from \"react-icons/md\";\nimport ImgSize from './../helpers/imgClass'\nimport DotLoader from \"react-spinners/DotLoader\"\nimport DialogFail from './../helpers/dialogFail'\nimport ctrl from './../api_controller'\nimport color from './../helpers/colors'\n\n\n\n\nexport class Regis extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            step: 1,\n            email:'',\n            phone:'',\n            userName:'',\n            password:'',\n            img:'',\n            imgUrl:'',\n            noImg: true,\n            imgId: null,\n            insertNewUser: false,\n            openDialogFail: false,\n            text: '',\n            // standart Farbeinstellung\n            color: {\n                backgroundColor: color.white,\n                bubbleColor: color.highBlue,\n                fontColor: color.white,\n                fontColor2: color.black,\n                bubbleColor2: color.grey\n            },\n\n                    \n        }\n        this.regisSteps = this.regisSteps.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.navibuttons = this.navibuttons.bind(this)\n        this.profilImg = this.profilImg.bind(this)\n        this.insertNewUser = this.insertNewUser.bind(this)\n    }\n\n\n    \n    \n    back=(e)=>{\n        this.props.back(e)\n    }\n    handleChange = ({ target }) => {\n        this.setState({ [target.name]: target.value })\n    }\n    croppedImg = async (e)=>{ \n        const picName = this.state.userName\n        let file = await fetch(e)\n        .then(r => r.blob())\n        .then(blobFile => new File([blobFile], picName, {type: \"image/jpeg\", name: 'file' }))\n        this.setState({\n            img:file,\n            imgUrl:e,\n            noImg:false, \n        })\n    }\n\n\n\n    insertImg = async()=>{\n        // neuer User ohne Profilbild......\n        if(!this.state.imgUrl){\n            const {userName, email, password, phone, color} = this.state\n            const payload = {userName, email, password, phone, color}\n            if(userName.length<2 || email===''|| password===''){\n                const txt = 'um sich anzumelden, müssen die Felder Email, Benutzernamen (zwei Zeichen!) und passwort ausgefüllt sein!'\n                return this.setState({text: txt, openDialogFail:true})\n            }\n            const user = await ctrl.newUserSave(payload)\n            if (user){\n                if(user.success ===false){\n                \n                    const txt = 'Ihre email: '+email+' wird schon von eine anderen Benutzer benutzt'\n                    return this.setState({text: txt, openDialogFail:true})\n                }\n                return this.props.newUser(user)\n            }\n        }\n        \n        const img = this.state.img\n        const storageImg = await ctrl.imgSave(img)\n        if(storageImg){\n            this.insertNewUser(storageImg)\n        }\n    \n    }\n\n    insertNewUser= async(res)=>{\n        const imgLow = res.imgLow\n        const imgHigh = res.imgHigh\n        const imgId = res.id\n        const {userName, email, password, phone, color} = this.state\n        const payload = {userName, email, password, phone, imgId, imgLow, imgHigh, color}\n        const userDb = await ctrl.newUserSave(payload)\n        if (userDb){\n            if(!userDb.id){\n                const txt = 'Ihre email: '+userDb.email+' wird schon von eine anderen Benutzer benutzt'\n                return this.setState({text: txt, openDialogFail:true})\n            }else{\n                this.setState({insertNewUser:true})\n                this.props.newUser(userDb)\n            }\n        }\n    }\n\n\n\n    profilImg(){\n        if(this.state.noImg){\n            return(\n                <div className=\"regisImgDiv\">\n                    <ImgSize img={this.croppedImg} mobil={this.props.mobil} />\n                </div>\n            )\n        }\n        return(\n            <div className=\"regisImgDiv\">\n                <img className='regisImg' src={this.state.imgUrl} alt={this.state.userName}></img>\n                <button className='regisImgBtn' onClick={()=>this.setState({noImg:true})}>x</button>\n            </div>\n        );                    \n    }\n    \n\n    regisSteps(){\n        switch(this.state.step){\n            case 1:\n                return(\n                    <div className='regisStepsDiv'>\n                        <div className='loginframeTxt2'>Telefonnummer:</div>\n                        <div className='regisInputDiv'><input className='regisInput' type='number' name='phone' value={this.state.phone} onChange={this.handleChange}></input></div>\n                        <div className='loginframeTxt2'>oder</div>\n                        <div className='loginframeTxt2'>E-mail:</div>\n                        <div className='regisInputDiv'><input className='regisInput' type='email' name='email' value={this.state.email} onChange={this.handleChange}></input></div>\n                    </div>\n                )\n            case 2:\n                return(\n                    <div className='regisStepsDiv'>\n                        {this.profilImg()}\n                        <div className='loginframeTxt2'>Benutzername:</div>\n                        <div className='regisInputDiv'><input className='regisInput' type='text' name='userName' value={this.state.userName} onChange={this.handleChange}></input></div>\n                        <div className='loginframeTxt2'></div>\n                        <div className='loginframeTxt2'>Passwort:</div>\n                        <div className='regisInputDiv'><input className='regisInput' type='text' name='password' value={this.state.password} onChange={this.handleChange}></input></div>\n                    </div>\n                )\n            case 3:\n                const loading = this.state.insertNewUser\n                return(\n                    <div className='regisStepsDiv'>\n                        <div className='loginframeTxt2'>erstellt</div>\n                        <div className='loginframeTxt2'>Benutzer</div>\n                        <div className='heicSpinner'><DotLoader size={50} margin={2} color='#639cdd' loading={loading}/></div>\n                    </div>\n                )\n            default:\n                return(null)\n        }\n    }\n\n    navibuttons(){\n        if(this.state.step===1){\n            return(\n                <div className=\"regisStepsBtnDiv\">\n                    <button className=\"regisStepsBtnBack\" onClick={()=>{this.state.step===1?this.back(true):this.setState({step: this.state.step - 1})}}>\n                        <MdKeyboardArrowLeft size={40}/>\n                        <div className=\"regisStepsTextBtn\">zurück</div>\n                    </button>   \n                    <button className=\"regisStepsBtnNext\" onClick={()=>{this.setState({step: this.state.step + 1})}}>\n                        <div className=\"regisStepsTextBtn\">weiter</div>\n                        <MdKeyboardArrowRight size={40}/>\n                    </button>  \n                </div> \n            )\n        }else if(this.state.step===2){\n            return(\n                <div className=\"regisStepsBtnDiv\">\n                    <button className=\"regisStepsBtnBack\" onClick={()=>{this.setState({step: this.state.step - 1})}}>\n                        <MdKeyboardArrowLeft size={40}/>\n                        <div className=\"regisStepsTextBtn\">zurück</div>\n                    </button> \n                    <button className=\"regisStepsBtnNext\" onClick={()=>{this.setState({step: this.state.step + 1 },()=>this.insertImg())}}>\n                        <div className=\"regisStepsTextBtn\">erstellen</div>\n                        <MdKeyboardArrowRight size={40}/>\n                    </button> \n                </div> \n            )\n        }else{\n            \n        }\n    }\n    \n\n    userFail = ()=>{\n        this.setState({openDialogFail:false, step:1})\n    }\n\n    \n\n    render(){\n        if(this.props.mobil){\n            return(\n                <div className='regisScreen'>\n                    {this.navibuttons()}\n                    {this.regisSteps()}\n                    <DialogFail text={this.state.text} open={this.state.openDialogFail} failChecked={this.userFail}/>\n                </div>\n            );\n        }else{\n            return(\n                <div className='regisScreen'>\n                    {this.regisSteps()}\n                    {this.navibuttons()}\n                    <DialogFail text={this.state.text} open={this.state.openDialogFail} failChecked={this.userFail}/>\n                </div>\n            );\n        }\n        \n\n         \n\n    }\n}\n\n\nexport default Regis;\n\n\n\n  ","import React from 'react';\nimport './index.css';\nimport Dialog from '@material-ui/core/Dialog';\n\n\n\n\n\n\n\n         \n\n\nexport class DialogCheck extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            text: this.props.text,\n            open: this.props.open,\n\n\n        }\n      \n    }\n\n\n    componentDidUpdate(prevProps){\n        if(this.props.open!==prevProps.open){\n            this.setState({open:this.props.open})\n        }\n        if(this.props.text!==prevProps.text){\n            this.setState({text:this.props.text})\n        }\n    }\n\n    dialogText = ()=>{\n        return(\n            <div className='dialogCheckText'>{this.state.text}</div>\n        )\n    }\n    dialogCallback = (e)=>{\n        this.props.checked(e)\n    }\n\n    \n\n    render(){\n        return(\n            <Dialog \n            className='checkDialog'\n            open={this.state.open===true}\n            fullScreen>\n                <div className='dialogCheckFrame'>\n                    {this.dialogText()}\n                    <div className='placeholderDiv'></div>\n                    <div className='dialogCheckBtnDiv'>\n                        <button className='dialogCheckBtn' onClick={()=>this.dialogCallback(true)}>ja</button>\n                        <button className='dialogCheckBtn' onClick={()=>this.dialogCallback(false)}>nein</button>\n                    </div>\n                </div>\n            </Dialog>\n        ); \n    }\n}\n\nexport default DialogCheck;\n\n\n\n  ","import React from 'react';\nimport './index.css';\nimport { Popover  } from '@material-ui/core';\nimport Avatar from './../../helpers/avatar'\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport DialogCheck from './../../helpers/dialogCheck'\nimport ctrl from './../../api_controller'\n\n\n\nexport class MenuTab extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            open: this.props.open,\n            imgUrl: this.props.imgHigh,\n            user: this.props.user,\n            useContact: this.props.useContact,\n            dialogCheck: false,\n            text:'Achtung !!!, der Chatroom wird mit allen Daten gelöscht',\n            userDelete: null\n        }\n      \n    }\n\n\n    componentDidUpdate(prevProps){\n        if(this.props.open!==prevProps.open){\n            this.setState({open:this.props.open})\n        }\n        if(this.props.user!==this.state.user){\n            this.setState({user:this.props.user})\n        }\n    }\n\n    componentWillUnmount(){\n        this.setState({text:'', userDelete: null})\n    }\n\n    close = ()=>{\n        this.props.close(true)\n    }\n    chatroomClose = (deleteId)=>{\n        this.props.chatroomClose(deleteId)\n        this.props.close(true)\n    }\n\n    openSelect = (e)=>{\n        this.props.openSelect(e)\n    }\n\n    logoutHandle = ()=>{\n        this.close()\n        this.props.logout(true)\n    }\n\n    DialogCheckText = (n, id)=>{\n        const text = <div >Achtung !   der Chatroom mit <div style={{fontWeight: \"bold\"}}>'{n}'</div> und der gesamte Inhalt werden gelöscht !</div>\n        this.setState({text: text, dialogCheck: true, userDelete: id })\n    }\n\n\n    deleteUserBtn = ()=>{\n        const cUserId = this.props.useContact \n        const cMap = this.props.chatroomMap\n        const allMap = new Map([...cMap])\n        if(cUserId===null || allMap.size===0){\n            return null\n        }\n        const cName = allMap.get(cUserId).userName\n        const cPic = allMap.get(cUserId).imgLow\n        return(\n            <button className='Menubtnchatroomuser' onClick={()=>this.DialogCheckText(cName, cUserId)}>\n                <div className='Menuchatroomuser'>\n                    <div className='MenuchatroomuserDiv'>\n                        <div className='MenuTrashIconDiv'> \n                            <FaTrashAlt className='trashMenuIcon' size={20}/>\n                        </div>\n                        <div className=\"MenuchatroomImgDiv\">\n                            <Avatar name={cName} imgUrl={cPic}/>\n                        </div>\n                        <div className='MenuchatroomProfilName'>{cName}</div>\n                    </div>\n                </div>\n            </button>\n        )\n    }\n    \n    callbackDialogcheck = async(e)=>{\n        if(e){\n            console.log('huhu')\n            const userId = this.state.user.id\n            this.setState({dialogCheck: false,})\n            const cMap = this.props.chatroomMap\n            const allMap = new Map([...cMap])\n            const cUserId = this.props.useContact \n            const cName = allMap.get(cUserId).name\n            const payload = {\n                chatroomName: cName\n            }\n            console.log(cName)\n            const userUpdate = await ctrl.deleteChatroomMapByName(userId, payload)\n            if(userUpdate){\n                console.log(userUpdate)\n                return\n                this.setState({dialogCheck: false},()=>this.props.updateUserCallback(userUpdate))\n                this.chatroomClose(cName)\n                \n            }\n        }else{\n            this.setState({dialogCheck: false,})\n        }\n       \n        \n    }\n\n    clearStarage=()=>{\n        localStorage.removeItem('login_archa')\n        this.logoutHandle()\n    }\n\n    \n\n\n\n    \n\n    render(){\n        /* openSelect....... \n\n            => 5 === openProfile\n            => 6 === openSudoku\n\n\n        */\n        return(\n            <Popover \n            id='menu-topbar'\n            anchorEl={this.props.anchorEl}\n            getContentAnchorEl={null}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            onBackdropClick= {()=>this.close()}\n            open={this.state.open===true}\n             >\n                <div className={!this.props.mobil?'topbarDropdownFrame':'topbarDropdownFrameMobil'}>\n                    <button className='topbarDropdownBtn' onClick={()=>this.openSelect(2)} >Profil</button>\n                    <button className='topbarDropdownBtn' onClick={()=>this.openSelect(3)} >Farben</button>\n                    <button className='topbarDropdownBtn' >über Archa</button>\n                    <button className='topbarDropdownBtn' >Impressum</button>\n                    {!this.props.useContact?<button className='topbarDropdownBtn' >löschen</button>:this.deleteUserBtn()}\n                    <button className='topbarDropdownBtn' onClick={()=>this.clearStarage()}>Abmelden </button>\n                    <button className='topbarDropdownBtn' onClick={()=>this.logoutHandle()}>Ausloggen</button>\n                    <DialogCheck text={this.state.text} open={this.state.dialogCheck} checked={this.callbackDialogcheck}></DialogCheck>\n                </div>\n            </Popover>\n        ); \n    }\n}\n\nexport default MenuTab\n\n\n\n  ","\nimport path from './../../switch'\n//const API_PATH = 'ws://localhost:3000/ws/chat/';\nconst API_PATH = path.setPATH\n\nclass WebSocketService {\n  static instance = null;\n  callbacks = {};\n\n  static getInstance() {\n    if (!WebSocketService.instance) {\n      WebSocketService.instance = new WebSocketService();\n    }\n    return WebSocketService.instance;\n  }\n\n  constructor() {\n    this.socketRef = null;\n  }\n\n\n  connect(room) {\n    const path = API_PATH+room+'/';\n    this.socketRef = new WebSocket(path);\n    this.socketRef.onopen = (e) => {\n      //console.log(e)\n      console.log('WebSocket open');\n    };\n    this.socketRef.onmessage = e => {\n      this.socketNewMessage(e.data);\n    };\n\n    this.socketRef.onerror = e => {\n      console.log(e.message);\n    };\n    this.socketRef.onclose = () => {\n      console.log(\"WebSocket closed let's reopen\");\n      //this.connect();\n    };\n  }\n  disconnect(){\n    console.log('websocket schllesen')\n    this.socketRef.close()\n  }\n\n  socketNewMessage(data) {\n    const parsedData = JSON.parse(data);\n    const command = parsedData.command;\n    if (Object.keys(this.callbacks).length === 0) {\n      return;\n    }\n    if (Object.keys(this.callbacks).length > 0) {\n    }\n    if (command === 'messages') {\n      //console.log(command, 'socket')\n      this.callbacks[command](parsedData.messages);\n    }\n    if (command === 'new_message') {\n      //console.log('socket_new_mess ')\n      this.callbacks[command](parsedData.message);\n    }\n    if (command === 'new_room') {\n      //console.log('socket_new_room')\n      this.callbacks[command](parsedData.message);\n    }\n    if (command === 'create_room') {\n      //console.log('socket_create_room')\n      this.callbacks[command](parsedData.message);\n    }\n    if (command === 'read_message') {\n      //console.log('socket_read_message')\n      this.callbacks[command](parsedData.message);\n    }\n    if (command === 'init_chat') {\n      //console.log('socket_status => user init')\n      this.callbacks[command](parsedData.message);\n    }\n    if (command === 'user_status') {\n      //console.log('socket_status => user status')\n      this.callbacks[command](parsedData.message);\n    }\n    if (command === 'hacking') {\n      //console.log('socket_status => keyboard hack')\n      this.callbacks[command](parsedData.message);\n    }\n  }\n\n  initChatUser(user) {\n    //console.log('initChatUser  => : ', user)\n    this.sendMessage({ command: 'init_chat', user });\n  }\n\n  fetchMessages(username) {\n    //console.log('fetchMessage  => : ', username)\n    this.sendMessage({ command: 'fetch_messages', username: username });\n  }\n\n  newChatMessage(message) {\n    message.command = 'new_message'\n    //console.log('newChatMessage  => : ', message, '=> send !')\n    this.sendMessage(message); \n     \n  }\n\n\n  onEnterRoom(message) {\n    message.command = 'read_message'\n    //console.log('on Enter Chatroom  => : ', message, '=> send !')\n    this.sendMessage(message); \n     \n  }\n\n  contactPing(message) {\n    message.command = 'contact_ping'\n    //console.log('newPingMessage  => : ', message, '=> send !')\n    this.sendMessage(message); \n     \n  }\n\n  answerPing(message) {\n    message.command = 'answer_ping'\n    //console.log('newPingMessage  => : ', message, '=> send !')\n    this.sendMessage(message); \n  }\n\n  statusUser(message) {\n    message.command = 'user_status'\n    //console.log('online  /  offline status  => : ', message, '=> send !')\n    this.sendMessage(message); \n     \n  }\n\n  hacking(message) {\n    message.command = 'hacking'\n    //console.log('keyboard hack => : ', message, '=> send !')\n    this.sendMessage(message); \n     \n  }\n\n  addCallbacks(newMessageCallback) {\n    this.callbacks['new_message'] = newMessageCallback;\n    this.callbacks['new_room'] = newMessageCallback;\n    this.callbacks['create_room'] = newMessageCallback;\n    this.callbacks['read_message'] = newMessageCallback;\n    this.callbacks['init_chat'] = newMessageCallback;\n    this.callbacks['user_status'] = newMessageCallback;\n    this.callbacks['hacking'] = newMessageCallback;\n  }\n  \n  sendMessage(data) {\n    try {\n      this.socketRef.send(JSON.stringify({ ...data }));\n    }\n    catch(err) {\n      console.log(err.message);\n    }  \n  }\n\n  state() {\n    return this.socketRef.readyState;\n  }\n\n   waitForSocketConnection(callback){\n    const socket = this.socketRef;\n    const recursion = this.waitForSocketConnection;\n    setTimeout(\n      function () {\n        if (socket.readyState === 1) {\n          console.log(\"Connection is made\")\n          if(callback != null){\n            callback();\n          }\n          return;\n\n        } else {\n          console.log(\"wait for connection...\")\n          recursion(callback);\n        }\n      }, 1); // wait 5 milisecond for the connection...\n  }\n\n}\n\nconst WebSocketInstance = WebSocketService.getInstance();\n\nexport default WebSocketInstance;\n","\nimport WebSocketInstance from './WebSocket'\n\n\nconst waitForSocketConnection = (callback)=> {\n  const component = this;\n  setTimeout(\n     () =>  {\n      // Check if websocket state is OPEN\n      if (WebSocketInstance.state() === 1) {\n        console.log(\"Connection is made\")\n        callback();\n        return;\n      } else {\n        console.log(\"wait for connection...\")\n        component.waitForSocketConnection(callback);\n      }\n  }, 2500); // wait 100 milisecond for the connection...\n}\n\n\nexport default function () {\n  console.log('connection ws')\n  \n  \n\n  function callbackPool(messagesCallback) {\n      WebSocketInstance.addCallbacks(messagesCallback)\n    \n  }\n\n  function connect(roomName){\n    WebSocketInstance.connect(roomName)\n  }\n\n  function disconnect(){\n    WebSocketInstance.disconnect()\n  }\n\n  function unregisterHandler() {\n  }\n  function register(user) {\n    waitForSocketConnection(()=>\n    \n      WebSocketInstance.initChatUser(user)\n    )\n  }\n\n\n  function onEnterRoom(chatroomName, user) {\n    const messageObject = {\n      room: chatroomName,\n      user: user\n    };\n    WebSocketInstance.onEnterRoom(messageObject);\n  }\n\n  function message(chatroomName, msg, imgHigh, imgLow, imgId, userId) {\n    const messageObject = {\n      author: userId,\n      text: msg,\n      room: chatroomName,\n      imgHigh: imgHigh,\n      imgLow: imgLow,\n      imgId: imgId\n    };\n    WebSocketInstance.newChatMessage(messageObject);\n  }\n\n  function pingContact(contact) {\n    const messageObject = contact\n    messageObject.text = 'new_room'\n    \n    WebSocketInstance.contactPing(messageObject);\n  }\n\n\n  function pingAnswer(contact) {\n    const messageObject = contact\n    messageObject.text = 'create_room'\n    \n    WebSocketInstance.answerPing(messageObject);\n  }\n\n  function userStatus(contact) {\n    const messageObject = contact\n    messageObject.text = 'user_status'\n    \n    WebSocketInstance.statusUser(messageObject);\n  }\n\n  function hack(chatroomName, charLength, author) {\n    const messageObject = {\n      text: 'hacking',\n      author,\n      charLength,\n      chatroomName,\n    };\n    WebSocketInstance.hacking(messageObject);\n\n  }\n\n\n\n  return {\n    register,\n    message,\n    hack,\n    callbackPool,\n    unregisterHandler,\n    disconnect,\n    connect,\n    pingContact,\n    pingAnswer,\n    onEnterRoom,\n    userStatus,\n  }\n}","import React from 'react';\nimport './index.css';\nimport { MdMenu } from \"react-icons/md\";\nimport MenuClass from './dialogMenu'\nimport Avatar from './../helpers/avatar'\nimport socket from './../socket/socket'\nimport color from './../helpers/colors'\n\n\n\n\n\nexport class Topbar extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            user: this.props.user,\n            imgUrl: null,\n            build:false,\n            dialogCheck:false,\n            inviIndex: null,\n            dropdown: false,\n            client: socket(),\n            accentColor: color.accentColor,\n            s3upload: false,\n\n        }\n        this.divRef = React.createRef();\n        this.userData = this.userData.bind(this)\n    }\n\n\n    \n    componentDidUpdate(prevProps, prevState){\n        if(this.props.user!==prevState.user){\n            if(this.props.user!==null){\n               this.setState({user:this.props.user, build:true})\n            }else{\n               this.setState({\n                   user:this.props.user, \n                   build:false,\n                   imgUrl: null,\n                   invitUserName:[],\n                   invitUserImgUrl:[],\n                   dialogCheck:false,\n                   inviIndex: null,\n                   dropdown: false,\n                   useContact: this.props.useContact,\n                   anchorEl: null\n                })\n            }\n           \n        }\n    }\n\n    \n\n    \n\n   \n    getImg = async()=>{\n        if(this.state.user===null){\n            this.setState({build:false})\n            return\n        }\n        if(!this.props.user.imgUrl){\n            this.setState({build:true})\n        }\n        const imgUrl = this.props.user.imgLow\n        this.setState({imgUrl:imgUrl})\n    }\n\n\n    \n\n    \n    updateUser = (e)=>{\n        this.props.updateUserHome(e)\n    }\n\n\n    \n    menuClose = (e)=>{\n        if(e){\n            this.setState({dropdown:false})\n        }\n    }\n    chatroomClose= (e)=>{\n        if(e){\n            this.props.chatroomClose(e)\n        }\n    }\n    logoutHandle = (e)=>{\n        this.setState({build:false})\n        this.props.logout(e)\n    }\n    openSelect = (e)=>{\n        this.setState({dropdown:false})\n        this.props.openSelect(e)\n    }\n\n    \n\n    dialogCallback = (e)=>{\n        if(e){\n            this.setState({dialogCheck:false},()=>this.addChatUser(this.state.inviIndex))\n        }else{\n            this.setState({dialogCheck:false})\n        }\n    }\n    handleClickDropdown = ()=> {\n        this.setState({ anchorEl: this.divRef.current, dropdown:true });\n      };\n\n    \n\n    userData(){\n        const user = this.props.user\n        if(this.state.build){\n            return(\n                <div className='topScreenDiv'>\n                    <div className='topScreenLeftSide'>\n                        <div className='topSreenAppName'>ARCHA</div>\n                    </div>\n                    <div className='topScreenRightSide'>\n                        <div className='topScreenUser' style={{color: color.accentColor}}>{this.state.user.userName}</div>\n                        \n                        <div className=\"topScreenImgDiv\">\n                            <Avatar name={user.userName} imgLow={this.state.user.imgLow} imgHigh={this.state.user.imgHigh}/>\n                        </div>\n                        <div ref={this.divRef}>\n                        <button \n                            className='topScreenMenuBtn' \n                            aria-owns={this.state.anchorEl ? \"menu-topbar\" : null}\n                            aria-haspopup=\"true\"\n                            onClick={()=>this.handleClickDropdown()}><MdMenu size={35}/>\n                        </button>\n                        </div>\n                    </div>\n                </div>\n            )\n        \n        }else{\n            return(\n                <div className='topScreenDiv'>\n                    <div className='topScreenLeftSide'>\n                        <div className='topSreenAppName'>ARCHA</div>\n                    </div>\n                    <div className='topScreenRightSide'>\n                        <div className='topScreenUser'></div>\n                        <div className=\"topScreenImgDiv\">\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n\n   }\n\n\n    \n\n    render(){\n        return(\n            <div className='topScreen'>\n                {this.userData()}\n                <MenuClass \n                    open={this.state.dropdown} \n                    close={this.menuClose} \n                    chatroomClose={this.chatroomClose}\n                    useContact={this.props.useContact} \n                    logout={this.logoutHandle} \n                    user={this.props.user} \n                    anchorEl={this.state.anchorEl}\n                    updateUserCallback={this.updateUser} \n                    mobil={this.props.mobil}\n                    chatroomMap={this.props.chatroomMap}\n                    openSelect={this.openSelect}\n                    \n                />\n            </div>\n        ); \n    }\n}\n\nexport default Topbar;\n\n\n\n  ","\n\nimport React from \"react\";\nimport color from './../colors'\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport './index.css'\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst spinner_color = color.accentColor\n\nfunction Spinner(props) {\n  if(props.loading){\n    return (\n        <div  className='spinnerDiv'>\n          <ClipLoader color={spinner_color} loading={props.loading} className='override' size={props.size} />\n        </div>\n      );\n  }else{\n      return null\n  }\n  \n}\n\nexport default Spinner","import React from 'react';\nimport './imageMessage.css'\nimport Spinner from './../../helpers/spinner'\nimport ImageLoader from 'react-load-image';\nimport ImgView from './../../helpers/dialogViewImg'\n\n\n\n\nfunction Preloader() {\n    return <Spinner loading={true} size={20}/>\n}\n\nexport class ImageMessage extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            imgViewOpen:false,\n            imgView:null,\n\n        }  \n                   \n    }\n\n\n\n\n    \n\n    \n    componentDidUpdate(prevProps, prevState){  \n    }\n    \n\n\n    /**\n     * \n      \"author\": 24114211353796,\n      \"chatroomName\": \"6026c72221e6095ee95f4e76\",\n      \"date\": \"2021-02-12T18:21:31.627Z\",\n      \"id\": 24321794072051,\n      \"imgHigh\": \"\",\n      \"imgId\": null,\n      \"imgLow\": \"\",\n      \"message\": \"hi\",\n      \"read\": true,\n     */\n    componentDidMount() {\n\n  \n    }\n\n    \n    imgChatBlase = (imgHigh, imgLow)=>{\n        if(imgLow){\n            return(\n                <ImageLoader\n                src={imgLow}\n                >\n                    <img className='imgBlase'  onClick={()=>this.setState({imgViewOpen: true, imgView: imgHigh})}   alt='...' />\n                    <div>Error!</div>\n                    <Preloader/>\n                </ImageLoader>\n                \n                \n            )\n        } \n    }\n\n        \n\n    render(){\n        const {imgLow, imgHigh} = this.props\n        return(\n            <div>\n                {this.imgChatBlase(imgLow, imgHigh)}\n                <ImgView open={this.state.imgViewOpen} imgUrl={this.state.imgView} close={()=>this.setState({imgViewOpen:false})}/>\n            </div>\n        )\n    }\n        \n        \n        \n    \n        \n    \n}\n\nexport default ImageMessage;\n\n\n\n  ","import React from 'react';\nimport './textMessage.css'\nimport emojiRegex from './../emoji/emojiRegex'\n\n\n\n\n\n\n\nexport class TextMessage extends React.Component{\n\n    \n    componentDidUpdate(prevProps, prevState){  \n    }\n    \n\n\n    /**\n     * \n      \"author\": 24114211353796,\n      \"chatroomName\": \"6026c72221e6095ee95f4e76\",\n      \"date\": \"2021-02-12T18:21:31.627Z\",\n      \"id\": 24321794072051,\n      \"imgHigh\": \"\",\n      \"imgId\": null,\n      \"imgLow\": \"\",\n      \"message\": \"hi\",\n      \"read\": true,\n     */\n    componentDidMount() {\n\n  \n    }\n\n    \n    singleEmoji = (mess)=>{\n        if (mess.length===2 && mess.match(emojiRegex().join('|'))) {\n            return <div className='singleEmoji'>{mess}</div>\n        } else {\n            return mess\n        }\n    }\n\n    checkLink=(mess)=>{\n        if(mess.startsWith('https://')||mess.startsWith('http://') ){\n            return(\n                <div>\n                    <a href={mess} rel=\"noopener noreferrer\"  target=\"_blank\">{mess}</a>\n                </div>\n            )\n        }else{\n            return mess\n        }\n    }\n   \n\n    peruseMessage = (mess)=>{\n\n\n        let mess_update = this.singleEmoji(mess)\n        if(mess_update!==mess){\n            return mess_update\n        }\n\n\n        mess_update = this.checkLink(mess)\n        if(mess_update!==mess){\n            return mess_update\n        }\n\n\n\n        return mess\n    }\n    \n      \n\n\n\n        \n\n    render(){\n        const message = this.props.message\n        return(\n            <div>{this.peruseMessage(message)}</div>\n        )\n    }\n        \n        \n        \n    \n        \n    \n}\n\nexport default TextMessage;\n\n\n\n  ","import React from 'react';\nimport './dateMessage.css'\n\nconst dateformat = { \n    //month: 'short', \n    //day: 'numeric',\n    hour12: false,\n    hour:  \"2-digit\",\n    minute: \"2-digit\"\n};\n\n\n\n\n\nexport class DateMessage extends React.Component{\n\n    \n    componentDidUpdate(prevProps, prevState){  \n    }\n    \n\n\n    /**\n     * \n      \"author\": 24114211353796,\n      \"chatroomName\": \"6026c72221e6095ee95f4e76\",\n      \"date\": \"2021-02-12T18:21:31.627Z\",\n      \"id\": 24321794072051,\n      \"imgHigh\": \"\",\n      \"imgId\": null,\n      \"imgLow\": \"\",\n      \"message\": \"hi\",\n      \"read\": true,\n     */\n    componentDidMount() {\n\n  \n    }\n\n    \n    render(){\n        const date = this.props.date\n        return(\n            <div>{new Date(date).toLocaleTimeString('de-DE', dateformat)}</div>\n        )\n    }\n        \n        \n        \n    \n        \n    \n}\n\nexport default DateMessage;\n\n\n\n  ","\n\nimport React from 'react';\nimport './statusMessage.css'\nimport { FaCheck } from \"react-icons/fa\";\n\n\n\n\n\n\nexport class StatusMessage extends React.Component{\n\n    \n    componentDidUpdate(prevProps, prevState){  \n    }\n    \n\n\n    /**\n     * \n      \"author\": 24114211353796,\n      \"chatroomName\": \"6026c72221e6095ee95f4e76\",\n      \"date\": \"2021-02-12T18:21:31.627Z\",\n      \"id\": 24321794072051,\n      \"imgHigh\": \"\",\n      \"imgId\": null,\n      \"imgLow\": \"\",\n      \"message\": \"hi\",\n      \"read\": true,\n     */\n    componentDidMount() {\n\n  \n    }\n\n    \n   \n    messageStatus=(e)=>{\n        switch(e){\n            case 'on_way':\n                return(\n                    <div className='chatMessageStatus'><FaCheck size={8}/></div>\n                )\n            case false:\n                return(\n                    <div className='chatMessageStatus'><FaCheck size={8}/><FaCheck size={8}/></div>\n                )\n            case true:\n                return(\n                    <div className='chatMessageStatusColor'><FaCheck size={8}/><FaCheck size={8}/></div>\n                )\n            default:\n                break\n        }\n    }\n\n\n\n        \n\n    render(){\n        const read = this.props.read\n        return(\n            <div className='chatMessageDiv'>{this.messageStatus(read)}</div>\n                    \n        )\n    }\n        \n        \n        \n    \n        \n    \n}\n\nexport default StatusMessage;\n\n\n\n  ","import React from 'react';\nimport './message.css'\nimport ImageMessage from './insideMessage/imageMessage'\nimport TextMessage from './insideMessage/textMessage'\nimport DateMessage from './insideMessage/dateMessage'\nimport StatusMessage from './insideMessage/statusMessage'\n\n\n\n\n\n\nexport class Message extends React.Component{\n\n    \n    componentDidUpdate(prevProps, prevState){ \n    }\n    \n\n\n    /**\n     * \n      \"author\": 24114211353796,\n      \"chatroomName\": \"6026c72221e6095ee95f4e76\",\n      \"date\": \"2021-02-12T18:21:31.627Z\",\n      \"id\": 24321794072051,\n      \"imgHigh\": \"\",\n      \"imgId\": null,\n      \"imgLow\": \"\",\n      \"message\": \"hi\",\n      \"read\": true,\n     */\n    componentDidMount() {\n        \n\n  \n    }\n\n    \n    \n    \n    \n\n\n        \n\n    render(){\n        const {author,  date,  imgHigh, imgLow, message, read} = this.props.message\n        const {bubbleColor, bubbleColor2, fontColor, fontColor2} = this.props.color\n        const user_id = this.props.id\n        if(user_id === author){\n            // rechte Blase.....\n            return(\n                <div className='chat_colunm_right'>\n                    <div className='chatblase_right' style={{background:bubbleColor}}>\n                        <ImageMessage imgHigh={imgHigh} imgLow={imgLow}/>\n                        <div className='chatMessage_right' style={{color:fontColor}}>\n                            <TextMessage message={message}/>\n                            <div className='chatdate_right' >\n                                <DateMessage date={date}/>\n                                <StatusMessage read={read}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }else{\n            return(\n                <div className='chat_colunm_left'>\n                    <div className='chatblase_left' style={{background:bubbleColor2}}>\n                        <ImageMessage imgHigh={imgHigh} imgLow={imgLow}/>\n                        <div className='chatMessage_left' style={{color:fontColor2}}>\n                            <TextMessage message={message}/>\n                            <div className='chatdate_left' >\n                                <DateMessage date={date}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        \n    }\n        \n        \n        \n    \n        \n    \n}\n\nexport default Message;\n\n\n\n  ","import React from 'react';\nimport './index.css'\n\n\nconst dateformat2 = { \n    month: 'short', \n    day: 'numeric',\n    //hour12: false,\n    //hour:  \"2-digit\",\n    //minute: \"2-digit\"\n};\n\n\n\n\n\nexport class Dateline extends React.Component{\n\n    \n    componentDidUpdate(prevProps, prevState){  \n    }\n    \n    /**\n     * \n     * messsage == > props\n     * \n     * \n     * \n      \"author\": 24114211353796,\n      \"chatroomName\": \"6026c72221e6095ee95f4e76\",\n      \"date\": \"2021-02-12T18:21:31.627Z\",\n      \"id\": 24321794072051,\n      \"imgHigh\": \"\",\n      \"imgId\": null,\n      \"imgLow\": \"\",\n      \"message\": \"hi\",\n      \"read\": true,\n     */\n    componentDidMount() {\n\n  \n    }\n\n    makeALine=()=>{\n        let dateLine = this.props.dateBefor\n        dateLine = new Date(dateLine).toLocaleString('de-DE', dateformat2)\n        const date = this.props.message.date\n        if(new Date(date).toLocaleString('de-DE', dateformat2)!==dateLine){\n            dateLine = new Date(date).toLocaleString('de-DE', dateformat2)\n            return(\n                <div className='chatDateLine' style={this.props.color.backgroundColor==='rgb(93, 100, 102)'? null:{color:'black', borderBottomColor: 'black'}}>\n                    {dateLine}\n                </div>\n            )\n            }else{\n                return null\n            }\n    }\n\n    \n    render(){\n        return(\n            <div>{this.makeALine()}</div>\n        )\n          \n        \n    }\n}\nexport default Dateline\n        \n        \n\n\n\n\n  ","import React from 'react';\nimport './chatverlauf.css'\nimport api from './../api'\nimport Message from './message'\nimport Dateline from './dateline'\n\n\n\n\n\n\nfunction ListItem(props) {\n    return (<div>\n                <div className= \"chatListItem\">{props.value}</div>\n            </div>);\n}\n\n\n\nexport class Chatbox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            start:false,\n            input:'',\n            date: new Date(),\n            imgLoading: 0,\n            chatsLength: this.props.chatroom.chat.length,\n            imgCount: this.props.chatroom.chat.filter(e => e.imgLow!==null),\n            loadingOldMess: false,\n            oldMessage: []\n\n        }\n        this.backhandle = this.backhandle.bind(this) \n                   \n    }\n\n\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if(this.props.message_counter !== nextProps.message_counter){\n            setTimeout(()=>this.scrollToBottom('smooth'), 100)\n            return true\n        }\n        if(JSON.stringify(this.props.user) !== JSON.stringify(nextProps.user)){\n            setTimeout(()=>this.scrollToBottom('auto'), 100)\n            return true\n        }\n        return false\n\n        \n        \n    }\n\n    \n    componentDidUpdate(prevProps, prevState){  \n        if(this.props.chatroom.chat.length!==prevProps.chatroom.chat.length){\n            //setTimeout(()=>this.scrollToBottom('smooth'), 100)\n            \n        }\n    }\n    \n\n    componentDidMount() {\n        setTimeout(()=>this.scrollToBottom('auto'), 100)\n        \n  \n    }\n\n    handleScroll = (event) =>{\n        var node = event.target;\n        const messageCount = this.props.chatroom.chat.length > 120\n        const bottom = node.scrollHeight - node.scrollTop === node.clientHeight;\n        if (bottom) {\n            console.log('am boden');\n        }\n        if(node.scrollTop < 100 && !this.props.chatroom.archiv && messageCount){\n            console.log('oben');\n            this.props.chatroom.archiv = true\n            this.setState({loadingOldMess: true}, ()=>this.getnextMess())\n        }\n    }\n    \n   \n    getnextMess = async()=>{\n        const name = this.props.chatroom.name\n        await api.getNextMessByChatroomName(name).then(res=>{\n            if(res.data.next_mess){\n                const messlist = res.data.next_mess\n                const re_messlist = messlist\n                console.log('lade liste.....')\n                this.setState({loadingOldMess: false, oldMessage: re_messlist})\n                /** \n                re_messlist.forEach(e=> this.props.chatroom.chat.unshift(e))\n                this.setState({loadingOldMess: false})\n                */\n            }\n        })\n        return\n        \n    }\n    // Dialog schließen ===>\n    backhandle = (e) => {\n            this.props.closeMess(e)\n    }\n\n\n    scrollToBottom = (e) => {\n        this.messagesEnd.scrollIntoView({ behavior: e, block: 'nearest', inline: 'end' });\n        \n        \n    }\n    \n\n    \n     \n\n\n    \n      \n    chatVerlauf = ()=> {\n        const loader = this.props.imgSend\n        const {color, id} = this.props.user \n        const lines = [] \n        let dateBefor = ''\n        if(this.state.oldMessage.length>0){\n            this.state.oldMessage.forEach((element,index) => {\n                lines.push(\n                    <div>\n                        <Dateline message={element} dateBefor={dateBefor} color={color}/>\n                        <Message message={element} index={index} color={color} id={id} />\n                    </div>\n                )\n                dateBefor = element.date\n                \n            });\n        }\n\n        this.props.chatroom.chat.forEach((element,index) => {\n            lines.push(\n                <div>\n                    <Dateline message={element} dateBefor={dateBefor} color={color}/>\n                    <Message message={element} index={index} color={color} id={id} />\n                </div>\n            )\n            dateBefor = element.date\n            \n        });\n        \n        const listItems = lines.map((message) =>\n        <ListItem value={message} key={lines.indexOf(message) } />);\n        return listItems; \n    }\n\n\n\n        \n\n    render(){\n        const paneDidMount = (node) => {\n            if (node) {\n                node.addEventListener('scroll', this.handleScroll);\n            }\n        };\n        return(\n            <div className='chatFrame' style={{background:this.props.user.color.backgroundColor}}>\n                <div className='chatListVerlauf' ref={paneDidMount}>\n                    {this.chatVerlauf()}\n                    <div style={{ float:\"left\", clear: \"both\" }}\n                    ref={(el) => { this.messagesEnd = el; }}>\n                    </div>\n                </div>\n            </div>     \n           \n        )    \n        \n        \n        \n    }\n        \n    \n}\n\nexport default Chatbox;\n\n\n\n  ","import React from 'react';\nimport './search.css'\nimport DialogCheck from './../helpers/dialogCheck'\nimport { MdSearch, MdChat } from \"react-icons/md\";\nimport Avatar from './../helpers/avatar'\nimport ctrl from './../api_controller'\n\n\nfunction ListItem(props){\n    return (<div>\n                <div className= \"chatValue\">{props.value}</div>\n            </div>);\n} \n\n\nexport class Search extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            user: this.props.user,\n            chat:false,\n            search:'',\n            conracts: null,\n            searchFound:false,\n            chatUser: null,\n            dialogCheck:false,\n            selectUser: null\n        }  \n                   \n    }\n\n\n    componentDidUpdate(prevProps){\n        \n    }\n    \n\n    componentDidMount() {\n  \n    }\n\n    handleSearch = ({ target }) => {\n        this.setState({ [target.name]: target.value, searchFound:false  },()=>this.searchChatUser())\n    }\n    \n    search = ()=>{\n        return(\n            <div className='searchFrame'>\n                <div className='searchDiv'>\n                    <div className='searchInputDiv'>\n                        <input className='searchInput' type='text' name='search' placeholder='Suche' value={this.state.search} onChange={this.handleSearch}></input>\n                        <button className='searchIconBtn' onClick={()=>this.searchChatUser()}><MdSearch size={30}/></button>\n                    </div>\n                    {this.addChatUser()}\n                </div>\n            </div>\n        )\n    }\n\n    searchChatUser = async()=>{\n        if(this.state.search===''){\n            return\n        }\n        const {search} = this.state\n        const user = this.state.user.id\n        const payload = {search, user}\n        const users = await ctrl.getSearch(payload)\n        if(users){\n            this.setState({chatUser:users, searchFound:true })\n        }\n    }\n\n    \n    addChatUser = ()=>{\n        if(this.state.searchFound){\n            const chatUserArr = []\n            const searchedList = this.state.chatUser\n            \n            searchedList.forEach(e=>{\n\n                chatUserArr.push(\n                    <div className='searchFoundFrame'>\n                        <button className='searchUserBtn' onClick={()=>this.setState({dialogCheck:true,selectUser:e })}>\n                            <div className='searchUserImgDiv'>\n                                <Avatar name={e.userName} imgLow={e.imgLow} imgHigh={e.imgHigh}/>\n                            </div>\n                            <div className='searchUserNameDiv'>{e.userName}</div>\n                            <div className='searchUserIcon'><MdChat size={36}/></div>\n                        </button>\n                        <DialogCheck \n                            text={<div>möchtest du <div style={{fontWeight: \"bold\"}}>{e.userName}</div> zu dein kontakten hinzufügen ?</div>}\n                            open={this.state.dialogCheck}\n                            checked={this.dialogCallback}\n                        />\n\n                    </div>\n                )\n            })\n            \n            const listItems = chatUserArr.map((items) =>\n                <ListItem value={items} key={chatUserArr.indexOf(items) } />\n                )\n            return listItems;\n        }else{\n            return null\n        }\n    }\n\n    dialogCallback = (e)=>{\n        if(e){\n            this.setState({search:'', dialogCheck:false, searchFound: false},()=>this.updateContactUser())\n        }else{\n            this.setState({search:'', dialogCheck:false, searchFound: false, selectUser: null})\n        }\n    }\n\n    updateContactUser = ()=>{\n        const id = this.state.user._id\n        const chatUserId = this.state.selectUser.id\n        if(id===chatUserId){\n            return\n        }\n        const contacts = this.state.user.contacts\n        if(contacts.find(e=> e===chatUserId)){\n            return\n        }\n        const payload = {\n            user: this.state.selectUser,\n            chatUser: true\n\n        }\n        this.props.selectUser(payload)\n        this.setState({selectUser: null})\n        \n        \n    }\n\n   \n\n\n\n\n    render(){\n        return(\n            <div>\n                {this.search()}\n            </div>\n        )  \n    }\n        \n    \n}\n\nexport default Search;\n\n\n\n  ","import React from 'react';\nimport './dateItem.css'\n\nconst dateformat = { \n    month: 'short', \n    day: 'numeric',\n    hour12: false,\n    hour:  \"2-digit\",\n    minute: \"2-digit\"\n};\n\n\n\n\n\nexport class Date_message extends React.Component{\n\n    \n    componentDidUpdate(prevProps, prevState){  \n    }\n    \n\n\n    componentDidMount() {\n\n  \n    }\n\n    \n    render(){\n        const date = this.props.date\n        return(\n            <div className='chatroomProfilDate'>\n                {new Date(date).toLocaleDateString('de-DE', dateformat)}\n            </div>\n        )\n    }\n        \n        \n        \n    \n        \n    \n}\n\nexport default Date_message;\n\n\n\n  ","import React from 'react';\nimport './messageItem.css'\nimport { AiOutlinePicture } from \"react-icons/ai\"\n\n\n\n\n\n\n\nexport class MessageItem extends React.Component{\n\n    \n    componentDidUpdate(prevProps, prevState){  \n    }\n    \n\n\n    /**\n     * \n      \"author\": 24114211353796,\n      \"chatroomName\": \"6026c72221e6095ee95f4e76\",\n      \"date\": \"2021-02-12T18:21:31.627Z\",\n      \"id\": 24321794072051,\n      \"imgHigh\": \"\",\n      \"imgId\": null,\n      \"imgLow\": \"\",\n      \"message\": \"hi\",\n      \"read\": true,\n     */\n    componentDidMount() {\n\n  \n    }\n\n    \n   \n\n\n\n        \n\n    render(){\n        const message = this.props.message\n        \n        return(\n            <div className='chatroomLastChatDiv' >\n                {message===''?<AiOutlinePicture size={35}/>:<div>\n                <div style={{color: 'rgb(99, 156, 221)'}}>{this.props.author!==this.props.userId?null:'Du: '}</div>\"{message}\"</div>}\n            </div>\n        )\n    }\n        \n        \n        \n    \n        \n    \n}\n\nexport default MessageItem;\n\n\n\n  ","import React from 'react';\nimport './roomItem.css'\nimport Avatar from './../helpers/avatar'\nimport DateItem from './insideRooms/dateItem'\nimport MessageItem from './insideRooms/messageItem'\n\n\n\n\n\nexport class RoomItem extends React.Component{\n\n    \n    componentDidUpdate(prevProps, prevState){ \n    }\n    \n\n\n    /**\n     * \n        chat: (120) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, …]\n        date: \"2021-04-05T08:26:20.313063Z\"\n        id: 478846959871\n        imgHigh: \"\"\n        imgLow: \"\"\n        name: \"606ac9ac1f26298350e253ac\"\n        userName: \"q1\"\n        users:\n            creator: 478846959871\n            members: [285584038244]\n     */\n    componentDidMount() {\n\n  \n    }\n\n    messageReads = ()=>{\n        const chatroom = this.props.chatroom\n        const author = chatroom.chat.filter(e=>e.author !== this.props.userId)\n        const count = author.filter(e=>e.read === false).length\n        return count\n    }\n\n\n    is_online = () =>{\n        const online = this.props.online.find(e=>e===this.props.chatroom.id)\n        if(online){\n            return(<div className='chatroomJoined'>online</div>)\n        }else{\n            return(null)\n        }\n        \n    }\n\n\n    \n    \n    render(){\n        const {chat, imgHigh, imgLow, userName} = this.props.chatroom\n        const key = this.props.mapId\n        const lastchat = chat[chat.length - 1]\n        const author = lastchat.author\n        const lastchatTime = lastchat.date\n        if(!this.props.chatroom.text){\n            return(\n                <div className='chatroominListe'>\n                        <button className='btnchatroomuser' onClick={()=>this.props.openChat(key)}>\n                            <div className='chatroomuser'>\n                                <div className='chatroomuserDiv'>\n                                    <div className=\"chatroomImgDiv\" >\n                                        <Avatar name={userName} imgLow={imgLow} imgHigh={imgHigh}/>\n                                        {this.messageReads()===0?null:\n                                            <div className='underDateDiv'>\n                                                <div className='messageCountDiv'>{this.messageReads()}</div>\n                                            </div>\n                                        }\n                                    </div>\n                                    <div className='chatroomSpecsDiv'>\n                                        <div className='chatroomTxtDivTop'>\n                                            <div className='chatroomProfilName'>{userName}</div>\n                                            <DateItem date={lastchatTime}/>\n                                        </div>\n                                        <div className='chatroomTxtDivBotton'>\n                                            <MessageItem message={lastchat.message} author={author} userId={this.props.userId}/>\n                                            {this.is_online()}\n                                        </div>\n                                    </div>\n                                </div>\n                                \n                            </div>\n                            </button>\n                       </div>\n            )\n        }else{\n            return(\n                <div className='chatroominListe'>\n                    <button className='btnchatroomuser' onClick={()=>this.props.createRoom(key)}>\n                        <div className='chatroomuser'>\n                            <div className='chatroomuserDiv'>\n                                <div className=\"chatroomImgDiv\" >\n                                    <Avatar name={userName} imgLow={imgLow} imgHigh={imgHigh}/>\n                                </div>\n                                <div className='chatroomSpecsDiv'>\n                                    <div className='chatroomTxtDivTop'>\n                                        <div className='chatroomProfilName'>{userName}</div>\n                                    </div>\n                                    <div className='chatroomTxtDivBotton'>\n                                        <div className='chatroomLastChatDiv' >\n                                            ...fragt nach einem gemeinsamen Chatroom\n                                        </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </button>\n                    </div>\n            )\n        }\n        \n        \n    }\n        \n    \n}\n\nexport default RoomItem\n\n\n\n  ","import React from 'react'\nimport './chatroom.css'\nimport socket from './../socket/socket'\nimport Search from './search'\nimport DialogCheck from './../helpers/dialogCheck'\nimport RoomItem from './roomItem'\n\n\n\nfunction ListItem(props) {\n    return (<div>\n                <div className= \"chatValue\">{props.value}</div>\n            </div>);\n}\n\nexport class Chatroom extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n                date: new Date(),\n                user: this.props.user,\n                chatrooms: this.props.user.chatrooms,\n                chatroomMap: this.props.chatroomMap,\n                loading: true,\n                openChat: null,     \n                chatMap: null,\n                usersMap: null,\n                chatUserJoined: null,\n                avatar:null,\n                client: socket(),\n                start: true,\n                chatUser: null,\n                openDialogCheck: false,\n                progress:false,\n        }\n    }\n\n    handleChange = ({ target }) => {\n        this.setState({ [target.name]: target.value })\n    }\n\n    componentDidUpdate(prevProps, prevState){\n    }\n\n    componentDidMount(){\n        \n    }\n    \n    componentWillUnmount(){\n        //console.log('unmount chatroom liste')\n    }\n   \n    \n\n    runopenChatbox = (id) => {\n        this.props.openChat(id)\n    }\n\n\n\n    \n    // Callback Dialog-Check\n    dialogCallback = (e)=>{\n        if(e){\n            this.setState({openDialogCheck:false})\n        }else{\n            this.setState({openDialogCheck:false})\n        }\n    }\n\n    // callback search user->update\n    searchUpdate = (user)=>{\n        this.setState({user})\n    }\n\n\n\n    chatroomItem = ()=> {\n        const sortMap = (e)=>{\n            if(e[1].chat){\n                const lastchat = e[1].chat[e[1].chat.length - 1]\n                if(lastchat){\n                    //console.log(lastchat.date, e[1].userName )\n                    const dateTime = new Date(lastchat.date)\n                    return dateTime\n                }\n            }\n            return new Date(2021, 0, 1)  \n        }\n\n        const mapArray = [...this.props.chatroomMap.entries()]\n        const sortArray = mapArray.sort((a, b) => sortMap(b) - sortMap(a))\n        const mapSort = new Map(sortArray)\n        const lines = [];\n        [...mapSort.keys()].forEach(key=> {\n                lines.push(\n                    <RoomItem \n                        mapId={key} \n                        chatroom={this.props.chatroomMap.get(key)} \n                        userId={this.props.user.id}\n                        online={this.props.online}\n                        openChat={(key)=>this.runopenChatbox(key)}\n                        createRoom={(key)=>this.props.createRoom(key)}\n                        />\n                )\n            });\n            //console.log([...chatroomMap.entries()])\n            // CHatuser on Chatroom => map\n        const listItems = lines.map((room, index) =>\n            <ListItem value={room} key={index} />);\n        return listItems;\n\n    }\n\n\n        \n\n    \n\n   \n    \n    render(){\n        if(this.props.chatroomView){\n            return(\n                <div className='chatroomDiv'>\n                    <div className='chatListRooms'>\n                        <Search user={this.state.user} selectUser={this.props.openNewChat}/>\n                        <div className='chatroomListeFrame'>\n                            {this.chatroomItem()}\n                            <DialogCheck \n                                text={<div>möchtest du <div style={{fontWeight: \"bold\"}}></div> zu dein kontakten hinzufügen ?</div>}\n                                open={this.state.openDialogCheck}\n                                checked={this.dialogCallback}\n                            />\n                        </div>\n                    </div>\n                </div>  \n            )\n        }else{\n            return null\n        }\n    } \n        \n    \n    \n}\n\nexport default Chatroom   \n","\n\n\nexport const createImage = url =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', error => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nexport async function getRotatedImage(imageSrc, rotation = 0) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  const orientationChanged =\n    rotation === 90 || rotation === -90 || rotation === 270 || rotation === -270\n  if (orientationChanged) {\n    canvas.width = image.height\n    canvas.height = image.width\n  } else {\n    canvas.width = image.width\n    canvas.height = image.height\n  }\n\n  ctx.translate(canvas.width / 2, canvas.height / 2)\n  ctx.rotate((rotation * Math.PI) / 180)\n  ctx.drawImage(image, -image.width / 2, -image.height / 2)\n\n  return new Promise(resolve => {\n    canvas.toBlob(file => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n","\nimport React from 'react'\nimport { FiSmile } from \"react-icons/fi\";\nimport Picker from 'emoji-picker-react';\nimport './index.css'\nimport Dialog from '@material-ui/core/Dialog';\n\n\n\nexport class Emoji extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            chosenEmoji:null,\n            setChosenEmoji:null,\n            show: false\n        }\n    }\n\n    close = ()=>{\n        this.setState({show:false})\n    }\n    onEmojiClick = (event, emojiObject)=>{\n        //console.log(emojiObject)\n        //console.log(event)\n        //this.setState({chosenEmoji:emojiObject.emoji})\n        this.props.emoji(emojiObject.emoji)\n    }\n\n    emojiPicker=()=>{\n        return(\n            <Dialog\n            className='emojiDialog'\n            open={this.state.show===true}\n            onBackdropClick= {()=>this.close()}\n        \n        \n            >\n            <div className='emojiDialogDiv'>\n                <Picker onEmojiClick={this.onEmojiClick} />\n            </div>\n            </Dialog>\n        )\n    }\n    \n\n\n    \n\n    \n\n    render(){\n        return(\n            <div>\n            <button className='emojiBtn'\n            onClick={()=>this.setState({show:true})}>\n                <FiSmile  size={20}/>\n            </button>\n            {this.emojiPicker()}\n            </div>\n        )\n    }  \n    \n}\n\nexport default Emoji\n\n\n    \n\n    \n      \n        \n    \n","import React, { Fragment } from 'react'\nimport { getOrientation } from 'get-orientation/browser'\nimport { getRotatedImage } from './rotateImage'\nimport './index.css'\nimport Dialog from '@material-ui/core/Dialog';\nimport { FiCamera } from \"react-icons/fi\";\nimport { GoX } from \"react-icons/go\";\nimport heic2any from \"heic2any\";\nimport DotLoader from \"react-spinners/DotLoader\";\nimport Emoji from './../emoji'\n\n\n\n\nconst ORIENTATION_TO_ANGLE = {\n  '3': 180,\n  '6':  0,\n  '8': -90,\n}\n\n\n\nclass ImgSize extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      imageSrc: null,\n      crop: { x: 0, y: 0 },\n      zoom: 2,\n      aspect: 1 / 1,\n      croppedAreaPixels: null,\n      croppedImage: null,\n      isCropping: false,\n      correctImg: null,\n      file: null,\n      heicFile:null,\n      heicLoad: false,\n      input:'',\n\n    }\n  }\n\n  // input user => eingabefelder setten......\n  handleChange = ({ target }) => {\n    this.setState({ [target.name]: target.value });\n  } \n\n  // input user => emoji props\n  handleChangeEmoji = (e) => {\n    this.setState({input:this.state.input+e});\n  } \n\n\n  onCropChange = crop => {\n    this.setState({ crop })\n  }\n\n  onCropComplete = (croppedArea, croppedAreaPixels) => {\n    this.setState({\n      croppedAreaPixels,\n    })\n  }\n\n  onZoomChange = zoom => {\n    this.setState({ zoom })\n  }\n\n\n  // callback cropped Image......\n  callbackCorrectImg = async (e) =>{\n    this.props.img(e, this.state.input)\n    this.setState({correctImg: e, input:''})\n    this.close()\n  }\n\n  \n\n\n  onClose = async () => {\n    this.setState({\n      croppedImage: null,\n      input:''\n    })\n  }\n\n  rotation = async () => {\n    if(this.state.file=== null){\n      return\n    }\n    const file = this.state.file\n      let imageDataUrl = await readFile(file)\n\n      // auto rotation.....\n      const orientation = await getOrientation(file)\n      const rotation = ORIENTATION_TO_ANGLE[orientation]\n      if (rotation) {\n        imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\n      }\n      this.setState({\n        imageSrc: imageDataUrl,\n        crop: { x: 0, y: 0 },\n        zoom: 1,\n      })\n    \n  }\n\n\n  isHeic = async file =>{\n    await heic2any({\n      blob: file,\n      toType: \"image/jpeg\",\n      multiple: false,\n      quality: 0.1\n    })\n      .then(res=> {\n        this.setState({heicFile:res},()=>this.onHeicFileChange())\n      })\n    .catch((e) => {\n      console.log('catch file')\n      console.log(e)\n    });\n    \n\n    \n  }\n\n  onHeicFileChange = async()  => {\n    const heicImg = this.state.heicFile\n    let imageDataUrl = await readFile(heicImg)\n\n    // auto rotation.....\n    const orientation = await getOrientation(heicImg)\n    const rotation = ORIENTATION_TO_ANGLE[orientation]\n    if (rotation) {\n       imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\n    }\n    this.setState({\n      file: heicImg,\n      heicLoad:false,\n      imageSrc: imageDataUrl,\n      crop: { x: 0, y: 0 },\n      zoom: 1,\n    })\n  }\n\n  onFileChange = async e => {\n    if (e.target.files && e.target.files.length > 0) {\n      const file = e.target.files[0]\n      if(file.type==='image/heic'){\n        this.setState({heicLoad:true},()=>this.isHeic(file))\n        return\n      }\n      let imageDataUrl = await readFile(file)\n\n      // auto rotation.....\n      const orientation = await getOrientation(file)\n      const rotation = ORIENTATION_TO_ANGLE[orientation]\n      if (rotation) {\n        imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\n      }\n      this.setState({\n        file: file,\n        imageSrc: imageDataUrl,\n        crop: { x: 0, y: 0 },\n        zoom: 1,\n      })\n    }\n  }\n\n\n\n  \n\n\n  close = async ()=>{\n      this.setState({\n        imageSrc:null,\n        croppedAreaPixels: null,\n        croppedImage: null,\n        isCropping: false,\n        correctImg: null,\n        file: null,\n        heicFile:null,\n        heicLoad: false,\n        input:'',\n      })\n  }\n\n  spinner = ()=>{\n    const loading = this.state.heicLoad\n    if(loading){\n      return(\n        <div className='heicSpinner'><DotLoader size={30} margin={2} color='#000000' loading={loading}/></div>\n      )\n    }else{\n      return(\n        <button className=\"fakefile\"><FiCamera size={20}/></button>\n      )\n    }\n }\n \n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"ggg\">\n          <div className=\"picPos\">\n            <div className=\"imgPadd\">{this.spinner()}</div>\n            <input id=\"fileInput\" className=\"hidden\" type=\"file\" accept=\"image/* .heic\" multiple=\"multiple\" onChange={this.onFileChange}/>  \n            </div>\n          </div>\n          <Dialog \n          className='ImgChatDialog'\n          open={!!this.state.imageSrc}\n          fullScreen>\n          <div className={!this.props.mobile?'imgChatFrame':'imgChatFrameMobil'}>\n            <div className='chatheadImg'>\n              <button className='chatheadBtnImg' onClick={()=>this.close()}><GoX size={16}/></button>\n            </div>\n            {this.state.imageSrc && (\n            <Fragment>\n              <div className=\"imgChatImgDiv\">\n                <img className='imgChatImg' src={this.state.imageSrc} alt='...'></img>\n              </div>\n              <div className='chatEingabe'>\n                <textarea className=\"chatInput\" placeholder='deine Nachricht...' name=\"input\" value={this.state.input}  onChange={this.handleChange} ></textarea>\n                <div className='chatEingabeIcons'>\n                  <Emoji emoji={this.handleChangeEmoji}/>\n                </div>\n                <div className='chatEingbeRight'>\n                  <button className=\"chatBtn\" onClick={()=>this.callbackCorrectImg(this.state.imageSrc)}>senden</button>    \n                </div>\n              </div>\n          </Fragment>\n        )}\n        </div>\n        </Dialog>\n      </div>\n     \n    )\n  }\n}\n\nfunction readFile(file) {\n  return new Promise(resolve => {\n    const reader = new FileReader()\n    reader.addEventListener('load', () => resolve(reader.result), false)\n    reader.readAsDataURL(file)\n  })\n}\n\n\nexport default ImgSize;","\nimport React from 'react'\nimport './index.css'\nimport ChatImg from './chatImage'\nimport Emoji from './emoji'\nimport ctrl from './../api_controller'\nimport Spinner from './../helpers/spinner'\n\n\n\nexport class InputDevice extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            input: '',\n            img: null,\n            storageImg: {\n                imgLow: null,\n                imgHigh: null,\n                id: null\n            },\n            imgId: null,\n            client: this.props.socket,\n            \n        }\n        \n        \n                         \n    }\n\n    componentDidMount(){\n        \n    }\n\n    componentWillUnmount(){\n    }\n\n\n    // input user => eingabefelder setten......\n    handleChange = ({ target }) => {\n        const croom = this.props.chatroomName\n        const charCount = target.value.length\n        const author = this.props.user.id\n        const sendList = [1,5,10,15,20,25,30,35,40,45,50,55,60,65,70]\n        if(sendList.find(e => e===charCount)){\n            this.state.client.hack(croom, target.value.length, author )\n          }\n        \n        this.setState({ [target.name]: target.value });\n    }  \n\n    // input user => emoji props\n    handleChangeEmoji = (e) => {\n        this.setState({input:this.state.input+e});\n    } \n\n   \n    useImg = async (e,txt)=>{ \n        const picName = this.props.user.userName\n        let file = await fetch(e)\n        .then(r => r.blob())\n        .then(blobFile => new File([blobFile], picName, {type: \"image/jpeg\" }))\n        const storageImg = await ctrl.chatImgSave(file)\n        if(storageImg){\n            this.setState({\n                img:file,\n                storageImg,\n                input: txt,\n            },()=>this.send()) \n        }\n    }\n\n    send = ()=>{\n        this.props.send(this.state.input, this.state.storageImg.imgLow, this.state.storageImg.imgHigh, this.state.storageImg.id)\n        this.setState({\n            input:'',\n            img: null,\n            storageImg: {\n                imgLow: null,\n                imgHigh: null,\n                id: null\n            },\n            imgId: null,\n        })\n    }\n\n\n\n    loader = ()=>{\n        return(\n            <div className=\"chatBtn\"><Spinner loading={true} size={22} /></div>\n        )\n    }\n\n    \n\n    render(){\n        const send = this.props.imgSend\n        return(\n            <div className='chatEingabe'>\n                <textarea className=\"chatInput\" placeholder='deine Nachricht...' name=\"input\" value={this.state.input}  onChange={this.handleChange} ></textarea>\n                <div className='chatEingabeIcons'>\n                    {!this.props.mobile?<Emoji emoji={this.handleChangeEmoji}/>:null}\n                    <ChatImg mobile={this.props.mobile} img={this.useImg}/>\n                </div>\n                <div className='chatEingbeRight'>\n                    {!send?<button className=\"chatBtn\" onClick={()=>this.send()}>senden</button>:this.loader()}     \n                </div>\n            </div>\n        )\n                            \n                       \n            \n            \n        \n    }\n}       \n        \n    \n\n\nexport default InputDevice;","\n\nconst  mongoObjectId = function () {\n    var timestamp = (new Date().getTime() / 1000 | 0).toString(16);\n    return timestamp + 'xxxxxxxxxxxxxxxx'.replace(/[x]/g, function() {\n        return (Math.random() * 16 | 0).toString(16);\n    }).toLowerCase();\n};\n\n\nexport default mongoObjectId","\n\n\n\nconst pushServerPublicKey = \"BGoed3CFbljBkWxvPn2YVhB2jK8Yp8a6cFSBQg_rLz_QdkG7PF9EucLrGiPd5dKPEinZiAcK6lI-RODqx7aTQIo\";\n\n/**\n * checks if Push notification and service workers are supported by your browser\n */\nfunction isPushNotificationSupported() {\n  return \"serviceWorker\" in navigator && \"PushManager\" in window;\n}\n\n/**\n * asks user consent to receive push notifications and returns the response of the user, one of granted, default, denied\n */\nasync function askUserPermission() {\n  return await Notification.requestPermission();\n}\n/**\n * shows a notification\n */\nfunction sendNotification() {\n  const img = \"\";\n  const text = \"Take a look at this brand new t-shirt!\";\n  const title = \"New Product Available\";\n  const options = {\n    body: text,\n    icon: \"\",\n    vibrate: [200, 100, 200],\n    tag: \"new-product\",\n    image: img,\n    //badge: \"\",\n    actions: [{ action: \"Detail\", title: \"View\" }]\n  };\n  navigator.serviceWorker.ready.then(function(serviceWorker) {\n    serviceWorker.showNotification(title, options);\n  });\n}\n\n/**\n *\n */\n\n/**\n *\n * using the registered service worker creates a push notification subscription and returns it\n *\n */\nasync function createNotificationSubscription() {\n  //wait for service worker installation to be ready\n  const serviceWorker = await navigator.serviceWorker.ready;\n  // subscribe and return the subscription\n  return await serviceWorker.pushManager.subscribe({\n    userVisibleOnly: true,\n    applicationServerKey: pushServerPublicKey\n  });\n}\n\n/**\n * returns the subscription if present or nothing\n */\nfunction getUserSubscription() {\n  //wait for service worker installation to be ready, and then\n  return navigator.serviceWorker.ready\n    .then(function(serviceWorker) {\n      return serviceWorker.pushManager.getSubscription();\n    })\n    .then(function(pushSubscription) {\n      return pushSubscription;\n    });\n}\n\nexport {\n  isPushNotificationSupported,\n  askUserPermission,\n  sendNotification,\n  createNotificationSubscription,\n  getUserSubscription\n};","\nimport {\n    isPushNotificationSupported,\n    askUserPermission,\n    createNotificationSubscription,\n    getUserSubscription\n  } from \"./push_notification\";\n\n\nclass Notifi{\n\n\n      \n\n    // warte auf Userantwort \n    async pushNotifiApo(){\n        if(isPushNotificationSupported){\n            console.log(' du kannst push notifications senden !!!!')\n            const e = await askUserPermission()\n            console.log('Abo einwilligen ?????')\n            console.log(e)\n            if(e==='granted'){\n                return 'test'\n                const sub = await this.createSubcription()\n                if(sub){\n                    return sub\n                }\n            }\n            \n        }\n        \n    }\n\n    async createSubcription(){\n        const subscription = await createNotificationSubscription()\n        console.log('Abo ertsellt ')\n        const Json_sub = JSON.stringify(subscription)\n        console.log('Json_sub')\n        console.log(Json_sub)\n        const parse_sub = JSON.parse(Json_sub.toString())\n        console.log('parse_sub')\n        console.log(parse_sub)\n\n        return parse_sub\n        /**\n         * PushSubscription {endpoint: \"https://fcm.googleapis.com/fcm/send/eXhpw7pfShY:AP…Yd3VFVLwUmEVeLEPcHhiksAkzbIUAPvFrqx1Sj2lIF5NsKDY3\", expirationTime: null, options: PushSubscriptionOptions}\n            endpoint: \"https://fcm.googleapis.com/fcm/send/eXhpw7pfShY:APA91bHr1J3J3S9eaNesfDS9jrhOB_pXUSwWPuDNiEe8a34yeryW3wfxdxi0SzVbD8jGFX5cgu_7KrcbW8-VPpGXDzPYd3VFVLwUmEVeLEPcHhiksAkzbIUAPvFrqx1Sj2lIF5NsKDY3\"\n            expirationTime: null\n            options: PushSubscriptionOptions {userVisibleOnly: true, applicationServerKey: ArrayBuffer(65)}\n            __proto__: PushSubscription\n         */\n        \n    }\n\n    static getSubcriptionId = async()=>{\n        const existingSubscription = await getUserSubscription()\n        console.log('get abo id !!!! ')\n        console.log(existingSubscription)\n        //this.setState({userSubscription: existingSubscription})\n    }\n    \n\n\n}\nexport default Notifi;","\nimport api from './../api'\n\n\n\n    async function sendSubscriptionToPushServer(userSubscription, userId){\n        \n        const userSubscription_test =   {\n             endpoint: 'https://fcm.googleapis.com/fcm/send/eWfp1QqwJY8:APA91bGrtcitqBqUwYLIU4OCUwd4HTNSqnOsvaxg7Qqx3HKMJHz-k_PhPayyB8-g-nnfGhgd0uRoI3Zr81DiU65VE9_20I1aAsQNLVdieZOShRLInGDC2fFEIslP5rV2LSMk0Jk_OuVy',\n             keys: {\n                 auth: 'jusMk8YlxUrHP026bPuH9A',\n                 p256dh: 'BGoed3CFbljBkWxvPn2YVhB2jK8Yp8a6cFSBQg_rLz_QdkG7PF9EucLrGiPd5dKPEinZiAcK6lI-RODqx7aTQIo'\n             }\n\n\n        }\n        const userSubscription_test_firefox = {\n            endpoint:\"https://updates.push.services.mozilla.com/wpush/v2/gAAAAABgg…o_al0hio5xPIw-Oh6iPD3mWO-vyAGmmsMKydbsGJuqNeGrEY1NIJ-ilTLECs\",\n            keys:{\n                auth:\"5b6v5OWhOc0ws6L4cAv3TQ\",\n                p256dh:\"BBpFzVI2fzos-oNIVTT_fLO01BSvLlfMcf11PBuk8dgP8ocRWbiMkAu8KA1_G_cAgSoH5vQwZqJ5HciV3lioQ98\"\n            }\n        }\n        userSubscription.user = userId\n         \n        const res = await api.notifiPost(userSubscription).then(res=>{\n            console.log('notifiPost(userSubscription)')\n            console.log(res.data)\n            const key = res.data.notifi_key\n            return key\n           \n           \n        }) \n        return res\n    }\n     \n       /**\n        * define a click handler that request the push server to send a notification, passing the id of the saved subscription\n        */\n    async function sendNotification (contact, message){\n        console.log( message, 'push nachricht senden')\n\n\n         await api.notifiGetById(contact, message).then(res => {\n           console.log('api.notifiGetById(pushServerSubscriptionId)')\n           console.log(res.data)\n         });\n       };\n\n\nexport{\n    sendNotification,\n    sendSubscriptionToPushServer\n}","\nimport React from 'react'\nimport socket from './../socket/socket'\nimport './index.css'\nimport Chatverlauf from './chatVerlauf'\nimport Chatroom from './chatroom'\nimport { GoX, } from \"react-icons/go\";\nimport Avatar from './../helpers/avatar'\nimport InputDevice from './inputDevice'\nimport getId from './../helpers/get_Id'\nimport ctrl from './../api_controller'\nimport api from './../api'\nimport Notifi from './../notifications/notifi_reges'\nimport {\n    sendSubscriptionToPushServer,\n    sendNotification\n} from './../notifications/notifi_send'\n\n\n\nfunction getKeyBychatroomName(map, searchValue) {\n    for (let [key, value] of map.entries()) {\n      if (value.name === searchValue)\n        return key;\n    }\n  \n}\n\nexport class Chatbox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            client: socket(),\n            user: this.props.user,\n            chatUser: null,\n            chatroomMap: this.props.chatroomMap,\n            login: true,\n            chatroom: {},\n            joinedUser: [],\n            connect: false,\n            chatroomView: true,\n            default: null,\n            online: [],\n            hacking: false,\n            imgSend: false,\n            message_counter: 0,\n            userSubscription: null,\n            contactSubscription:[],\n            notifi_key: null,\n            \n        }\n        this.addMessagesCallback = this.addMessagesCallback.bind(this)\n        this.onSendMessage = this.onSendMessage.bind(this)  \n    }\n\n\n\n    componentDidMount(){\n        this.setNotifi()\n        this.connectSocket()\n        this.state.client.callbackPool(this.addMessagesCallback)\n        this.setName(this.props.user.contacts)\n        \n        \n        \n        \n    }\n\n    setNotifi = async()=>{\n        const userId = this.props.user.id\n        const notifi_class = new Notifi()\n        const userSub = await notifi_class.pushNotifiApo()\n        if(userSub){\n            console.log('get sub', userSub)\n            const notifi_key =  await sendSubscriptionToPushServer(userSub, userId)\n            console.log('!!!!!!!!!!!!!')\n            console.log('!!!!!!!!!!!!!')\n            console.log('.... datakey test Database pushserver')\n            console.log(notifi_key, '________new set')\n            console.log(this.state.user, '________user')\n            console.log('!!!!!!!!!!!!!')\n            console.log('!!!!!!!!!!!!!')\n            //this.setState({notifi_key})\n        }\n    }\n\n    sendNotifi = async(contact,payload)=>{\n        console.log('sende notififi')\n        await sendNotification(contact,payload)\n        \n    }\n\n\n\n    \n\n\n\n\n\n\n\n    connectSocket = ()=>{\n        const rooms = Array.from(this.state.chatroomMap.values())\n        if(rooms){\n            rooms.forEach(e=>{\n                console.log(e, 'connect')\n                this.state.client.connect(e.name)\n            })\n        }\n        // connect ping__room\n        const ping_room = this.state.user.id\n        this.state.client.connect(ping_room)\n    \n        \n        \n    }\n\n\n    // erstellt user im Socket........\n    setName = (contacts) => {\n        console.log('set name im  Socket ')\n\n        const payload = {\n            user: this.state.user.id,\n            contacts: contacts\n        }\n        this.state.client.register(payload)\n        this.setState({\n            connect: true\n        })\n    }\n\n\n\n\n    componentWillUnmount(){\n        console.log('klasse chat geschlossen')\n        const onlineUser = this.state.online\n        const user = this.state.user.id\n        onlineUser.forEach(e=>{\n            const answer = {\n                chatroomName: e,\n                answer: false,\n                user: user\n            }\n            this.state.client.userStatus(answer)\n        })\n        this.state.client.disconnect()\n        this.setState({\n            chatroom: null,\n            chatUser: null,\n            chatroomView: true,\n        })\n    }\n\n    // schließe -Dialog -message -chatroom\n    close = () =>{\n        console.log(' close chatroom => State reset')\n        this.props.useContact(null)\n        this.setState({\n            chatroom: null,\n            chatUser: null,\n            chatroomView: true\n        })\n    } \n\n\n\n    \n\n\n\n    componentDidUpdate(prevProps, prevState){\n        if(JSON.stringify(this.props.user)!==JSON.stringify(prevProps.user)){\n            this.setState({ user: this.props.user})\n        }\n        if(this.props.chatroomClose!==prevProps.chatroomClose){\n            console.log('chat wird geschlossen')\n            this.close()\n        }\n        if(this.props.chatroomMap.size>prevState.chatroomMap.size){\n            console.log('ÄNDERUNG _chatroomMap')\n            this.setState({chatroomMap: this.props.chatroomMap})\n        }\n    }\n\n\n\n\n\n    runChatroom = (e)=>{\n        console.log('ÖFFNE CHAT')\n        this.props.useContact(e)\n        const cRoom  = this.state.chatroomMap.get(e)\n        if(!('chat' in cRoom)){\n            cRoom.chat = []\n        } \n        // user geht in den Chatroom => socket read message!\n        this.state.client.onEnterRoom(cRoom.name, this.state.user.id)    \n        this.setState({\n            chatUser: cRoom.id,\n            chatroom: cRoom,\n            chatroomView: false\n        })  \n    }\n\n    runNewChatroom = (payload ) =>{\n        const sendData = {\n            id: this.state.user.id,\n            imgHigh: this.state.user.imgHigh,\n            imgLow: this.state.user.imgLow,\n            room: payload.user.id,\n            userName: this.state.user.userName,\n        }\n        this.state.client.pingContact(sendData)\n\n    }\n\n    \n\n    // erstellt die Datenbank für neuen Chatroom!!!!!!\n    createChatroomDb = async(selected)=>{\n        const userId = this.state.user.id\n        const chatUserId = selected.id\n        const name = getId()\n        const users = {creator: chatUserId, members: [userId]}\n        const payload = {name, users}\n        const chatroom = await ctrl.createChatroom(payload)\n        //console.log(userId, ' : ', chatUserId)\n        //console.log(this.state.chatroomMap)\n        if(chatroom){\n            const key = chatroom.id\n            const sendData = {\n                room: selected.id,\n                roomId: chatroom.id,\n                inquiryUser: this.state.user.id\n            }\n            this.state.client.pingAnswer(sendData)\n            this.props.chatroomMap.delete(chatUserId.toString())\n            //console.log(this.state.chatroomMap)\n            chatroom.id = chatUserId\n            chatroom.userName = selected.userName\n            chatroom.imgLow = !selected.imgLow?null:selected.imgLow\n            chatroom.imgHigh = !selected.imgHigh?null:selected.imgHigh\n            chatroom.chat = []\n            this.props.chatroomMap.set(key, chatroom)\n            this.state.client.connect(chatroom.name)\n            this.setState({\n                chatUser: chatUserId,\n                chatroom: chatroom,\n                chatroomView: false\n            }) \n        }\n\n        \n    }\n\n    answerContact = async(message)=>{\n        const roomMap = await ctrl.getCharoomList(this.state.user.id)\n        if(roomMap){\n            const newRoom = roomMap.get(message.roomId.toString())\n            //console.log('newRoom', newRoom)\n            this.state.chatroomMap.set(message.roomId.toString(), newRoom)\n            this.state.client.connect(newRoom.name)\n            this.setState({default: null})\n        }\n        \n    }\n     \n\n    \n   \n    \n\n    // INPUTEVICE => sende MAessage\n    onSendMessage = (m, imgLow, imgHigh, imgId) =>{ \n\n        const message = m\n        const chatroomName = this.state.chatroom.name\n        const mapKey = getKeyBychatroomName(this.props.chatroomMap, chatroomName)\n        const user_id = this.state.user.id\n        console.log(chatroomName)\n        console.log(mapKey)\n        console.log(this.props.chatroomMap)\n        const contact = this.props.chatroomMap.get(mapKey).id\n        const notifi_payload = {\n            title: this.state.user.userName,\n            message,\n            image: this.state.user.imgLow\n        }\n        this.sendNotifi(contact, notifi_payload)\n        if(imgLow===null){\n            if(m===''){\n                return\n            }\n            //console.log(message)\n            this.state.client.message(chatroomName, message,'','', null, user_id)\n    \n        }else{\n            this.state.client.message(chatroomName, message, imgLow, imgHigh, imgId, user_id)\n            this.setState({\n                default: null, \n                imgSend: true\n            })\n            \n            /**\n             *    MESSAGE\n             * \n             * \n             * \n             * author: 24114211353796\n                chatroomName: \"6026c72221e6095ee95f4e76\"\n                date: \"2021-02-12T18:21:31.627Z\"\n                id: 24321794072051\n                imgHigh: \"\"\n                imgId: null\n                imgLow: \"\"\n                message: \"hi\"\n                read: true\n             */\n        }\n    }\n\n\n\n    \n\n\n    ////////////////////////////////////////////////////////////////\n    ////////////____socket Callback______//////////////////////////\n\n    addMessagesCallback(message){\n        console.log(' pool   message','....')\n        const getIdByValue = (searchValue)=>{\n            const map = this.state.chatroomMap\n            for (let [key, value] of map.entries()){\n              if (value.name === searchValue)\n                return key;\n            }\n        }\n        switch(message.text){\n\n\n\n            \n            case 'new_room':\n                window.alert('fick die wand an')\n                this.state.chatroomMap.set(message.id, message)\n                this.setState({default:null})\n            break\n\n\n            \n            case 'read_message':\n                if(message.reader){\n                    //console.log(message, 'read', this.state.user.id)\n                    //console.log(this.state.chatroom)\n                    if(this.state.chatroom.name === message.chatroomName){\n                        if(message.user !== this.state.user.id ){//\n                            this.state.chatroom.chat.forEach(e => {\n                                e.read = true\n                            })\n                            this.setState({chatroom: this.state.chatroom})\n                        }else{\n                            this.state.chatroom.chat.forEach(e => {\n                                if(e.author!==this.state.user.id ){\n                                    e.read = true\n                                }\n                            \n                            })\n                            this.setState({chatroom: this.state.chatroom})\n                        }\n                    }\n                }\n            break\n\n\n\n            case 'hacking':\n                const hackTime = setTimeout(()=>{this.setState({hacking: false})},1500)\n                if(!this.state.chatroomView){\n                    const chatroomName = this.state.chatroom.name\n                    const userId = this.state.user.id\n                    if(message.hack && chatroomName === message.chatroomName && userId !== message.author){\n                        if(!this.state.hacking){\n                            this.setState({hacking: true}, ()=>hackTime)\n                        }\n                    }\n                }\n            break\n\n\n\n            case 'init_chat':\n                if(message.online){\n                    const user_self = this.state.user.id\n                    const onlineUser = message.online\n                    const answer = {\n                        chatroomName: onlineUser,\n                        answer: true,\n                        user: user_self\n                    }\n                    this.state.client.userStatus(answer)\n                    if(this.state.online.find(e=>e===onlineUser)){\n                        return\n                    }\n                    this.setState({online: this.state.online.concat(onlineUser)})\n                } \n            break\n\n\n\n\n            case 'user_status':\n                if(message.status){\n                    const onlineUser = message.user\n                    this.setState({online: this.state.online.concat(onlineUser)})\n                    break\n    \n                }else if(!message.status){\n                    const onlineUser = message.user\n                    if(this.state.online.find(e=>e===onlineUser)){\n                        this.state.online.forEach((e, i)=>{\n                            if(e===onlineUser){\n                                this.state.online.splice(i, 1)\n        \n                            }\n                        })\n                        this.setState({online: this.state.online})\n                    }\n                    break\n                }\n            break\n\n\n\n            case 'create_room':\n                window.alert('fick die wand nochmal an')\n                this.answerContact(message)\n            break\n\n\n\n            case 'new_message':\n                const mapId = getIdByValue(message.chatroomName)\n                //console.log('addMessage=>    ',message, mapId)\n                \n                // info message read\n                if(this.state.chatroom){\n                    const c_name = this.state.chatroom.name\n                    const author = message.author\n                    const mess_c_name = message.chatroomName\n                    if(c_name===mess_c_name && author!==this.state.user.id){\n                        console.log(author, 'author  user  ',this.state.user.id)\n                        console.log(c_name, 'c_nsme  ', mess_c_name, 'mess_c')\n                        /// reading message\n                        this.state.client.onEnterRoom(c_name, this.state.user.id)\n                    }\n                }\n                if(mapId){\n                    if(this.state.chatroomMap.has(mapId)){\n                        const room = this.state.chatroomMap.get(mapId)\n                        room.chat.push(message)\n                        this.state.chatroomMap.set(mapId, room)\n                        console.log('     set      ')\n                        if(message.imgHigh){\n                            this.setState({message_counter: this.state.message_counter + 1, imgSend: false})\n                        }\n                        this.setState({message_counter: this.state.message_counter + 1})\n                    }\n                    \n                }else{\n                    console.log('unbekannte Nachricht')\n                }\n            break\n\n            default:\n                break\n        }\n    }\n\n    \n       \n\n\n\n\n    scrollChatToBottom() {\n        this.panel.scrollTo(0, this.panel.scrollHeight)\n    }\n\n\n    \n\n    chatverlauf =()=>{\n        const room = this.state.chatroom\n        const hack = this.state.hacking\n        const online = this.state.online.find(e=>e===this.state.chatUser)\n        return(\n            <div className='ChatverlaufCon'>\n                <div className='chathead'>\n                    <div className='chatHeadImgDiv'><Avatar name={this.state.chatroom.userName} imgLow={this.state.chatroom.imgLow} imgHigh={this.state.chatroom.imgHigh}/></div>\n                    <div className='chatheadName'>{this.state.chatroom.userName}{!hack?null:<div className='chartoomWrite'> schreibt...</div>}</div>\n                        {!online?null:<div className='chatroomJoinedHead'>online</div>}\n                        <button className='chatheadBtn' onClick={()=>this.close()}><GoX size={16}/></button>\n                    </div>\n                    <div className='chatContainer'>\n                        <Chatverlauf \n                            chatroom={room} \n                            closeMess={this.close} \n                            user={this.props.user}\n                            message_counter={this.state.message_counter}\n                        />\n                        <InputDevice\n                            mobile = {this.props.mobile}\n                            send = {this.onSendMessage}\n                            chatroomName = {this.state.chatroom.name}\n                            user = {this.props.user}\n                            socket = {this.state.client} \n                            imgSend= {this.state.imgSend}\n                        />\n                    </div>\n                </div>\n        )\n    }\n\n\n\n\n\n    \n\n    \n\n    render(){\n        if(this.state.connect && this.props.main===1){\n            return(\n                <div className='ChatDiv'>\n                    {!this.state.chatroomView?this.chatverlauf():null}\n                    <div className='chatroomFrame'>\n                        <Chatroom \n                            user={this.state.user} \n                            openChat={this.runChatroom}\n                            openNewChat={this.runNewChatroom} \n                            online={this.state.online}\n                            chatroomMap={this.state.chatroomMap}\n                            chatroomView={this.state.chatroomView}\n                            createRoom={this.createChatroomDb}\n                        />\n                        \n                    </div>  \n                    \n                </div>\n            )\n            \n        }else{\n            return null\n        }\n    }\n}       \n        \n    \n\n\nexport default Chatbox;","import React from 'react';\nimport './index.css';\nimport { GoX } from \"react-icons/go\";\nimport DialogCheck from './../helpers/dialogCheck'\nimport ImgSize from './../helpers/imgClass'\n//import DialogFail from './../dialogFail'\n\n\n\n\n\n\nexport class Profile extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            user: this.props.user,\n            userName: this.props.user.userName,\n            email: this.props.user.email,\n            phone: this.props.user.phone,\n            password: this.props.user.password, \n            dialogCheck: false,\n            img: null,\n            imgUrl: this.props.user.imgHigh,\n            newImg: false, \n            change: false,\n            colorChange: false,\n            side: 1\n        }\n    }\n\n    handleChange = ({ target }) => {\n        this.setState({ [target.name]: target.value , change:true })\n    }\n\n\n    componentDidMount() {\n    }\n    \n    componentWillUnmount() {\n    }\n    \n    close = ()=>{\n        this.props.openChat()\n    }\n\n\n\n\n    dialogCheckText = ()=>{\n        const text = <div >Bist sicher das du die Änderungen übernehmen willst <div style={{fontWeight: \"bold\"}}>{this.state.user.userName}</div> ? </div>\n        this.setState({text: text, dialogCheck: true })\n        \n    }\n    callbackDialogcheck = (e)=>{\n        this.setState({dialogCheck: false,})\n        if(e){\n            this.userUpdate()\n        }\n       \n        \n    }\n    \n\n    croppedImg = async (e)=>{\n        const picName = this.state.userName\n        const formData = new FormData();\n        \n        let file = await fetch(e)\n        .then(r => r.blob())\n        .then(blobFile => new File([blobFile], picName, {type: \"image/png\" }))  \n        /*\n        * mobil test\n\n        let photo = {\n            uri: e,\n            type: 'image/*',\n            name: 'file.jpg'\n\n        };\n        */\n        formData.append('img', file);\n        formData.append('thumbnail', file);\n\n\n        \n        \n        this.setState({\n            img: file, // file by ReacT\n            imgUrl:e,\n            newImg: true, \n        })\n    }\n\n    userUpdate = ()=>{\n        if(this.state.newImg){\n            const {password, phone, userName, email, img} = this.state\n            this.props.userUpgrade({password, phone, userName, email, img})\n        }else{\n            const {password, phone, userName, email} = this.state\n            this.props.userUpgrade({password, phone, userName, email})\n        }\n        this.close()\n    }\n\n\n\n\n\n\n\n\n\n    profilImg(){\n        if(!this.state.imgUrl){\n            return(\n                <div className=\"regisImgDiv\">\n                    <ImgSize img={this.croppedImg} mobil={this.props.mobil} />\n                </div>\n            )\n        }\n        return(\n            <div className=\"regisImgDiv\">\n                <img className='regisImg' src={this.state.imgUrl} alt={this.state.userName}></img>\n                <button className='regisImgBtn' onClick={()=>this.setState({imgUrl: null})}>x</button>\n            </div>\n        );                    \n    }\n\n    saveBtn = ()=>{\n        const {change, newImg} = this.state\n        if(change || newImg){\n            return(\n                <button className='profileSaveBtn' onClick={()=>this.dialogCheckText()}>Änderung speichern</button>\n            )   \n        }else{\n            return(\n                <button className='profileSaveBtn'><div/></button>\n            )\n        }\n    }\n\n    profileMain = ()=>{\n        return(\n            <div>\n                <div className='profileHead'>\n                    <button className='profileBackBackBtn' ></button>\n                    <button className='profileBackBtn' onClick={()=>this.close()}><GoX size={16}/></button>\n                </div>\n                <div className='profileMain'>\n                    <div className='profileImgDiv'>\n                        {this.profilImg()}\n                    </div>\n                      \n                    <div className='profileDataDiv'>\n                        <div className='profileBez'>Benutzername:</div>\n                        <input className='profileInputMenu' value={this.state.userName} name='userName'  onChange={this.handleChange}></input>\n                    </div>\n                    <div className='profileDataDiv'>\n                        <div className='profileBez'>Email:</div>\n                        <input className='profileInputMenu' value={this.state.email} name='email'  onChange={this.handleChange}></input>\n                    </div>\n                    <div className='profileDataDiv'>\n                        <div className='profileBez'>Passwort:</div>\n                        <input className='profileInputMenu' value={this.state.password} name='password' type='password' onChange={this.handleChange}></input>\n                    </div>\n                    <div className='profileDataDiv'>\n                        <div className='profileBez'>Telefon:</div>\n                        <input className='profileInputMenu' value={this.state.phone} name='phone' type='number' onChange={this.handleChange}></input>\n                    </div>\n                    <div className='profileDataDiv'>\n                        <div className='profileSaveBtnDiv'>\n                            {this.saveBtn()}\n                        </div>\n                            \n                        \n                    </div>\n                </div>\n\n                <DialogCheck text={this.state.text} open={this.state.dialogCheck} checked={this.callbackDialogcheck}></DialogCheck>\n            </div>\n        ) \n       \n    \n    }\n\n    \n\n    render(){\n        if(this.props.main===2){\n            return (\n                <div className='profileScreen'>{this.profileMain()}</div>\n            )\n        }else{\n            return null\n        }\n    }\n        \n}\n\nexport default Profile;\n\n\n\n  ","import React from 'react';\nimport './index.css';\nimport { GoX } from \"react-icons/go\";\nimport DialogCheck from './../helpers/dialogCheck'\nimport color from './../helpers/colors'\nimport TextMessage from './../chat/insideMessage/textMessage'\nimport DateMessage from './../chat/insideMessage/dateMessage'\n\n\nconst examples = [\n    {\n        \"author\": 'test1',\n        \"chatroomName\": \"ff\",\n        \"date\": \"2021-02-12T18:21:31.627Z\",\n        \"id\": 1,\n        \"imgHigh\": \"\",\n        \"imgId\": null,\n        \"imgLow\": \"\",\n        \"message\": \"Hey, Archa!\",\n        \"read\": true,\n    },\n    {\n        \"author\": 'test2',\n        \"chatroomName\": \"ff\",\n        \"date\": \"2021-02-12T18:21:31.627Z\",\n        \"id\": 1,\n        \"imgHigh\": \"\",\n        \"imgId\": null,\n        \"imgLow\": \"\",\n        \"message\": \"Moin! was kann kann ich für dich tuen? 🤓\",\n        \"read\": true,\n    },\n    {\n        \"author\": 'test1',\n        \"chatroomName\": \"ff\",\n        \"date\": \"2021-02-12T18:21:31.627Z\",\n        \"id\": 1,\n        \"imgHigh\": \"\",\n        \"imgId\": null,\n        \"imgLow\": \"\",\n        \"message\": \"ich brauche eine Veränderung\",\n        \"read\": true,\n    },\n    {\n        \"author\": 'test2',\n        \"chatroomName\": \"ff\",\n        \"date\": \"2021-02-12T18:21:31.627Z\",\n        \"id\": 1,\n        \"imgHigh\": \"\",\n        \"imgId\": null,\n        \"imgLow\": \"\",\n        \"message\": \"wähle eine neue Farbe 😉\",\n        \"read\": true,\n    }\n]\n\n\n\nexport class ColorMenu extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            user: this.props.user,\n            chatColor : [color.grey,color.highBlue,color.pink,color.lila,color.pastellgreen,color.red, color.white],\n            textColor : [color.black,color.white],\n            color: {\n                backgroundColor: this.props.user.color.backgroundColor,\n                bubbleColor: this.props.user.color.bubbleColor,\n                fontColor: this.props.user.color.fontColor,\n                bubbleColor2: this.props.user.color.bubbleColor2,\n                fontColor2: this.props.user.color.fontColor2,\n\n            },\n            dialogCheck: false,\n            colorChange: false,\n            side: 1\n        }\n    }\n\n\n\n    componentDidMount() {\n    }\n    \n    componentWillUnmount() {\n    }\n    \n    close = ()=>{\n        if(this.state.colorChange){\n            const {color} = this.state \n            const payload = {color}\n            this.props.color(payload)\n        }\n        this.props.openChat()\n    }\n\n    changeColor = (colorTaget, pos) =>{\n        const {color} = this.state\n        switch(pos){\n            case 1:\n                color.backgroundColor = colorTaget\n                this.setState({color: color, colorChange:true})\n                return\n            case 2:\n                color.bubbleColor = colorTaget\n                this.setState({color: color, colorChange:true})\n                return\n            case 4:\n                color.fontColor = colorTaget\n                this.setState({color: color, colorChange:true})\n                return\n            case 3:\n                color.bubbleColor2 = colorTaget\n                this.setState({color: color, colorChange:true})\n                return\n            case 5:\n                color.fontColor2 = colorTaget\n                this.setState({color: color, colorChange:true})\n                return\n            default:\n                return \n        }\n    }\n\n\n\n    \n    \n\n    exampleMessage = (messages, index)=>{\n        const {author, date, message} = messages\n        const {bubbleColor, bubbleColor2, fontColor, fontColor2} = this.state.color\n        const user_id = 'test1'\n        if(user_id === author){\n            // rechte Blase.....\n            return(\n                <div className='chat_colunm_right' key={index}>\n                    <div className='chatblase_right' style={{background:bubbleColor}}>\n                        <div className='chatMessage_right' style={{color:fontColor}}>\n                            <TextMessage message={message}/>\n                            <div className='chatdate_right' >\n                                <DateMessage date={date}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }else{\n            return(\n                <div className='chat_colunm_left' key={index}>\n                    <div className='chatblase_left' style={{background:bubbleColor2}}>\n                        <div className='chatMessage_left' style={{color:fontColor2}}>\n                            <TextMessage message={message}/>\n                            <div className='chatdate_left' >\n                                <DateMessage date={date}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n    \n    exampleChat = ()=>{\n       const mess =  examples.map((message,index)=>{\n            return this.exampleMessage(message, index)\n        })\n        return mess\n    }\n\n\n    colorMain = ()=>{\n        return(\n            <div>\n                <div className='profileHead'>\n                    <button className='profileBackBtn' onClick={()=>this.close()}><GoX size={16}/></button>\n\n                </div>\n                <div className='showColorFrame'>\n                    <div className='exampleChatDiv' style={{background:this.state.color.backgroundColor}}>\n                        {this.exampleChat()}\n                    </div>\n                </div>\n                <div className='profileMainColor'>\n                    <div className='profileDataDivColor'>\n                        <div className='profileBezColor'>Hintergrund:</div>\n                        <div className='profileColorDiv'>\n                            {this.state.chatColor.map(e=>\n                                <button className={e===this.state.color.backgroundColor?'profileColorBtnState':'profileColorBtn'} key={e} style={{background:e}} onClick={()=>this.changeColor(e,1)}></button>\n                        )}</div>\n                    </div>\n                    <div className='placeholderDiv'></div>\n                    <div className='profileDataDivColor'>\n                        <div className='profileBezColor'>Chat-Blase rechts:</div>\n                        <div className='profileColorDiv'>\n                            {this.state.chatColor.map(e=>\n                                <button className={e===this.state.color.bubbleColor?'profileColorBtnState':'profileColorBtn'} key={e} style={{background:e}} onClick={()=>this.changeColor(e,2)}></button>\n                            )}</div>\n                    </div>\n                    <div className='placeholderDiv'></div>\n                    <div className='profileDataDivColor'>\n                        <div className='profileBezColor'>Chat-Blase links:</div>\n                        <div className='profileColorDiv'>\n                            {this.state.chatColor.map(e=>\n                                <button className={e===this.state.color.bubbleColor2?'profileColorBtnState':'profileColorBtn'} key={e} style={{background:e}} onClick={()=>this.changeColor(e,3)}></button>\n                            )}</div>\n                    </div>\n                    <div className='placeholderDiv'></div>\n                    <div className='profileDataDivColor'>\n                        <div className='profileBezColor'>Text rechts:</div>\n                        <div className='profileColorDiv'>\n                            {this.state.textColor.map(e=>\n                                <button className={e===this.state.color.fontColor?'profileColorBtnState':'profileColorBtn'} key={e} style={{background:e}} onClick={()=>this.changeColor(e,4)}></button>\n                            )}</div>\n                    </div>\n                    <div className='placeholderDiv'></div>\n                    <div className='profileDataDivColor'>\n                        <div className='profileBezColor'>Text links:</div>\n                        <div className='profileColorDiv'>\n                            {this.state.textColor.map(e=>\n                                <button className={e===this.state.color.fontColor2?'profileColorBtnState':'profileColorBtn'} key={e} style={{background:e}} onClick={()=>this.changeColor(e,5)}></button>\n                            )}</div>\n                    </div>\n                </div>\n                <DialogCheck text={this.state.text} open={this.state.dialogCheck} checked={this.callbackDialogcheck}></DialogCheck>\n            </div>\n        )\n    }\n\n    \n\n    render(){\n        if(this.props.main===3){\n            return (\n                <div className='profileScreen'>{this.colorMain()}</div>\n            )\n        }else{\n            return null\n        }\n        \n    }\n        \n}\n\nexport default ColorMenu;\n\n\n\n  ","import React from 'react';\nimport './index.css';\nimport Regis from './register'\nimport Topbar from './topbar'\nimport { ClassicSpinner } from \"react-spinners-kit\";\nimport Chat from './chat'\nimport Profile from './profile'\nimport ColorMenu from './colorMenu'\nimport color from './helpers/colors'\nimport ctrl from './api_controller'\n\n/*\n\n*/\nexport class Home extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            mobil: false,\n            use: 0,\n            email:'',\n            password:'',\n            user: null,\n            newUser: null,\n            useContact: null,\n            chatroomClose: null,\n            main: 1,\n            // standart Farbeinstellung\n            accentColor: color.accentColor,\n            color: {\n                backgroundColor: color.white,\n                bubbleColor: color.highBlue,\n                fontColor: color.white,\n                fontColor2: color.grey,\n                bubbleColor2: color.black\n            },\n            chatroomMap: new Map(),\n            logout:false ,     \n        }\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this)\n        this.frameToLogin = this.frameToLogin.bind(this)\n        this.topbar = this.topbar.bind(this)\n        this.use = this.use.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange = ({ target }) => {\n        this.setState({ [target.name]: target.value })\n    }\n\n\n\n    \n\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateWindowDimensions());\n        const storage = localStorage.getItem('login_archa')\n        if(storage){\n            this.storageLogin(JSON.parse(storage))\n        }else{\n            this.setState({use:1})\n        }\n        \n    }\n\n    updateWindowDimensions() {\n        const mobil = window.innerWidth<=600\n        document.documentElement.style.setProperty('--vh', `${window.innerHeight/100}px`);\n        this.setState({ mobil: mobil});\n    }\n    \n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions)\n    }\n    \n    \n    backHandleRegis=(e)=>{\n        if(e){\n            this.setState({use: 1})\n        }\n    }\n\n    openChat = (e)=>{\n        this.setState({useContact: e})\n\n    }\n    \n    openSelect = (e)=>{\n        this.setState({main:e})\n    }\n    use4 = ()=>{\n        this.setState({main:1})\n    }\n\n\n    profileUserUprade = (update)=>{\n        if(update.img){\n            this.updateImg_userDB(update)\n        }else{\n            this.update_userDb(update)\n        }\n        \n    }\n\n    updateImg_userDB = async(update)=>{\n        const img = update.img\n        console.log('sende img')\n            const storageImg = await ctrl.imgSave(img)\n            if(storageImg){\n                update.imgLow = storageImg.imgLow\n                update.imgHigh = storageImg.imgHigh\n                update.imgId = storageImg.id\n                this.update_userDb(update)\n                await ctrl.deleteImg(this.state.user.imgId)\n            }\n    }\n    \n    update_userDb = async(update)=>{\n        const userId = this.state.user.id\n        const user = await ctrl.updateUser(userId, update)\n        if(user){\n            console.log('########UPDATE#########')\n            const {email, password} = user\n            const payload = {email, password}\n            localStorage.setItem('login_archa', JSON.stringify(payload));\n            this.setState({user})\n        }\n    }\n\n\n\n\n\n\n    storageLogin = async(payload)=>{\n        let user = await ctrl.getUserbyEAndP(payload)\n        if(user){\n            //console.log(user, 'api passEmail')\n            // nur bis alle profile geändert sind.....\n            if(!user.color){\n                console.log('neu fügt color daten hinzu')\n                const color = this.state.color\n                const payload = {color}\n                user = await ctrl.updateUser(user.id, payload)\n            }\n            // lade Map chatrooms from user\n            const chatroomMap = await ctrl.getCharoomList(user.id)\n            if(chatroomMap){\n                this.setState({user, use:4, chatroomMap})\n            }  \n        }else{\n            window.alert('email oder Passwort stimmen nicht')\n            //localStorage.removeItem('login_archa')\n            this.setState({use:1})\n        }\n    }\n\n    login = async()=>{\n        const email = this.state.email\n        const password = this.state.password\n        if(email===''&&password===''){\n            return\n        }\n        const payload = {email, password}\n        let user= await ctrl.getUserbyEAndP(payload)\n        if(user){\n            localStorage.setItem('login_archa', JSON.stringify(payload));\n            const chatroomMap = await ctrl.getCharoomList(user.id)\n            if(chatroomMap){\n                this.setState({user, use:4, chatroomMap})\n            }\n        }else{\n            window.alert('email oder Passwort stimmen nicht')\n            this.setState({use:1})\n        }\n    }\n    chatroomClose= (e)=>{\n        if(e){\n            this.setState({chatroomClose:e})\n        }\n    }\n\n    newUser = (userDb)=>{\n        this.setState({user: userDb, use:4})\n    }\n\n    addUser = (user)=>{\n        if(user._id===this.state.user._id){\n            this.loadMap(user)\n        }  \n    }\n\n    loadMap = async(user)=>{\n        const chatroomMap = await ctrl.getCharoomList(user.id)\n            if(chatroomMap){\n                this.setState({user, use:4, chatroomMap})\n            }\n    }\n\n\n\n    logoutHandle = (e)=>{\n        console.log('ausloggen....')\n        if(e){\n            this.setState({\n                use: 1,\n                email:'',\n                password:'',\n                newUser: null,\n                user: null,\n                chatroomMap: new Map(),\n                addEventListener: null\n            },()=>this.remoteUser())\n        }\n    }\n    remoteUser = ()=>{\n        setTimeout(()=>this.setState({user:null}),300)\n    }\n\n    handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            this.login()\n        }\n      }\n\n    frameToLogin(){\n        return(\n            <div className='loginframeDiv'  onKeyDown={this.handleKeyDown}>\n                <div className='loginframeTxt1'>ARCHA</div>\n                <div className='placeholderDiv'></div>\n                <div className='loginframeTxt3'>Cloud - messenger</div>\n                <div className='placeholderDiv'></div>\n                <div className='loginframeTxt2'>Willkommen!</div>\n                <div className='loginframeTxt2'>log dich ein oder regestriere dich </div>\n                <div className='placeholderDiv'></div>\n                <div className='loginInputDiv'><input className='loginInput' type='text' name='email' placeholder='E-mail' value={this.state.email} onChange={this.handleChange}></input></div>\n                <div className='placeholderDivHalf'></div>\n                <div className='loginInputDiv'><input className='loginInput' type='password' name='password' placeholder='Passwort'value={this.state.password} onChange={this.handleChange}></input></div>\n                <button className='loginBtn' onClick={()=>this.setState({use:3},()=>this.login())}>Login</button>\n                <button className='regesBtn' onClick={()=>this.setState({use:2})}>registrieren</button>\n            </div>\n        )\n    }\n    topbar(){\n        return(\n            <div className='topbarDivHome'>\n                <Topbar \n                    user={this.state.user} \n                    updateUserHome={this.addUser} \n                    mobil={this.state.mobil} \n                    logout={this.logoutHandle} \n                    useContact={this.state.useContact}\n                    chatroomClose={this.chatroomClose}\n                    chatroomMap={this.state.chatroomMap}\n                    openSelect={this.openSelect}\n                />\n            </div>\n        )\n    }\n\n    use(){\n        switch(this.state.use){\n            case 0:\n                const loginLoad =  this.state.use === 0? true : false\n                return(\n                    <div className='regisDivSwitchLoad'>\n                        <div className='heicSpinner'>\n                            <div className='heicSpinnerStartDiv'>\n                                <ClassicSpinner size={50} margin={2} color='#639cdd' loading={loginLoad}/>\n                            </div>\n                        </div> \n                    </div>\n                )\n            case 1:\n                return(\n                    <div className='regisDivSwitch'>\n                        {this.frameToLogin()}\n                    </div>\n                )\n            // neuer User.....\n            case 2:\n                return(\n                    <div className='regisDivSwitch'>\n                        <Regis mobil={this.state.mobil} back={this.backHandleRegis} newUser={this.newUser}/>\n                    </div>\n                )\n            // einloggen.....\n            case 3:\n                const loading = true\n                return(\n                    <div className='regisDivSwitch'>\n                        <div className='loginframeDiv'>\n                            <div className='placeholderDiv'></div>\n                            <div className='loginframeTxt3'>lade... </div>\n                            <div className='heicSpinner'><ClassicSpinner size={50} margin={2} color='#639cdd' loading={loading}/></div> \n                        </div>               \n                    </div>\n                )\n            // Main Paiper....\n            case 4:\n                return(\n                    <div className='regisDivSwitch'>\n                        <div className='loginframeDiv'>\n                            <Chat \n                                user={this.state.user} \n                                useContact={this.openChat} \n                                chatroomClose={this.state.chatroomClose} \n                                mobile={this.state.mobil} \n                                chatroomMap={this.state.chatroomMap}\n                                updateMap={this.loadMap}\n                                main={this.state.main}\n                            />\n                            <Profile\n                                openChat={this.use4}\n                                user={this.state.user}\n                                userUpgrade={this.profileUserUprade}\n                                main={this.state.main}\n                            />\n                            <ColorMenu\n                                openChat={this.use4}\n                                user={this.state.user}\n                                color={this.profileUserUprade}\n                                main={this.state.main}\n                            />\n                        </div>               \n                    </div>\n                )\n            default: return null\n        }\n    }\n    \n\n    render(){\n        return(\n            <div className={!this.state.mobil?'homeScreen':'homeScreenMobil'} >\n                {this.topbar()}\n                <div className={!this.state.mobil?'loginFrame':'loginFrameMobil'}>\n                    {this.use()}\n                </div>\n            </div>\n        ); \n    }\n}\n\nexport default Home;\n\n\n\n  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './Home';\nimport './Home/index.css'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n// React Router\n// ========================================\n\n\nfunction App() {\n  \n  \n  return (\n    <div>\n          <Home/>\n    </div>\n  );\n}\n\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorkerRegistration.register();","\n\n\n\nmodule.exports = function () {\n  return  ['/\\uD83C\\uDFF4(?:\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74)\\uDB40\\uDC7F|\\u200D\\u2620\\uFE0F)|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC68(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3]))|\\uD83D\\uDC69\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC68(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83D\\uDC69\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC68(?:\\u200D(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|[#\\0-9]\\uFE0F\\u20E3|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDD1-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDEEB\\uDEEC\\uDEF4-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])|(?:[#\\0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC69\\uDC6E\\uDC70-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3D\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDD1-\\uDDDD])/g']\n  \n}\n\n"],"sourceRoot":""}