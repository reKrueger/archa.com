{"version":3,"sources":["Home/helpers/imgClass/cropImage.js","Home/helpers/imgClass/rotateImage.js","Home/helpers/dialogViewImg/index.js","Home/helpers/avatar/index.js","Home/helpers/imgClass/index.js","Home/helpers/dialogFail/index.js","switch.js","Home/api/index.js","Home/api_controller/index.js","Home/helpers/colors/index.js","Home/register/index.js","Home/helpers/dialogCheck/index.js","Home/topbar/dialogMenu/index.js","Home/socket/WebSocket.js","Home/socket/socket.js","Home/topbar/index.js","Home/chat/chatVerlauf.js","Home/chat/search.js","Home/chat/chatroom.js","Home/chat/chatImage/rotateImage.js","Home/chat/emoji/index.js","Home/chat/chatImage/index.js","Home/chat/inputDevice.js","Home/helpers/get_Id.js","Home/chat/index.js","Home/profile/index.js","Home/colorMenu/index.js","Home/index.js","index.js","Home/chat/emoji/emojiRegex.js"],"names":["createImage","url","Promise","resolve","reject","image","Image","addEventListener","error","setAttribute","src","getRadianAngle","degreeValue","Math","PI","getCroppedImg","imageSrc","pixelCrop","a","rotation","canvas","document","createElement","ctx","getContext","safeArea","max","width","height","translate","rotate","drawImage","data","getImageData","putImageData","x","y","toBlob","file","URL","createObjectURL","getRotatedImage","ViewImg","props","dialogText","className","state","text","close","open","imgUrl","prevProps","this","setState","Dialog","fullScreen","onClick","size","alt","React","Component","Avatar","imgViewClose","e","imgViewOpen","stringToColor","str","hash","i","length","charCodeAt","colour","j","toString","substr","name","imgLow","imgHigh","imgView","user","divStyle","background","ava","charAt","lastPart","lastIndexOf","undefined","style","ORIENTATION_TO_ANGLE","readFile","reader","FileReader","result","readAsDataURL","ImgSize","onCropChange","crop","onCropComplete","croppedArea","croppedAreaPixels","onZoomChange","zoom","showResult","isCropping","croppedImage","callbackCorrectImg","onClose","img","correctImg","imageDataUrl","getOrientation","orientation","isHeic","heic2any","blob","toType","multiple","quality","then","res","heicFile","onHeicFileChange","catch","console","log","heicImg","heicLoad","onFileChange","target","files","type","spinner","loading","margin","color","oldImg","userName","aspect","id","accept","onChange","mobil","disabled","showGrid","DialogFail","dialogCallback","failChecked","num","api","setUrl","setPATH","serverUrl","axios","create","baseURL","config","headers","apiPic","apiChatPic","configMobil","apiPicMobil","apiChatPicMobil","apiChat","apiChats","apiChatroomMap","apis","insertUser","payload","post","updateUserById","patch","deleteUserById","delete","getUserById","get","insertImg","deleteImgById","createChatroom","updateLastMess","put","updateChatroom","deleteChatroomById","getUserbyEmailAndPassw","getUserbySearch","getNext100Chats","getChatroomMapByUserId","messReadHandleByChatroomId","insertChatImg","deleteChatImgById","insertImgMobil","insertChatImgMobil","deleteChatroomMapByName","success","search","users","update","chatroom","chatroomMap","Map","resData","chatrooms","Object","keys","map","set","chatroomId","chats","userId","chatroomName","cMap","ctrl","imgSave","newUserSave","getUser","getUserbyEAndP","getSearch","updateUser","deleteImg","deleteUser","getCharoomList","get100Mess","chatImgSave","deleteChatImg","chatImgSaveMobil","imgSaveMobil","highBlue","grey","pink","green","orange","white","black","accentColor","Regis","back","handleChange","value","croppedImg","picName","fetch","r","blobFile","File","noImg","email","password","phone","openDialogFail","txt","newUser","storageImg","insertNewUser","imgId","userDb","userFail","step","backgroundColor","bubbleColor","fontColor","fontColor2","bubbleColor2","regisSteps","bind","navibuttons","profilImg","DialogCheck","checked","MenuTab","chatroomClose","deleteId","openSelect","logoutHandle","logout","DialogCheckText","n","fontWeight","dialogCheck","userDelete","deleteUserBtn","cUserId","useContact","allMap","cName","cPic","callbackDialogcheck","userUpdate","clearStarage","localStorage","removeItem","Popover","anchorEl","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onBackdropClick","API_PATH","path","WebSocketService","callbacks","socketRef","instance","room","WebSocket","onopen","onmessage","socketNewMessage","onerror","message","onclose","parsedData","JSON","parse","command","messages","sendMessage","username","newMessageCallback","send","stringify","err","readyState","callback","socket","recursion","waitForSocketConnection","setTimeout","WebSocketInstance","getInstance","register","component","initChatUser","msg","messageObject","author","newChatMessage","hack","charLength","hacking","callbackPool","messagesCallback","addCallbacks","unregisterHandler","disconnect","connect","roomName","pingContact","contact","contactPing","pingAnswer","answerPing","onEnterRoom","userStatus","statusUser","Topbar","getImg","build","updateUserHome","menuClose","dropdown","addChatUser","inviIndex","handleClickDropdown","divRef","current","client","s3upload","createRef","userData","prevState","invitUserName","invitUserImgUrl","ref","aria-owns","aria-haspopup","updateUserCallback","mobile","Preloader","ListItem","Chatbox","handleScroll","event","node","scrollHeight","scrollTop","clientHeight","backhandle","closeMess","scrollToBottom","messagesEnd","scrollIntoView","behavior","block","inline","imgChatBlase","singleEmoji","match","emojiRegex","join","checkLink","mess","startsWith","href","chatVerlauf","dateformat","hour12","hour","minute","dateformat2","month","day","chat","lines","dateLine","read","Date","date","toLocaleString","push","borderBottomColor","toLocaleTimeString","messageStatus","key","indexOf","start","input","imgLoading","chatsLength","imgCount","filter","imgSend","float","clear","el","Search","handleSearch","searchChatUser","placeholder","chatUser","searchFound","chatUserArr","forEach","selectUser","items","updateContactUser","_id","chatUserId","contacts","find","conracts","Chatroom","runopenChatbox","openChat","openDialogCheck","searchUpdate","messageReads","inquiry","pic","picHigh","createRoom","sortMap","lastchat","sortArray","entries","sort","b","online","newMess","lastchatUser","lastchatTime","toLocaleDateString","chatMap","usersMap","chatUserJoined","avatar","progress","chatroomView","openNewChat","Emoji","show","onEmojiClick","emojiObject","emoji","emojiPicker","chosenEmoji","setChosenEmoji","handleChangeEmoji","InputDevice","croom","charCount","useImg","mongoObjectId","getTime","replace","random","toLowerCase","connectSocket","rooms","Array","from","values","ping_room","setName","runChatroom","cRoom","runNewChatroom","sendData","createChatroomDb","selected","getId","creator","members","roomId","inquiryUser","answerContact","roomMap","newRoom","default","onSendMessage","m","user_id","chatverlauf","login","joinedUser","addMessagesCallback","onlineUser","answer","window","alert","hackTime","user_self","concat","status","splice","mapId","searchValue","getIdByValue","has","panel","scrollTo","main","Profile","dialogCheckText","formData","FormData","append","newImg","userUpgrade","saveBtn","change","profileMain","colorChange","side","ColorMenu","changeColor","colorTaget","pos","leftUser","rightUser","exampleChat","colorMain","chatColor","textColor","Home","backHandleRegis","use","use4","profileUserUprade","updateImg_userDB","update_userDb","setItem","storageLogin","addUser","loadMap","remoteUser","handleKeyDown","updateWindowDimensions","frameToLogin","topbar","storage","getItem","innerWidth","documentElement","setProperty","innerHeight","removeEventListener","onKeyDown","loginLoad","updateMap","App","exact","ReactDOM","render","Fragment","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2bdc0744.chunk.js","sourcesContent":["const createImage = url =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', error => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nfunction getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n * @param {File} image - Image File url\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\n * @param {number} rotation - optional rotation parameter\n */\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  const safeArea = Math.max(image.width, image.height) * 2\n\n  // set each dimensions to double largest dimension to allow for a safe area for the\n  // image to rotate in without being clipped by canvas context\n  canvas.width = safeArea\n  canvas.height = safeArea\n\n  // translate canvas context to a central location on image to allow rotating around the center.\n  ctx.translate(safeArea / 2, safeArea / 2)\n  ctx.rotate(getRadianAngle(rotation))\n  ctx.translate(-safeArea / 2, -safeArea / 2)\n\n  // draw rotated image and store data.\n  ctx.drawImage(\n    image,\n    safeArea / 2 - image.width * 0.5,\n    safeArea / 2 - image.height * 0.5\n  )\n  const data = ctx.getImageData(0, 0, safeArea, safeArea)\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width\n  canvas.height = pixelCrop.height\n\n  // paste generated rotate image with correct offsets for x,y crop values.\n  ctx.putImageData(\n    data,\n    0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x,\n    0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y\n  )\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise(resolve => {\n    canvas.toBlob(file => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n","\n\n\nexport const createImage = url =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', error => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nexport async function getRotatedImage(imageSrc, rotation = 0) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  const orientationChanged =\n    rotation === 90 || rotation === -90 || rotation === 270 || rotation === -270\n  if (orientationChanged) {\n    canvas.width = image.height\n    canvas.height = image.width\n  } else {\n    canvas.width = image.width\n    canvas.height = image.height\n  }\n\n  ctx.translate(canvas.width / 2, canvas.height / 2)\n  ctx.rotate((rotation * Math.PI) / 180)\n  ctx.drawImage(image, -image.width / 2, -image.height / 2)\n\n  return new Promise(resolve => {\n    canvas.toBlob(file => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n","import React from 'react';\nimport './index.css';\nimport Dialog from '@material-ui/core/Dialog';\nimport { GoX } from \"react-icons/go\";\n\n\n\n\n\n\n\n         \n\n\nexport class ViewImg extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            open: this.props.open,\n            imgUrl: this.props.imgUrl\n\n\n        }\n      \n    }\n\n\n    componentDidUpdate(prevProps){\n        if(this.props.open!==prevProps.open){\n            this.setState({open:this.props.open})\n        }\n        if(this.props.imgUrl!==prevProps.imgUrl){\n            this.setState({imgUrl:this.props.imgUrl})\n        }\n    }\n\n    dialogText = ()=>{\n        return(\n            <div className='dialogCheckText'>{this.state.text}</div>\n        )\n    }\n    close = ()=>{\n        this.props.close(true)\n    }\n\n    \n\n    render(){\n        return(\n            <Dialog \n            className='imgViewDialog'\n            open={this.state.open===true}\n            fullScreen>\n                <div className='imgViewHead'><button className='chatheadBtn' onClick={()=>this.close()}><GoX size={36}/></button></div>\n                <div className='imgViewFrame'>\n                    <div className='imgViewDiv'><img className='imgViewImg' src={this.state.imgUrl} alt='...'/></div>\n                </div>\n            </Dialog>\n        ); \n    }\n}\n\nexport default ViewImg;\n\n\n\n  ","import React from 'react';\nimport './index.css';\nimport ImgView from './../dialogViewImg'\n\n\n\n\nexport class Avatar extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            name: this.props.name,\n            imgLow: this.props.imgLow,\n            imgHigh: this.props.imgHigh,\n\n            \n            imgViewOpen:false,\n            imgView:null,\n        }\n    }\n\n    \n\n    \n    componentDidUpdate(prevProps){\n        if(this.props.name!==prevProps.name){\n            this.setState({user:this.props.name})\n        }\n        if(this.props.imgLow!==prevProps.imgLow){\n            this.setState({imgLow:this.props.imgLow, imgHigh: this.props.imgHigh})\n        }\n    \n    }\n\n    imgViewClose = (e)=>{\n        if(e){\n            this.setState({imgViewOpen:false})\n        }\n\n    }\n\n    \n    \n    stringToColor = (str)=> {\n        let hash = 0\n        for (var i = 0; i < str.length; i++) {\n            hash = str.charCodeAt(i) + ((hash << 5) - hash)\n          }\n          var colour = '#';\n          for (var j = 0; j < 3; j++) {\n            var value = (hash >> (j * 8)) & 0xFF;\n            colour += ('00' + value.toString(16)).substr(-2)\n          }\n          return colour;\n    }\n    \n\n    \n\n    render(){\n        const divStyle = {\n            background: this.stringToColor(this.state.name)\n        }\n        const ava = this.state.name.charAt(0)\n        const url = this.props.imgLow\n        let lastPart = 1\n        if(url){\n            lastPart = url.substr(url.lastIndexOf('/') + 1);\n        }\n        if(!this.props.imgLow || this.props.imgLow===undefined || lastPart==='null' || lastPart==='undefined'){\n            return(\n                <div className='avatar' style = {divStyle}>{ava}</div>\n            )\n        }else{\n            return(\n                <div>\n                    <img className='avatar'  src={this.state.imgLow} alt={this.state.name} onClick={()=>this.setState({imgViewOpen: true, imgView:this.state.imgHigh})}/>\n                    <ImgView open={this.state.imgViewOpen} imgUrl={this.state.imgView} close={this.imgViewClose}/>\n                </div>\n            )\n        }\n        \n    }\n}\n\nexport default Avatar;\n\n\n\n  ","import React, { Fragment } from 'react'\nimport Cropper from 'react-easy-crop'\nimport { getOrientation } from 'get-orientation/browser'\nimport getCroppedImg from './cropImage'\nimport { getRotatedImage } from './rotateImage'\nimport './index.css'\nimport Dialog from '@material-ui/core/Dialog';\nimport { FiCamera} from \"react-icons/fi\";\nimport { GoX } from \"react-icons/go\";\nimport heic2any from \"heic2any\";\nimport DotLoader from \"react-spinners/DotLoader\";\nimport Avatar from './../avatar'\n\n\n\n\nconst ORIENTATION_TO_ANGLE = {\n  '3': 180,\n  '6':  0,\n  '8': -90,\n}\n\n\n\nclass ImgSize extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      imageSrc: null,\n      crop: { x: 0, y: 0 },\n      zoom: 2,\n      aspect: 1 / 1,\n      croppedAreaPixels: null,\n      croppedImage: null,\n      isCropping: false,\n      correctImg: null,\n      file: null,\n      heicFile:null,\n      heicLoad: false,\n    }\n  }\n\n\n  onCropChange = crop => {\n    this.setState({ crop })\n  }\n\n  onCropComplete = (croppedArea, croppedAreaPixels) => {\n    this.setState({\n      croppedAreaPixels,\n    })\n  }\n\n  onZoomChange = zoom => {\n    this.setState({ zoom })\n  }\n\n  showResult = async () => {\n    try {\n      this.setState({\n        isCropping: true,\n      })\n      const croppedImage = await getCroppedImg(\n        this.state.imageSrc,\n        this.state.croppedAreaPixels\n      )\n      this.setState({\n        croppedImage,\n        isCropping: false,\n      },()=>this.callbackCorrectImg(croppedImage))\n    } catch (e) {\n      this.setState({\n        isCropping: false,\n      },()=>this.onClose())\n    }\n  }\n\n  // callback cropped Image......\n  callbackCorrectImg = async (e) =>{\n    this.props.img(e)\n    this.setState({correctImg: e})\n    this.close()\n  }\n\n  \n\n\n  onClose = async () => {\n    this.setState({\n      croppedImage: null,\n    })\n  }\n\n  rotation = async () => {\n    if(this.state.file=== null){\n      return\n    }\n    const file = this.state.file\n      let imageDataUrl = await readFile(file)\n\n      // auto rotation.....\n      const orientation = await getOrientation(file)\n      const rotation = ORIENTATION_TO_ANGLE[orientation]\n      if (rotation) {\n        imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\n      }\n      this.setState({\n        imageSrc: imageDataUrl,\n        crop: { x: 0, y: 0 },\n        zoom: 1,\n      })\n    \n  }\n\n\n  isHeic = async file =>{\n    await heic2any({\n      blob: file,\n      toType: \"image/jpeg\",\n      multiple: false,\n      quality: 0.2\n    })\n      .then(res=> {\n        this.setState({heicFile:res},()=>this.onHeicFileChange())\n      })\n    .catch((e) => {\n      console.log('catch file')\n      console.log(e)\n    });\n    \n\n    \n  }\n\n  onHeicFileChange = async()  => {\n    const heicImg = this.state.heicFile\n    let imageDataUrl = await readFile(heicImg)\n\n    // auto rotation.....\n    const orientation = await getOrientation(heicImg)\n    const rotation = ORIENTATION_TO_ANGLE[orientation]\n    if (rotation) {\n       imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\n    }\n    this.setState({\n      file: heicImg,\n      heicLoad:false,\n      imageSrc: imageDataUrl,\n      crop: { x: 0, y: 0 },\n      zoom: 1,\n    })\n  }\n\n  onFileChange = async e => {\n    if (e.target.files && e.target.files.length > 0) {\n      const file = e.target.files[0]\n      if(file.type==='image/heic'){\n        this.setState({heicLoad:true},()=>this.isHeic(file))\n        return\n      }\n      let imageDataUrl = await readFile(file)\n\n      // auto rotation.....\n      const orientation = await getOrientation(file)\n      const rotation = ORIENTATION_TO_ANGLE[orientation]\n      if (rotation) {\n        imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\n      }\n      this.setState({\n        file: file,\n        imageSrc: imageDataUrl,\n        crop: { x: 0, y: 0 },\n        zoom: 1,\n      })\n    }\n  }\n\n\n\n  \n\n\n  close = async ()=>{\n      this.setState({imageSrc:null})\n  }\n\n  spinner = ()=>{\n    const loading = this.state.heicLoad\n    if(loading){\n      return(\n        <div className='heicSpinner'><DotLoader size={50} margin={2} color='#000000' loading={loading}/></div>\n      )\n    }else if(this.props.oldImg){\n      return(\n          <Avatar name={this.props.userName} imgUrl={this.props.imgUrl}/>\n      )\n\n    \n    }else{\n      return(\n        <button className=\"fakefile\"><FiCamera size={30}/></button>\n      )\n    }\n }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"ggg\">\n          <div className=\"picPos\">\n            <div className=\"imgPadd\">{this.spinner()}</div>\n            <input id=\"fileInput\" className=\"hidden\" type=\"file\" accept=\"image/* .heic\" multiple=\"multiple\" onChange={this.onFileChange}/>  \n            </div>\n          </div>\n          <Dialog \n          className='ImgSizeDialog'\n          open={!!this.state.imageSrc}\n          fullScreen>\n          <div className={!this.props.mobil?'imgSizeFrame':'imgSizeFrameMobil'}>\n            <div className='imgSizeHeadDiv'>\n            <button className=\"imgSizeHeadDivReturnBtnI\"\n                    onClick={()=>{this.setState({imageSrc: null})}}\n                    disabled={this.state.isCropping}>\n                    <GoX className='imgSizeHeadDivReturnIcon' size={35}/>\n            </button>\n            </div>\n            {this.state.imageSrc && (\n            <Fragment>\n              <div className=\"crop-container\">\n                <Cropper\n                  image={this.state.imageSrc}\n                  crop={this.state.crop}\n                  zoom={this.state.zoom}\n                  aspect={this.state.aspect}\n                  onCropChange={this.onCropChange}\n                  onCropComplete={this.onCropComplete}\n                  onZoomChange={this.onZoomChange}\n                  showGrid={false}\n                />\n              </div>\n                <div className=\"buttonAuswahlConImgSize\">\n                  <button className=\"buttonAuswahl\" onClick={this.showResult} disabled={this.state.isCropping}>Auswahl</button>\n                </div>\n          </Fragment>\n        )}\n        </div>\n        </Dialog>\n      </div>\n     \n    )\n  }\n}\n\nfunction readFile(file) {\n  return new Promise(resolve => {\n    const reader = new FileReader()\n    reader.addEventListener('load', () => resolve(reader.result), false)\n    reader.readAsDataURL(file)\n  })\n}\n\n\nexport default ImgSize;","import React from 'react';\nimport './index.css';\nimport Dialog from '@material-ui/core/Dialog';\n\n\n\n\n\n\n\n         \n\n\nexport class DialogFail extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            text: this.props.text,\n            open: this.props.open,\n        }\n      \n    }\n\n\n    componentDidUpdate(prevProps){\n        if(this.props.open!==prevProps.open){\n            this.setState({open:this.props.open})\n        }\n        if(this.props.text!==prevProps.text){\n            this.setState({text:this.props.text})\n        }\n    }\n\n    dialogText = ()=>{\n        return(\n            <div className='dialogCheckText'>{this.state.text}</div>\n        )\n    }\n    dialogCallback = (e)=>{\n        this.props.failChecked(e)\n    }\n\n    \n\n    render(){\n        return(\n            <Dialog \n            className='checkDialog'\n            open={this.state.open===true}\n            fullScreen>\n                <div className='dialogCheckFrame'>\n                    {this.dialogText()}\n                    <div className='placeholderDiv'></div>\n                    <div className='dialogCheckBtnDiv'>\n                        <button className='dialogCheckBtn' onClick={()=>this.dialogCallback(true)}>Ok</button>\n                    </div>\n                </div>\n            </Dialog>\n        ); \n    }\n}\n\nexport default DialogFail;\n\n\n\n  ","\nconst local = false\n\nlet num = null\nif(!local){\n    num = 0\n}else{\n    num = 1\n}\n\n\n\nconst API_PATH = ['wss://archa-backend.herokuapp.com/ws/chat/','ws://localhost:3000/ws/chat/']\n\n\n\nconst API_URL = ['https://archa-backend.herokuapp.com','http://127.0.0.1:3000']\n\n\n\n\n\n\n\nconst setUrl = API_URL[num]\nconst setPATH = API_PATH[num]\n\nconst api ={\n    setUrl,\n    setPATH\n}\n\nexport default api","\n/*\n.catch(function (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  });\n  */\n\n\nimport axios from 'axios'\nimport url from './../../switch'\n\n\n\nconst configUni = {\n  headers: {\n    'Content-Type': 'application/json'\n  },\n}\n\n// django\nconst serverUrl =  url.setUrl\nconst api = axios.create({\n    baseURL: serverUrl+'/api',\n\n})\nexport const insertUser = payload => api.post(`/user`, payload)\nexport const updateUserById = (id, payload) => api.patch(`/user/${id}`, payload)\nexport const deleteUserById = id => api.delete(`/user/${id}`)\nexport const getUserById = id => api.get(`/user/${id}`)\nexport const getUserbyEmailAndPassw = payload => api.put(`/user`, payload)\nexport const getUserbySearch = payload => api.patch(`/user`, payload)\n\n\n// Filedata Img Django Rest-framework\n///\nconst config = {\n  headers: {\n    'Content-Type': 'multipart/form-data;boundary=boundary',\n    'Content-Disposition': 'attachment;filename=file.jpg',\n  },\n}\nconst apiPic = axios.create({\n    baseURL: serverUrl+'/apiimg'\n})\nexport const insertImg = payload => apiPic.post(`/images`, payload, config)\nexport const deleteImgById = id => apiPic.delete(`/images/${id}`)\n\nconst apiChatPic = axios.create({\n  baseURL: serverUrl+'/apichatimg'\n})\nexport const insertChatImg = payload => apiChatPic.post(`/images`, payload, config)\nexport const deleteChatImgById = id => apiChatPic.delete(`/images/${id}`)\n\n// mobil api\n\nconst configMobil = {\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'multipart/form-data'\n  },\n}\nconst apiPicMobil = axios.create({\n  baseURL: serverUrl+'/apiimgmobil'\n})\nexport const insertImgMobil = payload => apiPicMobil.post(`/images`, payload, configMobil)\n\nconst apiChatPicMobil = axios.create({\nbaseURL: serverUrl+'/apichatimgmobil'\n})\nexport const insertChatImgMobil = payload => apiChatPicMobil.post(`/images`, payload)\n\n\n\nconst apiChat = axios.create({\n    baseURL: serverUrl+'/apichat',\n})\nexport const createChatroom = payload => apiChat.post(`/chatroom`, payload)\nexport const updateChatroom = (id,payload) => apiChat.put(`/chatroom/${id}`, payload)\nexport const deleteChatroomById = (id,payload) => apiChat.delete(`/chatroom/${id}`, payload)\n\n\nconst apiChats = axios.create({\n    baseURL: serverUrl+'/apichats',\n})\nexport const getNext100Chats = id => apiChats.get(`/chats/${id}`)\nexport const updateLastMess = (id,payload)=> apiChats.put(`/chats/${id}`,payload)\nexport const messReadHandleByChatroomId = (id,payload)=> apiChats.patch(`/chats/${id}`, payload)\n\n\nconst apiChatroomMap = axios.create({\n    baseURL: serverUrl+'/apichatroommap',\n})\nexport const getChatroomMapByUserId = id => apiChatroomMap.get(`/${id}`)\nexport const deleteChatroomMapByName = (id, payload) => apiChatroomMap.put(`/${id}`, payload)\n  \n\nconst apis = {\n    insertUser,\n    updateUserById,\n    deleteUserById,\n    getUserById,\n    insertImg,\n    deleteImgById,\n    createChatroom,\n    updateLastMess,\n    updateChatroom,\n    deleteChatroomById,\n    getUserbyEmailAndPassw,\n    getUserbySearch,\n    getNext100Chats,\n    getChatroomMapByUserId,\n    messReadHandleByChatroomId,\n    insertChatImg,\n    deleteChatImgById,\n    insertImgMobil,\n    insertChatImgMobil,\n    deleteChatroomMapByName\n    \n}\n\n\nexport default apis","\nimport api from './../api/index'\n\n\n\n\n\n  /////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////BILDER///////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n\n\n\n  // Speichere Bild User\n  export async function imgSave(file) {\n    const e = await api.insertImg(file).then(res=> {\n      console.log(res)\n        const imgId = res.data\n        /*\n        .id\n        .imgLow\n        .imgHigh\n        */\n        return imgId\n    })\n\n    return e\n  }\n\n  // Speichere Bild User Mobil\n  export async function imgSaveMobil(file) {\n    const e = await api.insertImgMobil(file).then(res=> {\n      console.log(res)\n        const imgId = res.data\n        /*\n        .id\n        .imgLow\n        .imgHigh\n        */\n        return imgId\n    })\n\n    return e\n  }\n\n\n  // lösche Bild. User ....\n  export async function deleteImg(id){\n    const e = await api.deleteImgById(id).then(res=>{\n      if(res){\n        console.log('bild gelöscht !')\n        return res.success\n      }\n    })\n    return e\n  }\n\n\n  // Speichere Bild Chats\n  export async function chatImgSave(file) {\n    const e = await api.insertChatImg(file).then(res=> {\n      console.log(res)\n        const imgId = res.data\n        /*\n        .id\n        .imgLow\n        .imgHigh\n        */\n        return imgId\n    })\n\n        \n    \n    return e\n  }\n\n\n  // Speichere Bild Chats\n  export async function chatImgSaveMobil(file) {\n    const e = await api.insertChatImgMobil(file).then(res=> {\n      console.log(res)\n        const imgId = res.data\n        /*\n        .id\n        .imgLow\n        .imgHigh\n        */\n        return imgId\n    })\n\n        \n    \n    return e\n  }\n\n\n  // lösche Bild Chats ....\n  export async function deleteChatImg(id){\n    const e = await api.deleteImgById(id).then(res=>{\n      if(res){\n        console.log('bild gelöscht !')\n        return res.success\n      }\n    })\n    return e\n  }\n\n\n\n\n\n\n\n\n/////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////USER///////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n\n\n\n  // Speichere neuen USer\nexport async function newUserSave(payload) {\n    const e = await api.insertUser(payload).then(res => {\n      console.log('res- new User')\n      console.log(res)\n      const userDb = res.data\n      return userDb\n    })\n    return e\n  }\n\n  // suche user nach id\n  export async function getUser(id){\n    const e = await api.getUserById(id).then(res=>{\n      if(res.data.success){\n        const user = res.data.data\n        return user\n      }else{\n        return false\n      }\n      \n    })\n    return e\n  }\n\n\n  // suche user nach Email und password\n  export async function getUserbyEAndP(payload){\n    const e = await api.getUserbyEmailAndPassw(payload).then(res=>{\n      if(!res.data.userName){\n        return false\n      }else{\n        const user = res.data\n        console.log(user)\n        return user\n      }\n      \n    })\n    return e\n  }\n\n  \n\n  // suche .....\n  export async function getSearch(search){\n    const e = await api.getUserbySearch(search).then(res=>{\n      if(res.data.success){\n        const user = res.data.users\n        console.log(user, ' gefunden !')\n        return user\n      }else{\n        return false\n      }\n      \n    })\n    return e\n  }\n\n   // update User....\n  export async function updateUser(id,payload){\n    const e = await api.updateUserById(id, payload).then(res=>{\n      console.log(res)\n      if(res.data.success){\n        const user = res.data.update\n        return user\n      }else{\n        return false\n      }\n      \n    })\n    return e\n  }\n\n\n  // lösche User.....\n  export async function deleteUser(id){\n    const e = await api.deleteUserById(id).then(res=>{\n      if(res){\n        return res.success\n      }\n    })\n    return e\n  }\n\n\n\n\n\n\n\n\n\n\n\n/////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////Chatroom///////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n\n  // erstelle Chatroom\n  export async function createChatroom(payload) {\n    const chatroom = await api.createChatroom(payload).then(res => {\n      const chatroomData = res.data\n      return chatroomData\n    })\n    return chatroom\n  }\n\n\n  \n\n   // update Chatroom....\n   export async function updateChatroom(id,payload){\n    const e = await api.updateChatroom(id, payload).then(res=>{\n      if(res.data.success){\n        return true\n      }else{\n        return false\n      }\n      \n    })\n    return e\n  }\n \n\n  \n\n\n\n\n/////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////Chatroom...Map///////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////////////////////\n\n  export async function getCharoomList(id){\n    const chatroomMap = new Map()\n    console.log('lade liste chatroom')\n    await api.getChatroomMapByUserId(id).then(res=> {\n      const resData = res.data.chatrooms\n      console.log(resData)\n      const chatrooms = Object.keys(resData)\n      console.log(chatrooms)\n      chatrooms.map(e=> chatroomMap.set(e, resData[e]))\n    })\n    return chatroomMap\n    \n  }\n\n  export async function get100Mess(chatroomId){\n    const chats = await api.getNext100Chats(chatroomId).then(res=> {return res.data})\n    if(chats){\n      return chats\n    }\n    \n  }\n\n  export async function deleteChatroomMapByName(userId,chatroomName){\n    console.log(userId, chatroomName)\n    const cMap = await api.deleteChatroomMapByName(userId, chatroomName).then(res=>{\n      console.log('delete chatrrom    ', res.data)\n      return res.data\n    })\n    if(cMap){\n      return cMap\n    }\n    \n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n  const ctrl =  {\n    imgSave,\n    newUserSave,\n    getUser,\n    getUserbyEAndP,\n    getSearch,\n    updateUser,\n    createChatroom,\n    updateChatroom,\n    deleteImg,\n    deleteUser,\n    getCharoomList,\n    get100Mess,\n    chatImgSave,\n    deleteChatImg,\n    chatImgSaveMobil,\n    imgSaveMobil,\n    deleteChatroomMapByName\n    \n\n  }\n  export default ctrl","\n\n// colors\nconst highBlue = '#5ba3c7'\nconst grey = '#f0f0f0'\nconst pink = '#e8c8c8'\nconst green = '#a3c49f'\nconst orange = '#ebd7b7'\nconst white = '#ffffff'\nconst black = '#212121'\n\nconst accentColor = '#2e96e0'\n\nconst color = {highBlue, grey, pink, green, orange, white, black, accentColor } \n\nexport default color\n","import React from 'react';\nimport './index.css';\nimport { MdKeyboardArrowLeft, MdKeyboardArrowRight } from \"react-icons/md\";\nimport ImgSize from './../helpers/imgClass'\nimport DotLoader from \"react-spinners/DotLoader\"\nimport DialogFail from './../helpers/dialogFail'\nimport ctrl from './../api_controller'\nimport color from './../helpers/colors'\n\n\n\n\nexport class Regis extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            step: 1,\n            email:'',\n            phone:'',\n            userName:'',\n            password:'',\n            img:'',\n            imgUrl:'',\n            noImg: true,\n            imgId: null,\n            insertNewUser: false,\n            openDialogFail: false,\n            text: '',\n            // standart Farbeinstellung\n            color: {\n                backgroundColor: color.white,\n                bubbleColor: color.highBlue,\n                fontColor: color.white,\n                fontColor2: color.black,\n                bubbleColor2: color.grey\n            },\n\n                    \n        }\n        this.regisSteps = this.regisSteps.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.navibuttons = this.navibuttons.bind(this)\n        this.profilImg = this.profilImg.bind(this)\n        this.insertNewUser = this.insertNewUser.bind(this)\n    }\n\n\n    \n    \n    back=(e)=>{\n        this.props.back(e)\n    }\n    handleChange = ({ target }) => {\n        this.setState({ [target.name]: target.value })\n    }\n    croppedImg = async (e)=>{ \n        const picName = this.state.userName\n        let file = await fetch(e)\n        .then(r => r.blob())\n        .then(blobFile => new File([blobFile], picName, {type: \"image/jpeg\", name: 'file' }))\n        this.setState({\n            img:file,\n            imgUrl:e,\n            noImg:false, \n        })\n    }\n\n\n\n    insertImg = async()=>{\n        // neuer User ohne Profilbild......\n        if(!this.state.imgUrl){\n            const {userName, email, password, phone, color} = this.state\n            const payload = {userName, email, password, phone, color}\n            if(userName===''|| email===''|| password===''){\n                const txt = 'um sich anzumelden, müssen die Felder Email, Benutzernamen und passwort ausgefüllt sein!'\n                return this.setState({text: txt, openDialogFail:true})\n            }\n            const user = await ctrl.newUserSave(payload)\n            if (user){\n                if(user.success ===false){\n                \n                    const txt = 'Ihre email: '+email+' wird schon von eine anderen Benutzer benutzt'\n                    return this.setState({text: txt, openDialogFail:true})\n                }\n                return this.props.newUser(user)\n            }\n        }\n        \n        const img = this.state.img\n        const storageImg = await ctrl.imgSave(img)\n        if(storageImg){\n            this.insertNewUser(storageImg)\n        }\n    \n    }\n\n    insertNewUser= async(res)=>{\n        const imgLow = res.imgLow\n        const imgHigh = res.imgHigh\n        const imgId = res.id\n        const {userName, email, password, phone, color} = this.state\n        const payload = {userName, email, password, phone, imgId, imgLow, imgHigh, color}\n        const userDb = await ctrl.newUserSave(payload)\n        if (userDb){\n            if(!userDb.id){\n                const txt = 'Ihre email: '+userDb.email+' wird schon von eine anderen Benutzer benutzt'\n                return this.setState({text: txt, openDialogFail:true})\n            }else{\n                this.setState({insertNewUser:true})\n                this.props.newUser(userDb)\n            }\n            \n        }\n\n\n    }\n\n\n\n    profilImg(){\n        if(this.state.noImg){\n            return(\n                <div className=\"regisImgDiv\">\n                    <ImgSize img={this.croppedImg} mobil={this.props.mobil} />\n                </div>\n            )\n        }\n        return(\n            <div className=\"regisImgDiv\">\n                <img className='regisImg' src={this.state.imgUrl} alt={this.state.userName}></img>\n                <button className='regisImgBtn' onClick={()=>this.setState({noImg:true})}>x</button>\n            </div>\n        );                    \n    }\n    \n\n    regisSteps(){\n        switch(this.state.step){\n            case 1:\n                return(\n                    <div className='regisStepsDiv'>\n                        <div className='loginframeTxt2'>Telefonnummer:</div>\n                        <div className='regisInputDiv'><input className='regisInput' type='number' name='phone' value={this.state.phone} onChange={this.handleChange}></input></div>\n                        <div className='loginframeTxt2'>oder</div>\n                        <div className='loginframeTxt2'>E-mail:</div>\n                        <div className='regisInputDiv'><input className='regisInput' type='email' name='email' value={this.state.email} onChange={this.handleChange}></input></div>\n                    </div>\n                )\n            case 2:\n                return(\n                    <div className='regisStepsDiv'>\n                        {this.profilImg()}\n                        <div className='loginframeTxt2'>Benutzername:</div>\n                        <div className='regisInputDiv'><input className='regisInput' type='text' name='userName' value={this.state.userName} onChange={this.handleChange}></input></div>\n                        <div className='loginframeTxt2'></div>\n                        <div className='loginframeTxt2'>Passwort:</div>\n                        <div className='regisInputDiv'><input className='regisInput' type='text' name='password' value={this.state.password} onChange={this.handleChange}></input></div>\n                    </div>\n                )\n            case 3:\n                const loading = this.state.insertNewUser\n                return(\n                    <div className='regisStepsDiv'>\n                        <div className='loginframeTxt2'>erstellt</div>\n                        <div className='loginframeTxt2'>Benutzer</div>\n                        <div className='heicSpinner'><DotLoader size={50} margin={2} color='#639cdd' loading={loading}/></div>\n                    </div>\n                )\n            default:\n                return(null)\n        }\n    }\n\n    navibuttons(){\n        if(this.state.step===1){\n            return(\n                <div className=\"regisStepsBtnDiv\">\n                    <button className=\"regisStepsBtnBack\" onClick={()=>{this.state.step===1?this.back(true):this.setState({step: this.state.step - 1})}}>\n                        <MdKeyboardArrowLeft size={40}/>\n                        <div className=\"regisStepsTextBtn\">zurück</div>\n                    </button>   \n                    <button className=\"regisStepsBtnNext\" onClick={()=>{this.setState({step: this.state.step + 1})}}>\n                        <div className=\"regisStepsTextBtn\">weiter</div>\n                        <MdKeyboardArrowRight size={40}/>\n                    </button>  \n                </div> \n            )\n        }else if(this.state.step===2){\n            return(\n                <div className=\"regisStepsBtnDiv\">\n                    <button className=\"regisStepsBtnBack\" onClick={()=>{this.setState({step: this.state.step - 1})}}>\n                        <MdKeyboardArrowLeft size={40}/>\n                        <div className=\"regisStepsTextBtn\">zurück</div>\n                    </button> \n                    <button className=\"regisStepsBtnNext\" onClick={()=>{this.setState({step: this.state.step + 1 },()=>this.insertImg())}}>\n                        <div className=\"regisStepsTextBtn\">erstellen</div>\n                        <MdKeyboardArrowRight size={40}/>\n                    </button> \n                </div> \n            )\n        }else{\n            \n        }\n    }\n    \n\n    userFail = ()=>{\n        this.setState({openDialogFail:false, step:1})\n    }\n\n    \n\n    render(){\n        return(\n            <div className='regisScreen'>\n                \n                {this.regisSteps()}\n                {this.navibuttons()}\n                \n                <DialogFail text={this.state.text} open={this.state.openDialogFail} failChecked={this.userFail}/>\n            </div>\n        );\n\n         \n\n    }\n}\n\n\nexport default Regis;\n\n\n\n  ","import React from 'react';\nimport './index.css';\nimport Dialog from '@material-ui/core/Dialog';\n\n\n\n\n\n\n\n         \n\n\nexport class DialogCheck extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            text: this.props.text,\n            open: this.props.open,\n\n\n        }\n      \n    }\n\n\n    componentDidUpdate(prevProps){\n        if(this.props.open!==prevProps.open){\n            this.setState({open:this.props.open})\n        }\n        if(this.props.text!==prevProps.text){\n            this.setState({text:this.props.text})\n        }\n    }\n\n    dialogText = ()=>{\n        return(\n            <div className='dialogCheckText'>{this.state.text}</div>\n        )\n    }\n    dialogCallback = (e)=>{\n        this.props.checked(e)\n    }\n\n    \n\n    render(){\n        return(\n            <Dialog \n            className='checkDialog'\n            open={this.state.open===true}\n            fullScreen>\n                <div className='dialogCheckFrame'>\n                    {this.dialogText()}\n                    <div className='placeholderDiv'></div>\n                    <div className='dialogCheckBtnDiv'>\n                        <button className='dialogCheckBtn' onClick={()=>this.dialogCallback(true)}>ja</button>\n                        <button className='dialogCheckBtn' onClick={()=>this.dialogCallback(false)}>nein</button>\n                    </div>\n                </div>\n            </Dialog>\n        ); \n    }\n}\n\nexport default DialogCheck;\n\n\n\n  ","import React from 'react';\nimport './index.css';\nimport { Popover  } from '@material-ui/core';\nimport Avatar from './../../helpers/avatar'\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport DialogCheck from './../../helpers/dialogCheck'\nimport ctrl from './../../api_controller'\n\n\n\nexport class MenuTab extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            open: this.props.open,\n            imgUrl: this.props.imgHigh,\n            user: this.props.user,\n            useContact: this.props.useContact,\n            dialogCheck: false,\n            text:'Achtung !!!, der Chatroom wird mit allen Daten gelöscht',\n            userDelete: null\n        }\n      \n    }\n\n\n    componentDidUpdate(prevProps){\n        if(this.props.open!==prevProps.open){\n            this.setState({open:this.props.open})\n        }\n        if(this.props.user!==this.state.user){\n            this.setState({user:this.props.user})\n        }\n    }\n\n    componentWillUnmount(){\n        this.setState({text:'', userDelete: null})\n    }\n\n    close = ()=>{\n        this.props.close(true)\n    }\n    chatroomClose = (deleteId)=>{\n        this.props.chatroomClose(deleteId)\n        this.props.close(true)\n    }\n\n    openSelect = (e)=>{\n        this.props.openSelect(e)\n    }\n\n    logoutHandle = ()=>{\n        this.close()\n        this.props.logout(true)\n    }\n\n    DialogCheckText = (n, id)=>{\n        const text = <div >Achtung !   der Chatroom mit <div style={{fontWeight: \"bold\"}}>'{n}'</div> und der gesamte Inhalt werden gelöscht !</div>\n        this.setState({text: text, dialogCheck: true, userDelete: id })\n    }\n\n\n    deleteUserBtn = ()=>{\n        const cUserId = this.props.useContact \n        const cMap = this.props.chatroomMap\n        const allMap = new Map([...cMap])\n        if(cUserId===null || allMap.size===0){\n            return null\n        }\n        const cName = allMap.get(cUserId).userName\n        const cPic = allMap.get(cUserId).imgLow\n        return(\n            <button className='Menubtnchatroomuser' onClick={()=>this.DialogCheckText(cName, cUserId)}>\n                        <div className='Menuchatroomuser'>\n                        \n                            <div className='MenuchatroomuserDiv'>\n                            <div className='MenuTrashIconDiv'> <FaTrashAlt className='trashMenuIcon' size={20}/></div>\n                                <div className=\"MenuchatroomImgDiv\">\n                                    <Avatar name={cName} imgUrl={cPic}/>\n                                </div>\n                                 <div className='MenuchatroomProfilName'>{cName}</div>\n                            </div>\n                        </div>\n                        </button>\n        )\n    }\n    \n    callbackDialogcheck = async(e)=>{\n        if(e){\n            console.log('huhu')\n            const userId = this.state.user.id\n            this.setState({dialogCheck: false,})\n            const cMap = this.props.chatroomMap\n            const allMap = new Map([...cMap])\n            const cUserId = this.props.useContact \n            const cName = allMap.get(cUserId).name\n            const payload = {\n                chatroomName: cName\n            }\n            console.log(cName)\n            const userUpdate = await ctrl.deleteChatroomMapByName(userId, payload)\n            if(userUpdate){\n                console.log(userUpdate)\n                return\n                this.setState({dialogCheck: false},()=>this.props.updateUserCallback(userUpdate))\n                this.chatroomClose(cName)\n                \n            }\n        }else{\n            this.setState({dialogCheck: false,})\n        }\n       \n        \n    }\n\n    clearStarage=()=>{\n        localStorage.removeItem('login_archa')\n        this.logoutHandle()\n    }\n\n    \n\n\n\n    \n\n    render(){\n        /* openSelect....... \n\n            => 5 === openProfile\n            => 6 === openSudoku\n\n\n        */\n        return(\n            <Popover \n            id='menu-topbar'\n            anchorEl={this.props.anchorEl}\n            getContentAnchorEl={null}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            onBackdropClick= {()=>this.close()}\n            open={this.state.open===true}\n             >\n                <div className={!this.props.mobil?'topbarDropdownFrame':'topbarDropdownFrameMobil'}>\n                    <button className='topbarDropdownBtn' onClick={()=>this.openSelect(2)} >Profil</button>\n                    <button className='topbarDropdownBtn' onClick={()=>this.openSelect(3)} >Farben</button>\n                    <button className='topbarDropdownBtn' >über Archa</button>\n                    <button className='topbarDropdownBtn' >Impressum</button>\n                    {!this.props.useContact?<button className='topbarDropdownBtn' >löschen</button>:this.deleteUserBtn()}\n                    <button className='topbarDropdownBtn' onClick={()=>this.clearStarage()}>Abmelden </button>\n                    <button className='topbarDropdownBtn' onClick={()=>this.logoutHandle()}>Ausloggen</button>\n                    <DialogCheck text={this.state.text} open={this.state.dialogCheck} checked={this.callbackDialogcheck}></DialogCheck>\n                </div>\n            </Popover>\n        ); \n    }\n}\n\nexport default MenuTab\n\n\n\n  ","\nimport path from './../../switch'\n//const API_PATH = 'ws://localhost:3000/ws/chat/';\nconst API_PATH = path.setPATH\n\nclass WebSocketService {\n  static instance = null;\n  callbacks = {};\n\n  static getInstance() {\n    if (!WebSocketService.instance) {\n      WebSocketService.instance = new WebSocketService();\n    }\n    return WebSocketService.instance;\n  }\n\n  constructor() {\n    this.socketRef = null;\n  }\n\n\n  connect(room) {\n    const path = API_PATH+room+'/';\n    this.socketRef = new WebSocket(path);\n    this.socketRef.onopen = (e) => {\n      console.log(e)\n      console.log('WebSocket open');\n    };\n    this.socketRef.onmessage = e => {\n      this.socketNewMessage(e.data);\n    };\n\n    this.socketRef.onerror = e => {\n      console.log(e.message);\n    };\n    this.socketRef.onclose = () => {\n      console.log(\"WebSocket closed let's reopen\");\n      //this.connect();\n    };\n  }\n  disconnect(){\n    console.log('websocket schllesen')\n    this.socketRef.close()\n  }\n\n  socketNewMessage(data) {\n    const parsedData = JSON.parse(data);\n    const command = parsedData.command;\n    if (Object.keys(this.callbacks).length === 0) {\n      return;\n    }\n    if (Object.keys(this.callbacks).length > 0) {\n    }\n    if (command === 'messages') {\n      console.log(command, 'socket')\n      this.callbacks[command](parsedData.messages);\n    }\n    if (command === 'new_message') {\n      console.log('socket_new_mess ')\n      this.callbacks[command](parsedData.message);\n    }\n    if (command === 'new_room') {\n      console.log('socket_new_room')\n      this.callbacks[command](parsedData.message);\n    }\n    if (command === 'create_room') {\n      console.log('socket_create_room')\n      this.callbacks[command](parsedData.message);\n    }\n    if (command === 'read_message') {\n      console.log('socket_read_message')\n      this.callbacks[command](parsedData.message);\n    }\n    if (command === 'init_chat') {\n      console.log('socket_status => user init')\n      this.callbacks[command](parsedData.message);\n    }\n    if (command === 'user_status') {\n      console.log('socket_status => user status')\n      this.callbacks[command](parsedData.message);\n    }\n    if (command === 'hacking') {\n      console.log('socket_status => keyboard hack')\n      this.callbacks[command](parsedData.message);\n    }\n  }\n\n  initChatUser(user) {\n    //console.log('initChatUser  => : ', user)\n    this.sendMessage({ command: 'init_chat', user });\n  }\n\n  fetchMessages(username) {\n    //console.log('fetchMessage  => : ', username)\n    this.sendMessage({ command: 'fetch_messages', username: username });\n  }\n\n  newChatMessage(message) {\n    message.command = 'new_message'\n    //console.log('newChatMessage  => : ', message, '=> send !')\n    this.sendMessage(message); \n     \n  }\n\n  onEnterRoom(message) {\n    message.command = 'read_message'\n    //console.log('on Enter Chatroom  => : ', message, '=> send !')\n    this.sendMessage(message); \n     \n  }\n\n  contactPing(message) {\n    message.command = 'contact_ping'\n    //console.log('newPingMessage  => : ', message, '=> send !')\n    this.sendMessage(message); \n     \n  }\n\n  answerPing(message) {\n    message.command = 'answer_ping'\n    //console.log('newPingMessage  => : ', message, '=> send !')\n    this.sendMessage(message); \n  }\n\n  statusUser(message) {\n    message.command = 'user_status'\n    //console.log('online  /  offline status  => : ', message, '=> send !')\n    this.sendMessage(message); \n     \n  }\n\n  hacking(message) {\n    message.command = 'hacking'\n    //console.log('keyboard hack => : ', message, '=> send !')\n    this.sendMessage(message); \n     \n  }\n\n  addCallbacks(newMessageCallback) {\n    this.callbacks['new_message'] = newMessageCallback;\n    this.callbacks['new_room'] = newMessageCallback;\n    this.callbacks['create_room'] = newMessageCallback;\n    this.callbacks['read_message'] = newMessageCallback;\n    this.callbacks['init_chat'] = newMessageCallback;\n    this.callbacks['user_status'] = newMessageCallback;\n    this.callbacks['hacking'] = newMessageCallback;\n  }\n  \n  sendMessage(data) {\n    try {\n      this.socketRef.send(JSON.stringify({ ...data }));\n    }\n    catch(err) {\n      console.log(err.message);\n    }  \n  }\n\n  state() {\n    return this.socketRef.readyState;\n  }\n\n   waitForSocketConnection(callback){\n    const socket = this.socketRef;\n    const recursion = this.waitForSocketConnection;\n    setTimeout(\n      function () {\n        if (socket.readyState === 1) {\n          console.log(\"Connection is made\")\n          if(callback != null){\n            callback();\n          }\n          return;\n\n        } else {\n          console.log(\"wait for connection...\")\n          recursion(callback);\n        }\n      }, 1); // wait 5 milisecond for the connection...\n  }\n\n}\n\nconst WebSocketInstance = WebSocketService.getInstance();\n\nexport default WebSocketInstance;\n","\nimport WebSocketInstance from './WebSocket'\n\n\nconst waitForSocketConnection = (callback)=> {\n  const component = this;\n  setTimeout(\n    function () {\n      // Check if websocket state is OPEN\n      if (WebSocketInstance.state() === 1) {\n        console.log(\"Connection is made\")\n        callback();\n        return;\n      } else {\n        console.log(\"wait for connection...\")\n        component.waitForSocketConnection(callback);\n      }\n  }, 15000); // wait 100 milisecond for the connection...\n}\n\n\nexport default function () {\n  console.log('connection ws')\n  \n  \n\n  function callbackPool(messagesCallback) {\n      WebSocketInstance.addCallbacks(messagesCallback)\n    \n  }\n\n  function connect(roomName){\n    WebSocketInstance.connect(roomName)\n  }\n\n  function disconnect(){\n    console.log('hier')\n    WebSocketInstance.disconnect()\n  }\n\n  function unregisterHandler() {\n  }\n  function register(user) {\n    waitForSocketConnection(()=>\n    \n      WebSocketInstance.initChatUser(user)\n    )\n  }\n\n\n  function onEnterRoom(chatroomName, user) {\n    const messageObject = {\n      room: chatroomName,\n      user: user\n    };\n    WebSocketInstance.onEnterRoom(messageObject);\n  }\n\n  function message(chatroomName, msg, imgHigh, imgLow, imgId, userId) {\n    const messageObject = {\n      author: userId,\n      text: msg,\n      room: chatroomName,\n      imgHigh: imgHigh,\n      imgLow: imgLow,\n      imgId: imgId\n    };\n    WebSocketInstance.newChatMessage(messageObject);\n  }\n\n  function pingContact(contact) {\n    const messageObject = contact\n    messageObject.text = 'new_room'\n    \n    WebSocketInstance.contactPing(messageObject);\n  }\n\n  function pingAnswer(contact) {\n    const messageObject = contact\n    messageObject.text = 'create_room'\n    \n    WebSocketInstance.answerPing(messageObject);\n  }\n\n  function userStatus(contact) {\n    const messageObject = contact\n    messageObject.text = 'user_status'\n    \n    WebSocketInstance.statusUser(messageObject);\n  }\n\n  function hack(chatroomName, charLength, author) {\n    const messageObject = {\n      text: 'hacking',\n      author,\n      charLength,\n      chatroomName,\n    };\n    WebSocketInstance.hacking(messageObject);\n\n  }\n\n\n  return {\n    register,\n    message,\n    hack,\n    callbackPool,\n    unregisterHandler,\n    disconnect,\n    connect,\n    pingContact,\n    pingAnswer,\n    onEnterRoom,\n    userStatus\n  }\n}","import React from 'react';\nimport './index.css';\nimport { MdMenu } from \"react-icons/md\";\nimport MenuClass from './dialogMenu'\nimport Avatar from './../helpers/avatar'\nimport socket from './../socket/socket'\nimport color from './../helpers/colors'\nimport { ClassicSpinner } from \"react-spinners-kit\";\n\n\n\n\n\nexport class Topbar extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            user: this.props.user,\n            imgUrl: null,\n            build:false,\n            dialogCheck:false,\n            inviIndex: null,\n            dropdown: false,\n            client: socket(),\n            accentColor: color.accentColor,\n            s3upload: false,\n\n        }\n        this.divRef = React.createRef();\n        this.userData = this.userData.bind(this)\n    }\n\n\n    \n    componentDidUpdate(prevProps, prevState){\n        if(this.props.user!==prevState.user){\n            if(this.props.user!==null){\n               this.setState({user:this.props.user, build:true})\n            }else{\n               this.setState({\n                   user:this.props.user, \n                   build:false,\n                   imgUrl: null,\n                   invitUserName:[],\n                   invitUserImgUrl:[],\n                   dialogCheck:false,\n                   inviIndex: null,\n                   dropdown: false,\n                   useContact: this.props.useContact,\n                   anchorEl: null\n                })\n            }\n           \n        }\n    }\n\n    \n\n    \n\n   \n    getImg = async()=>{\n        if(this.state.user===null){\n            this.setState({build:false})\n            return\n        }\n        if(!this.props.user.imgUrl){\n            this.setState({build:true})\n        }\n        const imgUrl = this.props.user.imgLow\n        this.setState({imgUrl:imgUrl})\n    }\n\n\n    \n\n    \n    updateUser = (e)=>{\n        this.props.updateUserHome(e)\n    }\n\n\n    \n    menuClose = (e)=>{\n        if(e){\n            this.setState({dropdown:false})\n        }\n    }\n    chatroomClose= (e)=>{\n        if(e){\n            this.props.chatroomClose(e)\n        }\n    }\n    logoutHandle = (e)=>{\n        this.setState({build:false})\n        this.props.logout(e)\n    }\n    openSelect = (e)=>{\n        this.setState({dropdown:false})\n        this.props.openSelect(e)\n    }\n\n    \n\n    dialogCallback = (e)=>{\n        if(e){\n            this.setState({dialogCheck:false},()=>this.addChatUser(this.state.inviIndex))\n        }else{\n            this.setState({dialogCheck:false})\n        }\n    }\n    handleClickDropdown = ()=> {\n        this.setState({ anchorEl: this.divRef.current, dropdown:true });\n      };\n\n    \n\n    userData(){\n        const user = this.props.user\n        if(this.state.build){\n            return(\n                <div className='topScreenDiv'>\n                    <div className='topScreenLeftSide'>\n                        <div className='topSreenAppName'>ARCHA</div>\n                    </div>\n                    <div className='topScreenRightSide'>\n                        <div className='topScreenUser' style={{color: color.accentColor}}>{this.state.user.userName}</div>\n                        \n                        <div className=\"topScreenImgDiv\">\n                            <Avatar name={user.userName} imgLow={this.state.user.imgLow} imgHigh={this.state.user.imgHigh}/>\n                        </div>\n                        <div ref={this.divRef}>\n                        <button \n                            className='topScreenMenuBtn' \n                            aria-owns={this.state.anchorEl ? \"menu-topbar\" : null}\n                            aria-haspopup=\"true\"\n                            onClick={()=>this.handleClickDropdown()}><MdMenu size={35}/>\n                        </button>\n                        </div>\n                    </div>\n                </div>\n            )\n        \n        }else{\n            return(\n                <div className='topScreenDiv'>\n                    <div className='topScreenLeftSide'>\n                        <div className='topSreenAppName'>ARCHA</div>\n                    </div>\n                    <div className='topScreenRightSide'>\n                        <div className='topScreenUser'></div>\n                        <div className=\"topScreenImgDiv\">\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n\n   }\n\n\n    \n\n    render(){\n        return(\n            <div className='topScreen'>\n                {this.userData()}\n                <MenuClass \n                    open={this.state.dropdown} \n                    close={this.menuClose} \n                    chatroomClose={this.chatroomClose}\n                    useContact={this.props.useContact} \n                    logout={this.logoutHandle} \n                    user={this.props.user} \n                    anchorEl={this.state.anchorEl}\n                    updateUserCallback={this.updateUser} \n                    mobile={this.props.mobil}\n                    chatroomMap={this.props.chatroomMap}\n                    openSelect={this.openSelect}\n                    \n                />\n            </div>\n        ); \n    }\n}\n\nexport default Topbar;\n\n\n\n  ","import React from 'react';\nimport './chatverlauf.css'\nimport { ClassicSpinner } from \"react-spinners-kit\";\nimport ImgView from './../helpers/dialogViewImg'\nimport { FaCheck } from \"react-icons/fa\";\nimport emojiRegex from './emoji/emojiRegex'\nimport ImageLoader from 'react-load-image';\n\n\n\nfunction Preloader() {\n    return <div className='heicSpinnerChat'><ClassicSpinner size={50} margin={2} color='#000000' loading={true}/></div>;\n}\n\n\n\nfunction ListItem(props) {\n    return (<div>\n                <div className= \"chatValue\">{props.value}</div>\n            </div>);\n}\n\n\n\nexport class Chatbox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            start:false,\n            input:'',\n            date: new Date(),\n            imgViewOpen:false,\n            imgView:null,\n            imgLoading: 0,\n            chatsLength: this.props.chatroom.chat.length,\n            imgCount: this.props.chatroom.chat.filter(e => e.imgLow!==null)\n\n        }\n        this.backhandle = this.backhandle.bind(this)    \n                   \n    }\n\n\n    \n    componentDidUpdate(prevProps, prevState){  \n        if(this.props.chatroom.chat.length!==prevState.chatsLength){\n            console.log('neue nachtricht')\n            setTimeout(()=>this.scrollToBottom('smooth'), 100)\n        }\n        \n    }\n    \n\n    componentDidMount() {\n        setTimeout(()=>this.scrollToBottom('auto'), 100)\n        console.log('======> nachtrichten lesen')\n        \n  \n    }\n\n    handleScroll = (event) =>{\n        var node = event.target;\n        const bottom = node.scrollHeight - node.scrollTop === node.clientHeight;\n        if (bottom) {\n            console.log('am boden');\n        }\n        if(node.scrollTop ===0){\n            console.log('oben');\n            this.get100Mess()\n        }\n    }\n    \n   \n    get100Mess = async()=>{\n        return\n        /*\n        const messArr = await ctrl.get100Mess(this.props.chatroom.chatroomId)\n        if(messArr && messArr.length > 0){\n            messArr.reverse()\n            const messD = this.props.chatHistory[0].date\n            const messDLast = messArr[messArr.length - 1].date\n            if(messD===messDLast){\n                console.log('alle chats geladen')\n                return\n            }\n            messArr.map(e=>this.props.chatHistory.unshift(e))\n            this.setState({start:true})\n        \n        }\n        */\n        \n    }\n    // Dialog schließen ===>\n    backhandle = (e) => {\n            this.props.closeMess(e)\n    }\n\n\n    scrollToBottom = (e) => {\n        this.messagesEnd.scrollIntoView({ behavior: e, block: 'nearest', inline: 'end' });\n    }\n    imgViewClose = (e)=>{\n        if(e){\n            this.setState({imgViewOpen:false})\n        }\n\n    }\n\n    \n     \n\n    imgChatBlase = (i,user)=>{\n        if(i.imgId && i.imgLow){\n            return(\n                <ImageLoader\n                src={i.imgLow}\n                >\n                    <img className={user? 'imgBlase' : 'imgBlaseChatUser'}  onClick={()=>this.setState({imgViewOpen: true, imgView:i.imgLow})}   alt='...' />\n                    <div>Error!</div>\n                    <Preloader/>\n                </ImageLoader>\n                \n            )\n        }\n            \n    }\n\n    singleEmoji = (message)=>{\n        if (message.length===2 && message.match(emojiRegex().join('|'))) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    checkLink=(mess)=>{\n        if(mess.startsWith('https://')||mess.startsWith('http://') ){\n            return(\n                <div>\n                    <a href={mess} target=\"_blank\">{mess}</a>\n                </div>\n            )\n        }else{\n            return mess\n        }\n    }\n    \n      \n    chatVerlauf = ()=> {\n        const dateformat = { \n            //month: 'short', \n            //day: 'numeric',\n            hour12: false,\n            hour:  \"2-digit\",\n            minute: \"2-digit\"\n        };\n        const dateformat2 = { \n            month: 'short', \n            day: 'numeric',\n            //hour12: false,\n            //hour:  \"2-digit\",\n            //minute: \"2-digit\"\n        };\n        \n        if(this.props.chatroom.chat===[]){\n            return null\n        }\n        let user = true\n        const lines = [];\n        let dateLine = ''\n        for(let i of this.props.chatroom.chat){\n            if(i.message || i.imgLow){\n                if(i.author===this.props.user.id){\n                    user = false\n                }else{\n                    user = true\n                }\n                let read = 2\n                if(i.read){\n                    read = 3\n                }\n                if(new Date(i.date).toLocaleString('de-DE', dateformat2)!==dateLine){\n                    dateLine = new Date(i.date).toLocaleString('de-DE', dateformat2)\n                    lines.push(\n                        <div className='chatDateLine' style={this.props.user.color.backgroundColor==='rgb(93, 100, 102)'? null:{color:'black', borderBottomColor: 'black'}}>{dateLine}</div>\n                    )\n                }\n                lines.push(\n                    <div className={user? 'chatinList' : 'chatinListChatUser'}>\n                        <div className={user? 'chatblase' : 'chatblaseChatUser'} style={user?{background:this.props.user.color.bubbleColor2}:{background:this.props.user.color.bubbleColor}}>\n                            <div className='chatMessage'>\n                                {i.imgId?<div>{this.imgChatBlase(i,user)}</div>:null}\n                                <div className={user? 'chatMessageBlase' : 'chatMessageBlaseChatUser'} style={user?{color:this.props.user.color.fontColor2}:{color:this.props.user.color.fontColor}} >\n                                {this.singleEmoji(i.message)?<div className='singleEmoji'>{i.message}</div>:this.checkLink(i.message)}</div>\n                                <div className={user? 'chatdate' : 'chatdateChatUser'} >\n                                    <div>{new Date(i.date).toLocaleTimeString('de-DE', dateformat)}</div>\n                                    <div>{user? null: this.messageStatus(read)}</div>\n                                </div>\n                            </div>\n                        </div>\n                   </div>\n                )\n            }\n        }\n        const listItems = lines.map((message) =>\n        <ListItem value={message} key={lines.indexOf(message) } />);\n        return listItems; \n    }\n\n\n\n    messageStatus=(e)=>{\n        switch(e){\n            case 1:\n                return(\n                    <div className='chatMessageStatus'><FaCheck size={8}/></div>\n                )\n            case 2:\n                return(\n                    <div className='chatMessageStatus'><FaCheck size={8}/><FaCheck size={8}/></div>\n                )\n            case 3:\n                return(\n                    <div className='chatMessageStatusColor'><FaCheck size={8}/><FaCheck size={8}/></div>\n                )\n            default:\n                break\n        }\n    }\n        \n\n    render(){\n        const paneDidMount = (node) => {\n            if (node) {\n                node.addEventListener('scroll', this.handleScroll);\n            }\n        };\n        return(\n            <div className='chatFrame' style={{background:this.props.user.color.backgroundColor}}>\n                <div className='chatListVerlauf' ref={paneDidMount}>\n                    {this.chatVerlauf()}\n                    {\n                    !this.props.imgSend?\n                    null:\n                    <div className='heicSpinnerStartDiv'>\n                        <ClassicSpinner size={50} margin={2} color='#639cdd' loading={true}/>\n                    </div>\n                    \n                    }\n                    <div style={{ float:\"left\", clear: \"both\" }}\n                    ref={(el) => { this.messagesEnd = el; }}>\n                    </div>\n                </div>\n                <ImgView open={this.state.imgViewOpen} imgUrl={this.state.imgView} close={this.imgViewClose}/>\n            </div>     \n        )    \n        \n        \n        \n    }\n        \n    \n}\n\nexport default Chatbox;\n\n\n\n  ","import React from 'react';\nimport './chatroom.css'\nimport DialogCheck from './../helpers/dialogCheck'\nimport { MdSearch, MdChat } from \"react-icons/md\";\nimport Avatar from './../helpers/avatar'\nimport ctrl from './../api_controller'\n\n\nfunction ListItem(props){\n    return (<div>\n                <div className= \"chatValue\">{props.value}</div>\n            </div>);\n} \n\n\nexport class Search extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            user: this.props.user,\n            chat:false,\n            search:'',\n            conracts: null,\n            searchFound:false,\n            chatUser: null,\n            dialogCheck:false,\n            selectUser: null\n        }  \n                   \n    }\n\n\n    componentDidUpdate(prevProps){\n        \n    }\n    \n\n    componentDidMount() {\n  \n    }\n\n    handleSearch = ({ target }) => {\n        this.setState({ [target.name]: target.value, searchFound:false  },()=>this.searchChatUser())\n    }\n    \n    search = ()=>{\n        return(\n            <div className='searchFrame'>\n                <div className='searchDiv'>\n                    <div className='searchInputDiv'>\n                        <input className='searchInput' type='text' name='search' placeholder='Suche' value={this.state.search} onChange={this.handleSearch}></input>\n                        <button className='searchIconBtn' onClick={()=>this.searchChatUser()}><MdSearch size={30}/></button>\n                    </div>\n                    {this.addChatUser()}\n                </div>\n            </div>\n        )\n    }\n\n    searchChatUser = async()=>{\n        if(this.state.search===''){\n            return\n        }\n        const {search} = this.state\n        const user = this.state.user.id\n        const payload = {search, user}\n        const users = await ctrl.getSearch(payload)\n        if(users){\n            console.log(users)\n            this.setState({chatUser:users, searchFound:true })\n        }\n    }\n\n    \n    addChatUser = ()=>{\n        if(this.state.searchFound){\n            const chatUserArr = []\n            const searchedList = this.state.chatUser\n            \n            searchedList.forEach(e=>{\n\n                chatUserArr.push(\n                    <div className='searchFoundFrame'>\n                        <button className='searchUserBtn' onClick={()=>this.setState({dialogCheck:true,selectUser:e })}>\n                            <div className='searchUserImgDiv'>\n                                <Avatar name={e.userName} imgLow={e.imgLow} imgHigh={e.imgHigh}/>\n                            </div>\n                            <div className='searchUserNameDiv'>{e.userName}</div>\n                            <div className='searchUserIcon'><MdChat size={36}/></div>\n                        </button>\n                        <DialogCheck \n                            text={<div>möchtest du <div style={{fontWeight: \"bold\"}}>{e.userName}</div> zu dein kontakten hinzufügen ?</div>}\n                            open={this.state.dialogCheck}\n                            checked={this.dialogCallback}\n                        />\n\n                    </div>\n                )\n            })\n            \n            const listItems = chatUserArr.map((items) =>\n                <ListItem value={items} key={chatUserArr.indexOf(items) } />\n                )\n            return listItems;\n        }else{\n            return null\n        }\n    }\n\n    dialogCallback = (e)=>{\n        if(e){\n            this.setState({search:'', dialogCheck:false, searchFound: false},()=>this.updateContactUser())\n        }else{\n            this.setState({search:'', dialogCheck:false, searchFound: false, selectUser: null})\n        }\n    }\n\n    updateContactUser = ()=>{\n        const id = this.state.user._id\n        const chatUserId = this.state.selectUser.id\n        if(id===chatUserId){\n            return\n        }\n        const contacts = this.state.user.contacts\n        if(contacts.find(e=> e===chatUserId)){\n            return\n        }\n        const payload = {\n            user: this.state.selectUser,\n            chatUser: true\n\n        }\n        this.props.selectUser(payload)\n        this.setState({selectUser: null})\n        \n        \n    }\n\n   \n\n\n\n\n    render(){\n        return(\n            <div>\n                {this.search()}\n            </div>\n        )  \n    }\n        \n    \n}\n\nexport default Search;\n\n\n\n  ","import React from 'react'\nimport './chatroom.css'\nimport Avatar from './../helpers/avatar'\nimport socket from './../socket/socket'\nimport Search from './search'\nimport DialogCheck from './../helpers/dialogCheck'\nimport { AiOutlinePicture } from \"react-icons/ai\"\n\n\n\nfunction ListItem(props) {\n    return (<div>\n                <div className= \"chatValue\">{props.value}</div>\n            </div>);\n}\n\nexport class Chatroom extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n                date: new Date(),\n                user: this.props.user,\n                chatrooms: this.props.user.chatrooms,\n                chatroomMap: this.props.chatroomMap,\n                loading: true,\n                openChat: null,     \n                chatMap: null,\n                usersMap: null,\n                chatUserJoined: null,\n                avatar:null,\n                client: socket(),\n                start: true,\n                chatUser: null,\n                openDialogCheck: false,\n                progress:false,\n        }\n    }\n\n    handleChange = ({ target }) => {\n        this.setState({ [target.name]: target.value })\n    }\n\n    componentDidUpdate(prevProps, prevState){\n    }\n\n    componentDidMount(){\n        //console.log('mount chatroom liste')\n        \n    }\n    \n    componentWillUnmount(){\n        //console.log('unmount chatroom liste')\n    }\n   \n    \n\n     \n\n\n\n\n    runopenChatbox = (id) => {\n        this.props.openChat(id)\n    }\n\n\n\n    \n    // Callback Dialog-Check\n    dialogCallback = (e)=>{\n        if(e){\n            this.setState({openDialogCheck:false})\n        }else{\n            this.setState({openDialogCheck:false})\n        }\n    }\n\n    // callback search user->update\n    searchUpdate = (user)=>{\n        this.setState({user})\n    }\n\n\n\n\n\n    \n\n\n\n\n\n    messageReads = (chatroom)=>{\n        /** \n        console.log('_______________lade messages_______________')\n        console.log(chatroom.chat)\n        console.log('___________________________________________')\n        */\n        const author = chatroom.chat.filter(e=>e.author !== this.props.user.id)\n        const count = author.filter(e=>e.read === false).length\n        return count\n    }\n\n    \n\n    inquiry = (i ,name, pic, picHigh)=> {\n        return(\n            <div className='chatroominListe'>\n                <button className='btnchatroomuser' onClick={()=>this.props.createRoom(i)}>\n                    <div className='chatroomuser'>\n                        <div className='chatroomuserDiv'>\n                            <div className=\"chatroomImgDiv\" >\n                                <Avatar name={name} imgLow={pic} imgHigh={picHigh}/>\n                            </div>\n                            <div className='chatroomSpecsDiv'>\n                                <div className='chatroomTxtDivTop'>\n                                    <div className='chatroomProfilName'>{name}</div>\n                                </div>\n                                <div className='chatroomTxtDivBotton'>\n                                    <div className='chatroomLastChatDiv' >\n                                        ...fragt nach einem gemeinsamen Chatroom\n                                    </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </button>\n                </div>\n        )\n    }\n\n\n\n\n\n    chatrooms = ()=> {\n        const dateformat = { \n            month: 'short', \n            day: 'numeric',\n            hour12: false,\n            hour:  \"2-digit\",\n            minute: \"2-digit\"\n        };\n        const sortMap = (e)=>{\n            if(e[1].chat){\n                const lastchat = e[1].chat[e[1].chat.length - 1]\n                if(lastchat){\n                    //console.log(lastchat.date, e[1].userName )\n                    const dateTime = new Date(lastchat.date)\n                    return dateTime\n                }\n            }\n            return new Date(2021, 0, 1)  \n        }\n\n\n            const lines = [];\n            // Chatuser mit Chatroom => map\n            const chatroomMap = this.props.chatroomMap\n            //console.log([...chatroomMap.entries()])\n            // CHatuser on Chatroom => map\n            const mapArray = [...chatroomMap.entries()]\n            const sortArray = mapArray.sort((a, b) => sortMap(b) - sortMap(a))\n            const MapSort = new Map(sortArray)\n            const keys = MapSort.keys()\n            for(let i of keys ){\n                const text = chatroomMap.get(i).text\n                const online = this.props.online.find(e=>e===chatroomMap.get(i).id)\n                const name = chatroomMap.get(i).userName\n                const pic = chatroomMap.get(i).imgLow\n                const picHigh = chatroomMap.get(i).imgHigh\n                if(text==='new_room'){\n                    lines.push(this.inquiry(chatroomMap.get(i),name, pic, picHigh))\n                }else{\n                    const chats = chatroomMap.get(i).chat\n                const newMess = this.messageReads(chatroomMap.get(i))\n                const lastchat = chats.length<=0?'Leerer Chat':chats[chats.length-1].message\n                const lastchatUser = chats.length<=0?null:chats[chats.length-1].author\n                const lastchatTime = chats.length<=0?'':chats[chats.length-1].date\n                \n                    lines.push(\n                        <div className='chatroominListe'>\n                        <button className='btnchatroomuser' onClick={()=>this.runopenChatbox(i)}>\n                            <div className='chatroomuser'>\n                                <div className='chatroomuserDiv'>\n                                    <div className=\"chatroomImgDiv\" >\n                                        <Avatar name={name} imgLow={pic} imgHigh={picHigh}/>\n                                        {newMess===0?null:\n                                            <div className='underDateDiv'>\n                                                <div className='messageCountDiv'>{newMess}</div>\n                                            </div>\n                                        }\n                                    </div>\n                                    <div className='chatroomSpecsDiv'>\n                                        <div className='chatroomTxtDivTop'>\n                                            <div className='chatroomProfilName'>{name}</div>\n                                            <div className='chatroomProfilDate'>\n                                                {new Date(lastchatTime).toLocaleDateString('de-DE', dateformat)}\n                                            </div>\n                                        </div>\n                                        <div className='chatroomTxtDivBotton'>\n                                            <div className='chatroomLastChatDiv' >\n                                                {lastchat===''?<AiOutlinePicture size={35}/>:<div>\n                                                    <div style={{color: 'rgb(99, 156, 221)'}}>{lastchatUser!==this.props.user.id?null:'Du: '}</div>\"{lastchat}\"</div>}\n                                            </div>\n                                            {!online?null:<div className='chatroomJoined'>online</div>}\n                                        </div>\n                                    </div>\n                                </div>\n                                \n                            </div>\n                            </button>\n                       </div>\n                    )\n\n                }\n                \n            }\n            \n            const listItems = lines.map((room) =>\n            <ListItem value={room} key={lines.indexOf(room) } />);\n            return listItems;\n       \n        \n}\n\n\n        \n\n    \n\n   \n    \n    render(){\n        if(this.props.chatroomView){\n            return(\n                <div className='chatroomDiv'>\n                    <div className='chatListRooms'>\n                        <Search user={this.state.user} selectUser={this.props.openNewChat}/>\n                        <div className='chatroomListeFrame'>\n                            {this.chatrooms()}\n                            <DialogCheck \n                                text={<div>möchtest du <div style={{fontWeight: \"bold\"}}></div> zu dein kontakten hinzufügen ?</div>}\n                                open={this.state.openDialogCheck}\n                                checked={this.dialogCallback}\n                            />\n                        </div>\n                    </div>\n                </div>  \n            )\n        }else{\n            return null\n        }\n    } \n        \n    \n    \n}\n\nexport default Chatroom   \n","\n\n\nexport const createImage = url =>\n  new Promise((resolve, reject) => {\n    const image = new Image()\n    image.addEventListener('load', () => resolve(image))\n    image.addEventListener('error', error => reject(error))\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url\n  })\n\nexport async function getRotatedImage(imageSrc, rotation = 0) {\n  const image = await createImage(imageSrc)\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n\n  const orientationChanged =\n    rotation === 90 || rotation === -90 || rotation === 270 || rotation === -270\n  if (orientationChanged) {\n    canvas.width = image.height\n    canvas.height = image.width\n  } else {\n    canvas.width = image.width\n    canvas.height = image.height\n  }\n\n  ctx.translate(canvas.width / 2, canvas.height / 2)\n  ctx.rotate((rotation * Math.PI) / 180)\n  ctx.drawImage(image, -image.width / 2, -image.height / 2)\n\n  return new Promise(resolve => {\n    canvas.toBlob(file => {\n      resolve(URL.createObjectURL(file))\n    }, 'image/jpeg')\n  })\n}\n","\nimport React from 'react'\nimport { FiSmile } from \"react-icons/fi\";\nimport Picker from 'emoji-picker-react';\nimport './index.css'\nimport Dialog from '@material-ui/core/Dialog';\n\n\n\nexport class Emoji extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            chosenEmoji:null,\n            setChosenEmoji:null,\n            show: false\n        }\n    }\n\n    close = ()=>{\n        this.setState({show:false})\n    }\n    onEmojiClick = (event, emojiObject)=>{\n        //console.log(emojiObject)\n        //console.log(event)\n        //this.setState({chosenEmoji:emojiObject.emoji})\n        this.props.emoji(emojiObject.emoji)\n    }\n\n    emojiPicker=()=>{\n        return(\n            <Dialog\n            className='emojiDialog'\n            open={this.state.show===true}\n            onBackdropClick= {()=>this.close()}\n        \n        \n            >\n            <div className='emojiDialogDiv'>\n                <Picker onEmojiClick={this.onEmojiClick} />\n            </div>\n            </Dialog>\n        )\n    }\n    \n\n\n    \n\n    \n\n    render(){\n        return(\n            <div>\n            <button className='emojiBtn'\n            onClick={()=>this.setState({show:true})}>\n                <FiSmile  size={20}/>\n            </button>\n            {this.emojiPicker()}\n            </div>\n        )\n    }  \n    \n}\n\nexport default Emoji\n\n\n    \n\n    \n      \n        \n    \n","import React, { Fragment } from 'react'\nimport { getOrientation } from 'get-orientation/browser'\nimport { getRotatedImage } from './rotateImage'\nimport './index.css'\nimport Dialog from '@material-ui/core/Dialog';\nimport { FiCamera } from \"react-icons/fi\";\nimport { GoX } from \"react-icons/go\";\nimport heic2any from \"heic2any\";\nimport DotLoader from \"react-spinners/DotLoader\";\nimport Emoji from './../emoji'\n\n\n\n\nconst ORIENTATION_TO_ANGLE = {\n  '3': 180,\n  '6':  0,\n  '8': -90,\n}\n\n\n\nclass ImgSize extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      imageSrc: null,\n      crop: { x: 0, y: 0 },\n      zoom: 2,\n      aspect: 1 / 1,\n      croppedAreaPixels: null,\n      croppedImage: null,\n      isCropping: false,\n      correctImg: null,\n      file: null,\n      heicFile:null,\n      heicLoad: false,\n      input:'',\n\n    }\n  }\n\n  // input user => eingabefelder setten......\n  handleChange = ({ target }) => {\n    this.setState({ [target.name]: target.value });\n  } \n\n  // input user => emoji props\n  handleChangeEmoji = (e) => {\n    this.setState({input:this.state.input+e});\n  } \n\n\n  onCropChange = crop => {\n    this.setState({ crop })\n  }\n\n  onCropComplete = (croppedArea, croppedAreaPixels) => {\n    this.setState({\n      croppedAreaPixels,\n    })\n  }\n\n  onZoomChange = zoom => {\n    this.setState({ zoom })\n  }\n\n\n  // callback cropped Image......\n  callbackCorrectImg = async (e) =>{\n    this.props.img(e, this.state.input)\n    this.setState({correctImg: e, input:''})\n    this.close()\n  }\n\n  \n\n\n  onClose = async () => {\n    this.setState({\n      croppedImage: null,\n      input:''\n    })\n  }\n\n  rotation = async () => {\n    if(this.state.file=== null){\n      return\n    }\n    const file = this.state.file\n      let imageDataUrl = await readFile(file)\n\n      // auto rotation.....\n      const orientation = await getOrientation(file)\n      const rotation = ORIENTATION_TO_ANGLE[orientation]\n      if (rotation) {\n        imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\n      }\n      this.setState({\n        imageSrc: imageDataUrl,\n        crop: { x: 0, y: 0 },\n        zoom: 1,\n      })\n    \n  }\n\n\n  isHeic = async file =>{\n    await heic2any({\n      blob: file,\n      toType: \"image/jpeg\",\n      multiple: false,\n      quality: 0.1\n    })\n      .then(res=> {\n        this.setState({heicFile:res},()=>this.onHeicFileChange())\n      })\n    .catch((e) => {\n      console.log('catch file')\n      console.log(e)\n    });\n    \n\n    \n  }\n\n  onHeicFileChange = async()  => {\n    const heicImg = this.state.heicFile\n    let imageDataUrl = await readFile(heicImg)\n\n    // auto rotation.....\n    const orientation = await getOrientation(heicImg)\n    const rotation = ORIENTATION_TO_ANGLE[orientation]\n    if (rotation) {\n       imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\n    }\n    this.setState({\n      file: heicImg,\n      heicLoad:false,\n      imageSrc: imageDataUrl,\n      crop: { x: 0, y: 0 },\n      zoom: 1,\n    })\n  }\n\n  onFileChange = async e => {\n    if (e.target.files && e.target.files.length > 0) {\n      const file = e.target.files[0]\n      if(file.type==='image/heic'){\n        this.setState({heicLoad:true},()=>this.isHeic(file))\n        return\n      }\n      let imageDataUrl = await readFile(file)\n\n      // auto rotation.....\n      const orientation = await getOrientation(file)\n      const rotation = ORIENTATION_TO_ANGLE[orientation]\n      if (rotation) {\n        imageDataUrl = await getRotatedImage(imageDataUrl, rotation)\n      }\n      this.setState({\n        file: file,\n        imageSrc: imageDataUrl,\n        crop: { x: 0, y: 0 },\n        zoom: 1,\n      })\n    }\n  }\n\n\n\n  \n\n\n  close = async ()=>{\n      this.setState({\n        imageSrc:null,\n        croppedAreaPixels: null,\n        croppedImage: null,\n        isCropping: false,\n        correctImg: null,\n        file: null,\n        heicFile:null,\n        heicLoad: false,\n        input:'',\n      })\n  }\n\n  spinner = ()=>{\n    const loading = this.state.heicLoad\n    if(loading){\n      return(\n        <div className='heicSpinner'><DotLoader size={30} margin={2} color='#000000' loading={loading}/></div>\n      )\n    }else{\n      return(\n        <button className=\"fakefile\"><FiCamera size={20}/></button>\n      )\n    }\n }\n \n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"ggg\">\n          <div className=\"picPos\">\n            <div className=\"imgPadd\">{this.spinner()}</div>\n            <input id=\"fileInput\" className=\"hidden\" type=\"file\" accept=\"image/* .heic\" multiple=\"multiple\" onChange={this.onFileChange}/>  \n            </div>\n          </div>\n          <Dialog \n          className='ImgChatDialog'\n          open={!!this.state.imageSrc}\n          fullScreen>\n          <div className={!this.props.mobile?'imgChatFrame':'imgChatFrameMobil'}>\n            <div className='chatheadImg'>\n              <button className='chatheadBtnImg' onClick={()=>this.close()}><GoX size={16}/></button>\n            </div>\n            {this.state.imageSrc && (\n            <Fragment>\n              <div className=\"imgChatImgDiv\">\n                <img className='imgChatImg' src={this.state.imageSrc} alt='...'></img>\n              </div>\n              <div className='chatEingabe'>\n                <textarea className=\"chatInput\" placeholder='deine Nachricht...' name=\"input\" value={this.state.input}  onChange={this.handleChange} ></textarea>\n                <div className='chatEingabeIcons'>\n                  <Emoji emoji={this.handleChangeEmoji}/>\n                </div>\n                <div className='chatEingbeRight'>\n                  <button className=\"chatBtn\" onClick={()=>this.callbackCorrectImg(this.state.imageSrc)}>senden</button>    \n                </div>\n              </div>\n          </Fragment>\n        )}\n        </div>\n        </Dialog>\n      </div>\n     \n    )\n  }\n}\n\nfunction readFile(file) {\n  return new Promise(resolve => {\n    const reader = new FileReader()\n    reader.addEventListener('load', () => resolve(reader.result), false)\n    reader.readAsDataURL(file)\n  })\n}\n\n\nexport default ImgSize;","\nimport React from 'react'\nimport './index.css'\nimport ChatImg from './chatImage'\nimport Emoji from './emoji'\nimport ctrl from './../api_controller'\n\n\n\n\nexport class InputDevice extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            input: '',\n            img: null,\n            storageImg: {\n                imgLow: null,\n                imgHigh: null,\n                id: null\n            },\n            imgId: null,\n            client: this.props.socket,\n            \n        }\n        \n        \n                         \n    }\n\n    componentDidMount(){\n        \n    }\n\n    componentWillUnmount(){\n    }\n\n\n    // input user => eingabefelder setten......\n    handleChange = ({ target }) => {\n        const croom = this.props.chatroomName\n        const charCount = target.value.length\n        const author = this.props.user.id\n        const sendList = [1,5,10,15,20,25,30,35,40,45,50,55,60,65,70]\n        if(sendList.find(e => e===charCount)){\n            this.state.client.hack(croom, target.value.length, author )\n          }\n        \n        this.setState({ [target.name]: target.value });\n    }  \n\n    // input user => emoji props\n    handleChangeEmoji = (e) => {\n        this.setState({input:this.state.input+e});\n    } \n\n   \n    useImg = async (e,txt)=>{ \n        const picName = this.props.user.userName\n        let file = await fetch(e)\n        .then(r => r.blob())\n        .then(blobFile => new File([blobFile], picName, {type: \"image/jpeg\" }))\n        const storageImg = await ctrl.chatImgSave(file)\n        if(storageImg){\n            this.setState({\n                img:file,\n                storageImg,\n                input: txt,\n            },()=>this.send()) \n        }\n    }\n\n    send = ()=>{\n        this.props.send(this.state.input, this.state.storageImg.imgLow, this.state.storageImg.imgHigh, this.state.storageImg.id)\n        this.setState({\n            input:'',\n            img: null,\n            storageImg: {\n                imgLow: null,\n                imgHigh: null,\n                id: null\n            },\n            imgId: null,\n        })\n    }\n\n\n\n    \n\n    \n\n    render(){\n        return(\n            <div className='chatEingabe'>\n                <textarea className=\"chatInput\" placeholder='deine Nachricht...' name=\"input\" value={this.state.input}  onChange={this.handleChange} ></textarea>\n                <div className='chatEingabeIcons'>\n                    <Emoji emoji={this.handleChangeEmoji}/>\n                    <ChatImg mobile={this.props.mobile} img={this.useImg}/>\n                </div>\n                <div className='chatEingbeRight'>\n                    <button className=\"chatBtn\" onClick={()=>this.send()}>senden</button>     \n                </div>\n            </div>\n        )\n                            \n                       \n            \n            \n        \n    }\n}       \n        \n    \n\n\nexport default InputDevice;","\n\nconst  mongoObjectId = function () {\n    var timestamp = (new Date().getTime() / 1000 | 0).toString(16);\n    return timestamp + 'xxxxxxxxxxxxxxxx'.replace(/[x]/g, function() {\n        return (Math.random() * 16 | 0).toString(16);\n    }).toLowerCase();\n};\n\n\nexport default mongoObjectId","\nimport React from 'react'\nimport socket from './../socket/socket'\nimport './index.css'\nimport Chatverlauf from './chatVerlauf'\nimport Chatroom from './chatroom'\nimport { GoX, } from \"react-icons/go\";\nimport Avatar from './../helpers/avatar'\nimport InputDevice from './inputDevice'\nimport getId from './../helpers/get_Id'\nimport ctrl from './../api_controller'\n\n\n\nexport class Chatbox extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            client: socket(),\n            user: this.props.user,\n            chatUser: null,\n            chatroomMap: this.props.chatroomMap,\n            login: true,\n            chatroom: null,\n            joinedUser: [],\n            connect: false,\n            chatroomView: true,\n            default: null,\n            online: [],\n            hacking: false,\n            imgSend: null\n            \n        }\n        this.addMessagesCallback = this.addMessagesCallback.bind(this)\n        this.onSendMessage = this.onSendMessage.bind(this)  \n    }\n\n\n\n    componentDidMount(){\n        this.connectSocket()\n        this.state.client.callbackPool(this.addMessagesCallback)\n        this.setName(this.props.user.contacts)\n        \n        \n    }\n\n\n\n\n\n\n\n\n    connectSocket = ()=>{\n        const rooms = Array.from(this.state.chatroomMap.values())\n        if(rooms){\n            rooms.forEach(e=>{\n                this.state.client.connect(e.name)\n            })\n        }\n        // connect ping__room\n        const ping_room = this.state.user.id\n        this.state.client.connect(ping_room)\n    \n        \n        \n    }\n\n\n    // erstellt user im Socket........\n    setName = (contacts) => {\n        const payload = {\n            user: this.state.user.id,\n            contacts: contacts\n        }\n        this.state.client.register(payload)\n        this.setState({\n            connect: true\n        })\n    }\n\n\n\n\n    componentWillUnmount(){\n        console.log('klasse chat geschlossen')\n        const onlineUser = this.state.online\n        const user = this.state.user.id\n        onlineUser.forEach(e=>{\n            const answer = {\n                chatroomName: e,\n                answer: false,\n                user: user\n            }\n            this.state.client.userStatus(answer)\n        })\n        this.state.client.disconnect()\n        this.setState({\n            chatroom: null,\n            chatUser: null,\n            chatroomView: true,\n        })\n    }\n\n    // schließe -Dialog -message -chatroom\n    close = () =>{\n        console.log(' close chatroom => State reset')\n        this.props.useContact(null)\n        this.setState({\n            chatroom: null,\n            chatUser: null,\n            chatroomView: true\n        })\n    } \n\n\n\n    \n\n\n\n    componentDidUpdate(prevProps, prevState){\n        if(JSON.stringify(this.props.user)!==JSON.stringify(prevProps.user)){\n            this.setState({ user: this.props.user})\n        }\n        if(this.props.chatroomClose!==prevProps.chatroomClose){\n            console.log('chat wird geschlossen')\n            this.close()\n        }\n        if(this.props.chatroomMap.size>prevState.chatroomMap.size){\n            console.log('ÄNDERUNG _chatroomMap')\n            this.setState({chatroomMap: this.props.chatroomMap})\n        }\n    }\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n    \n\n\n\n\n\n    runChatroom = (e)=>{\n        console.log('ÖFFNE CHAT')\n        this.props.useContact(e)\n        const cRoom  = this.state.chatroomMap.get(e)\n        if(!('chat' in cRoom)){\n            cRoom.chat = []\n        } \n        this.state.client.onEnterRoom(cRoom.name, this.state.user.id)    \n        this.setState({\n            chatUser: cRoom.id,\n            chatroom: cRoom,\n            chatroomView: false\n        })  \n    }\n\n    runNewChatroom = (payload ) =>{\n        const sendData = {\n            id: this.state.user.id,\n            imgHigh: this.state.user.imgHigh,\n            imgLow: this.state.user.imgLow,\n            room: payload.user.id,\n            userName: this.state.user.userName,\n        }\n        this.state.client.pingContact(sendData)\n\n    }\n\n    \n\n    // erstellt die Datenbank für neuen Chatroom!!!!!!\n    createChatroomDb = async(selected)=>{\n        const userId = this.state.user.id\n        const chatUserId = selected.id\n        const name = getId()\n        const users = {creator: chatUserId, members: [userId]}\n        const payload = {name, users}\n        const chatroom = await ctrl.createChatroom(payload)\n        //console.log(userId, ' : ', chatUserId)\n        //console.log(this.state.chatroomMap)\n        if(chatroom){\n            const key = chatroom.id\n            const sendData = {\n                room: selected.id,\n                roomId: chatroom.id,\n                inquiryUser: this.state.user.id\n            }\n            this.state.client.pingAnswer(sendData)\n            this.props.chatroomMap.delete(chatUserId.toString())\n            //console.log(this.state.chatroomMap)\n            chatroom.id = chatUserId\n            chatroom.userName = selected.userName\n            chatroom.imgLow = !selected.imgLow?null:selected.imgLow\n            chatroom.imgHigh = !selected.imgHigh?null:selected.imgHigh\n            chatroom.chat = []\n            this.props.chatroomMap.set(key, chatroom)\n            this.state.client.connect(chatroom.name)\n            this.setState({\n                chatUser: chatUserId,\n                chatroom: chatroom,\n                chatroomView: false\n            }) \n        }\n\n        \n    }\n\n    answerContact = async(message)=>{\n        const roomMap = await ctrl.getCharoomList(this.state.user.id)\n        if(roomMap){\n            const newRoom = roomMap.get(message.roomId.toString())\n            console.log('newRoom', newRoom)\n            this.state.chatroomMap.set(message.roomId.toString(), newRoom)\n            this.state.client.connect(newRoom.name)\n            this.setState({default: null})\n        }\n        \n    }\n     \n\n    \n   \n    \n\n    \n\n    \n\n    \n            \n    \n    \n    \n\n   \n\n    \n    \n    \n    \n\n\n    \n\n    \n    \n    \n\n\n    \n    \n\n    // INPUTEVICE => sende MAessage\n    onSendMessage = (m, imgLow, imgHigh, imgId) =>{ \n        const message = m\n        const chatroomName = this.state.chatroom.name\n        const user_id = this.state.user.id\n        if(imgLow===null){\n            if(m===''){\n                return\n            }\n            this.state.client.message(chatroomName, message,'','', null, user_id)\n        }else{\n            \n            this.state.client.message(chatroomName, message, imgLow, imgHigh, imgId, user_id)\n            this.setState({\n                default: null, \n                //imgSend: imgId\n            })\n            \n            /**\n             * author: 24114211353796\n                chatroomName: \"6026c72221e6095ee95f4e76\"\n                date: \"2021-02-12T18:21:31.627Z\"\n                id: 24321794072051\n                imgHigh: \"\"\n                imgId: null\n                imgLow: \"\"\n                message: \"hi\"\n                read: true\n             */\n        }\n    }\n\n\n\n    \n\n\n    ////////////////////////////////////////////////////////////////\n    ////////////____socket Callback______//////////////////////////\n\n    addMessagesCallback(message){\n        const getIdByValue = (searchValue)=>{\n            const map = this.state.chatroomMap\n            for (let [key, value] of map.entries()){\n              if (value.name === searchValue)\n                return key;\n            }\n        }\n        switch(message.text){\n\n\n\n            \n            case 'new_room':\n                window.alert('fick die wand an')\n                this.state.chatroomMap.set(message.id, message)\n                this.setState({default:null})\n            break\n\n\n            \n            case 'read_message':\n                if(message.reader){\n                    if(this.state.chatroom){\n                        this.state.chatroom.chat.forEach(e => {\n                            e.read = true\n                        })\n                        this.setState({chatroom: this.state.chatroom})\n                    }\n                }\n            break\n\n\n\n            case 'hacking':\n                const hackTime = setTimeout(()=>{this.setState({hacking: false})},1500)\n                if(!this.state.chatroomView){\n                    const chatroomName = this.state.chatroom.name\n                    const userId = this.state.user.id\n                    if(message.hack && chatroomName === message.chatroomName && userId !== message.author){\n                        if(!this.state.hacking){\n                            console.log(message)\n                            this.setState({hacking: true}, ()=>hackTime)\n                        }\n                    }\n                }\n            break\n\n\n\n            case 'init_chat':\n                if(message.online){\n                    const user_self = this.state.user.id\n                    const onlineUser = message.online\n                    const answer = {\n                        chatroomName: onlineUser,\n                        answer: true,\n                        user: user_self\n                    }\n                    this.state.client.userStatus(answer)\n                    if(this.state.online.find(e=>e===onlineUser)){\n                        return\n                    }\n                    this.setState({online: this.state.online.concat(onlineUser)})\n                } \n            break\n\n\n\n\n            case 'user_status':\n                if(message.status){\n                    const onlineUser = message.user\n                    this.setState({online: this.state.online.concat(onlineUser)})\n                    break\n    \n                }else if(!message.status){\n                    const onlineUser = message.user\n                    if(this.state.online.find(e=>e===onlineUser)){\n                        this.state.online.forEach((e, i)=>{\n                            if(e===onlineUser){\n                                this.state.online.splice(i, 1)\n        \n                            }\n                        })\n                        this.setState({online: this.state.online})\n                    }\n                    break\n                }\n            break\n\n\n\n            case 'create_room':\n                window.alert('fick die wand nochmal an')\n                this.answerContact(message)\n            break\n\n\n\n            case 'new_message':\n                const mapId = getIdByValue(message.chatroomName)\n                console.log('addMessage=>    ',message, mapId)\n                if(mapId){\n                    if(this.props.chatroomMap.has(mapId)){\n\n                        const room = this.props.chatroomMap.get(mapId)\n                        room.chat.push(message)\n                        this.state.chatroomMap.set(mapId, room)\n                        if(message.imgHigh=== this.state.imgSend){\n                            this.setState({default:null, imgSend: null})\n                        }\n                        this.setState({default:null})\n                    }\n                    \n                }else{\n                    console.log('unbekannte Nachricht')\n                }\n            break\n\n            default:\n                break\n        }\n    }\n\n    \n       \n\n\n\n\n    scrollChatToBottom() {\n        this.panel.scrollTo(0, this.panel.scrollHeight)\n    }\n\n\n    \n\n    chatverlauf =()=>{\n        const hack = this.state.hacking\n        const online = this.state.online.find(e=>e===this.state.chatUser)\n        return(\n            <div className='ChatverlaufCon'>\n                <div className='chathead'>\n                    <div className='chatHeadImgDiv'><Avatar name={this.state.chatroom.userName} imgLow={this.state.chatroom.imgLow} imgHigh={this.state.chatroom.imgHigh}/></div>\n                    <div className='chatheadName'>{this.state.chatroom.userName}{!hack?null:<div className='chartoomWrite'> schreibt...</div>}</div>\n                        {!online?null:<div className='chatroomJoinedHead'>online</div>}\n                        <button className='chatheadBtn' onClick={()=>this.close()}><GoX size={16}/></button>\n                    </div>\n                    <div className='chatContainer'>\n                        <Chatverlauf \n                            chatroom={this.state.chatroom} \n                            closeMess={this.close} \n                            user={this.props.user}\n                            imgSend= {this.state.imgSend}\n                        />\n                        <InputDevice\n                            mobile = {this.props.mobile}\n                            send = {this.onSendMessage}\n                            chatroomName = {this.state.chatroom.name}\n                            user = {this.props.user}\n                            socket = {this.state.client}\n                            \n                        />\n                    </div>\n                </div>\n        )\n    }\n\n    \n\n    \n\n    render(){\n        if(this.state.connect && this.props.main===1){\n            return(\n                <div className='ChatDiv'>\n                    {!this.state.chatroomView?this.chatverlauf():null}\n                    <div className='chatroomFrame'>\n                        <Chatroom \n                            user={this.state.user} \n                            openChat={this.runChatroom}\n                            openNewChat={this.runNewChatroom} \n                            online={this.state.online}\n                            chatroomMap={this.state.chatroomMap}\n                            chatroomView={this.state.chatroomView}\n                            createRoom={this.createChatroomDb}\n                        />\n                    </div>  \n                </div>\n            )\n            \n        }else{\n            return null\n        }\n    }\n}       \n        \n    \n\n\nexport default Chatbox;","import React from 'react';\nimport './index.css';\nimport { GoX } from \"react-icons/go\";\nimport DialogCheck from './../helpers/dialogCheck'\nimport ImgSize from './../helpers/imgClass'\n//import DialogFail from './../dialogFail'\n\n\n\n\n\n\nexport class Profile extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            user: this.props.user,\n            userName: this.props.user.userName,\n            email: this.props.user.email,\n            phone: this.props.user.phone,\n            password: this.props.user.password, \n            dialogCheck: false,\n            img: null,\n            imgUrl: this.props.user.imgHigh,\n            newImg: false, \n            change: false,\n            colorChange: false,\n            side: 1\n        }\n    }\n\n    handleChange = ({ target }) => {\n        this.setState({ [target.name]: target.value , change:true })\n    }\n\n\n    componentDidMount() {\n    }\n    \n    componentWillUnmount() {\n    }\n    \n    close = ()=>{\n        this.props.openChat()\n    }\n\n\n\n\n    dialogCheckText = ()=>{\n        const text = <div >Bist sicher das du die Änderungen übernehmen willst <div style={{fontWeight: \"bold\"}}>{this.state.user.userName}</div> ? </div>\n        this.setState({text: text, dialogCheck: true })\n        \n    }\n    callbackDialogcheck = (e)=>{\n        this.setState({dialogCheck: false,})\n        if(e){\n            this.userUpdate()\n        }\n       \n        \n    }\n    \n\n    croppedImg = async (e)=>{\n        const picName = this.state.userName\n        const formData = new FormData();\n        \n        let file = await fetch(e)\n        .then(r => r.blob())\n        .then(blobFile => new File([blobFile], picName, {type: \"image/png\" }))  \n        /*\n        * mobil test\n\n        let photo = {\n            uri: e,\n            type: 'image/*',\n            name: 'file.jpg'\n\n        };\n        */\n        formData.append('img', file);\n        formData.append('thumbnail', file);\n\n\n        \n        \n        this.setState({\n            img: file, // file by ReacT\n            imgUrl:e,\n            newImg: true, \n        })\n    }\n\n    userUpdate = ()=>{\n        if(this.state.newImg){\n            const {password, phone, userName, email, img} = this.state\n            this.props.userUpgrade({password, phone, userName, email, img})\n        }else{\n            const {password, phone, userName, email} = this.state\n            this.props.userUpgrade({password, phone, userName, email})\n        }\n        this.close()\n    }\n\n\n\n\n\n\n\n\n\n    profilImg(){\n        if(!this.state.imgUrl){\n            return(\n                <div className=\"regisImgDiv\">\n                    <ImgSize img={this.croppedImg} mobil={this.props.mobil} />\n                </div>\n            )\n        }\n        return(\n            <div className=\"regisImgDiv\">\n                <img className='regisImg' src={this.state.imgUrl} alt={this.state.userName}></img>\n                <button className='regisImgBtn' onClick={()=>this.setState({imgUrl: null})}>x</button>\n            </div>\n        );                    \n    }\n\n    saveBtn = ()=>{\n        const {change, newImg} = this.state\n        if(change || newImg){\n            return(\n                <button className='profileSaveBtn' onClick={()=>this.dialogCheckText()}>Änderung speichern</button>\n            )   \n        }else{\n            return(\n                <button className='profileSaveBtn'><div/></button>\n            )\n        }\n    }\n\n    profileMain = ()=>{\n        return(\n            <div>\n                <div className='profileHead'>\n                    <button className='profileBackBackBtn' ></button>\n                    <button className='profileBackBtn' onClick={()=>this.close()}><GoX size={16}/></button>\n                </div>\n                <div className='profileMain'>\n                    <div className='profileImgDiv'>\n                        {this.profilImg()}\n                    </div>\n                      \n                    <div className='profileDataDiv'>\n                        <div className='profileBez'>Benutzername:</div>\n                        <input className='profileInput' value={this.state.userName} name='userName'  onChange={this.handleChange}></input>\n                    </div>\n                    <div className='profileDataDiv'>\n                        <div className='profileBez'>Email:</div>\n                        <input className='profileInput' value={this.state.email} name='email'  onChange={this.handleChange}></input>\n                    </div>\n                    <div className='profileDataDiv'>\n                        <div className='profileBez'>Passwort:</div>\n                        <input className='profileInput' value={this.state.password} name='password' type='password' onChange={this.handleChange}></input>\n                    </div>\n                    <div className='profileDataDiv'>\n                        <div className='profileBez'>Telefon:</div>\n                        <input className='profileInput' value={this.state.phone} name='phone' type='number' onChange={this.handleChange}></input>\n                    </div>\n                    <div className='profileDataDiv'>\n                        <div className='profileSaveBtnDiv'>\n                            {this.saveBtn()}\n                        </div>\n                            \n                        \n                    </div>\n                </div>\n\n                <DialogCheck text={this.state.text} open={this.state.dialogCheck} checked={this.callbackDialogcheck}></DialogCheck>\n            </div>\n        ) \n       \n    \n    }\n\n    \n\n    render(){\n        if(this.props.main===2){\n            return (\n                <div className='profileScreen'>{this.profileMain()}</div>\n            )\n        }else{\n            return null\n        }\n    }\n        \n}\n\nexport default Profile;\n\n\n\n  ","import React from 'react';\nimport './index.css';\nimport { GoX } from \"react-icons/go\";\nimport DialogCheck from './../helpers/dialogCheck'\nimport color from './../helpers/colors'\n\n\n\n\n\n\nexport class ColorMenu extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            user: this.props.user,\n            chatColor : [color.grey,color.highBlue,color.pink,color.orange,color.green,color.white],\n            textColor : [color.black,color.white],\n            color: {\n                backgroundColor: this.props.user.color.backgroundColor,\n                bubbleColor: this.props.user.color.bubbleColor,\n                fontColor: this.props.user.color.fontColor,\n                bubbleColor2: this.props.user.color.bubbleColor2,\n                fontColor2: this.props.user.color.fontColor2,\n\n            },\n            dialogCheck: false,\n            colorChange: false,\n            side: 1\n        }\n    }\n\n\n\n    componentDidMount() {\n    }\n    \n    componentWillUnmount() {\n    }\n    \n    close = ()=>{\n        if(this.state.colorChange){\n            const {color} = this.state \n            const payload = {color}\n            this.props.color(payload)\n        }\n        this.props.openChat()\n    }\n\n    changeColor = (colorTaget, pos) =>{\n        const {color} = this.state\n        switch(pos){\n            case 1:\n                color.backgroundColor = colorTaget\n                this.setState({color: color, colorChange:true})\n                return\n            case 2:\n                color.bubbleColor = colorTaget\n                this.setState({color: color, colorChange:true})\n                return\n            case 4:\n                color.fontColor = colorTaget\n                this.setState({color: color, colorChange:true})\n                return\n            case 3:\n                color.bubbleColor2 = colorTaget\n                this.setState({color: color, colorChange:true})\n                return\n            case 5:\n                color.fontColor2 = colorTaget\n                this.setState({color: color, colorChange:true})\n                return\n            default:\n                return \n        }\n    }\n\n\n\n    leftUser = (message)=>{\n        const dateformat = { \n            //month: 'short', \n            //day: 'numeric',\n            hour12: false,\n            hour:  \"2-digit\",\n            minute: \"2-digit\"\n        };\n        return(\n            <div className='chatinList'>\n                <div className='chatblase' style={{background:this.state.color.bubbleColor2}}>\n                    <div className='chatMessage'>\n                        <div className='chatMessageBlase'style={{color:this.state.color.fontColor2}}>{message}</div>\n                        <div className='chatdate'>\n                            <div>{new Date().toLocaleTimeString('de-DE', dateformat)}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    rightUser = (message)=>{\n        const dateformat = { \n            //month: 'short', \n            //day: 'numeric',\n            hour12: false,\n            hour:  \"2-digit\",\n            minute: \"2-digit\"\n        };\n        return(\n            <div className='chatinListChatUser'>\n                <div className='chatblaseChatUser' style={{background:this.state.color.bubbleColor}}>\n                    <div className='chatMessage'>\n                        <div className='chatMessageBlaseChatUser' style={{color:this.state.color.fontColor}}>{message}</div>\n                        <div className='chatdateChatUser'>\n                            <div>{new Date().toLocaleTimeString('de-DE', dateformat)}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    exampleChat = ()=>{\n        return(\n            <div>\n                {this.leftUser('Hey, Archa!')}\n                {this.rightUser('Moin! was kann kann ich für dich tuen? 🤓')}\n                {this.leftUser('ich brauche eine Veränderung')}\n                {this.rightUser('wähle deine Farbe 😉')}\n            </div>\n        )\n    }\n    \n\n\n    colorMain = ()=>{\n        return(\n            <div>\n                <div className='profileHead'>\n                    <button className='profileBackBtn' onClick={()=>this.close()}><GoX size={16}/></button>\n\n                </div>\n                <div className='showColorFrame'>\n                    <div className='exampleChatDiv' style={{background:this.state.color.backgroundColor}}>\n                        {this.exampleChat()}\n                    </div>\n                </div>\n                <div className='profileMainColor'>\n                    <div className='profileDataDivColor'>\n                        <div className='profileBezColor'>Hintergrund:</div>\n                        <div className='profileColorDiv'>\n                            {this.state.chatColor.map(e=>\n                                <button className={e===this.state.color.backgroundColor?'profileColorBtnState':'profileColorBtn'} key={e} style={{background:e}} onClick={()=>this.changeColor(e,1)}></button>\n                        )}</div>\n                    </div>\n                    <div className='placeholderDiv'></div>\n                    <div className='profileDataDivColor'>\n                        <div className='profileBezColor'>Chat-Blase rechts:</div>\n                        <div className='profileColorDiv'>\n                            {this.state.chatColor.map(e=>\n                                <button className={e===this.state.color.bubbleColor?'profileColorBtnState':'profileColorBtn'} key={e} style={{background:e}} onClick={()=>this.changeColor(e,2)}></button>\n                            )}</div>\n                    </div>\n                    <div className='placeholderDiv'></div>\n                    <div className='profileDataDivColor'>\n                        <div className='profileBezColor'>Chat-Blase links:</div>\n                        <div className='profileColorDiv'>\n                            {this.state.chatColor.map(e=>\n                                <button className={e===this.state.color.bubbleColor2?'profileColorBtnState':'profileColorBtn'} key={e} style={{background:e}} onClick={()=>this.changeColor(e,3)}></button>\n                            )}</div>\n                    </div>\n                    <div className='placeholderDiv'></div>\n                    <div className='profileDataDivColor'>\n                        <div className='profileBezColor'>Text rechts:</div>\n                        <div className='profileColorDiv'>\n                            {this.state.textColor.map(e=>\n                                <button className={e===this.state.color.fontColor?'profileColorBtnState':'profileColorBtn'} key={e} style={{background:e}} onClick={()=>this.changeColor(e,4)}></button>\n                            )}</div>\n                    </div>\n                    <div className='placeholderDiv'></div>\n                    <div className='profileDataDivColor'>\n                        <div className='profileBezColor'>Text links:</div>\n                        <div className='profileColorDiv'>\n                            {this.state.textColor.map(e=>\n                                <button className={e===this.state.color.fontColor2?'profileColorBtnState':'profileColorBtn'} key={e} style={{background:e}} onClick={()=>this.changeColor(e,5)}></button>\n                            )}</div>\n                    </div>\n                </div>\n                <DialogCheck text={this.state.text} open={this.state.dialogCheck} checked={this.callbackDialogcheck}></DialogCheck>\n            </div>\n        )\n    }\n\n    \n\n    render(){\n        if(this.props.main===3){\n            return (\n                <div className='profileScreen'>{this.colorMain()}</div>\n            )\n        }else{\n            return null\n        }\n        \n    }\n        \n}\n\nexport default ColorMenu;\n\n\n\n  ","import React from 'react';\nimport './index.css';\nimport Regis from './register'\nimport Topbar from './topbar'\nimport { ClassicSpinner } from \"react-spinners-kit\";\nimport Chat from './chat'\nimport Profile from './profile'\nimport ColorMenu from './colorMenu'\nimport color from './helpers/colors'\nimport ctrl from './api_controller'\n\n\n\nexport class Home extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            mobil: false,\n            use: 0,\n            email:'',\n            password:'',\n            user: null,\n            newUser: null,\n            useContact: null,\n            chatroomClose: null,\n            main: 1,\n            // standart Farbeinstellung\n            accentColor: color.accentColor,\n            color: {\n                backgroundColor: color.white,\n                bubbleColor: color.highBlue,\n                fontColor: color.white,\n                fontColor2: color.grey,\n                bubbleColor2: color.black\n            },\n            chatroomMap: new Map(),\n            logout:false         \n        }\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this)\n        this.frameToLogin = this.frameToLogin.bind(this)\n        this.topbar = this.topbar.bind(this)\n        this.use = this.use.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange = ({ target }) => {\n        this.setState({ [target.name]: target.value })\n    }\n\n\n    \n\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateWindowDimensions());\n        const storage = localStorage.getItem('login_archa')\n        if(storage){\n            this.storageLogin(JSON.parse(storage))\n        }else{\n            this.setState({use:1})\n        }\n        \n    }\n\n    updateWindowDimensions() {\n        const mobil = window.innerWidth<=600\n        document.documentElement.style.setProperty('--vh', `${window.innerHeight/100}px`);\n        this.setState({ mobil: mobil});\n    }\n    \n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions)\n    }\n    \n    \n    backHandleRegis=(e)=>{\n        if(e){\n            this.setState({use: 1})\n        }\n    }\n\n    openChat = (e)=>{\n        this.setState({useContact: e})\n\n    }\n    \n    openSelect = (e)=>{\n        this.setState({main:e})\n    }\n    use4 = ()=>{\n        this.setState({main:1})\n    }\n\n\n    profileUserUprade = (update)=>{\n        if(update.img){\n            this.updateImg_userDB(update)\n        }else{\n            this.update_userDb(update)\n        }\n        \n    }\n\n    updateImg_userDB = async(update)=>{\n        const img = update.img\n        console.log('sende img')\n            console.log(img)\n            const storageImg = await ctrl.imgSave(img)\n            if(storageImg){\n                update.imgLow = storageImg.imgLow\n                update.imgHigh = storageImg.imgHigh\n                update.imgId = storageImg.id\n                this.update_userDb(update)\n                await ctrl.deleteImg(this.state.user.imgId)\n            }\n    }\n    \n    update_userDb = async(update)=>{\n        const userId = this.state.user.id\n        const user = await ctrl.updateUser(userId, update)\n        if(user){\n            console.log('########UPDATE#########')\n            const {email, password} = user\n            const payload = {email, password}\n            localStorage.setItem('login_archa', JSON.stringify(payload));\n            this.setState({user})\n        }\n    }\n\n\n\n\n\n\n    storageLogin = async(payload)=>{\n        let user = await ctrl.getUserbyEAndP(payload)\n        if(user){\n            console.log(user, 'api passEmail')\n            // nur bis alle profile geändert sind.....\n            if(!user.color){\n                console.log('neu fügt color daten hinzu')\n                const color = this.state.color\n                const payload = {color}\n                user = await ctrl.updateUser(user.id, payload)\n            }\n            // lade Map chatrooms from user\n            const chatroomMap = await ctrl.getCharoomList(user.id)\n            if(chatroomMap){\n                this.setState({user, use:4, chatroomMap})\n            }  \n        }else{\n            window.alert('email oder Passwort stimmen nicht')\n            //localStorage.removeItem('login_archa')\n            this.setState({use:1})\n        }\n    }\n\n    login = async()=>{\n        const email = this.state.email\n        const password = this.state.password\n        if(email===''&&password===''){\n            return\n        }\n        const payload = {email, password}\n        let user= await ctrl.getUserbyEAndP(payload)\n        if(user){\n            localStorage.setItem('login_archa', JSON.stringify(payload));\n            const chatroomMap = await ctrl.getCharoomList(user.id)\n            if(chatroomMap){\n                this.setState({user, use:4, chatroomMap})\n            }\n        }else{\n            window.alert('email oder Passwort stimmen nicht')\n            this.setState({use:1})\n        }\n    }\n    chatroomClose= (e)=>{\n        if(e){\n            this.setState({chatroomClose:e})\n        }\n    }\n\n    newUser = (userDb)=>{\n        this.setState({user: userDb, use:4})\n    }\n\n    addUser = (user)=>{\n        if(user._id===this.state.user._id){\n            this.loadMap(user)\n        }  \n    }\n\n    loadMap = async(user)=>{\n        const chatroomMap = await ctrl.getCharoomList(user.id)\n            if(chatroomMap){\n                this.setState({user, use:4, chatroomMap})\n            }\n    }\n\n\n\n    logoutHandle = (e)=>{\n        console.log('ausloggen....')\n        if(e){\n            this.setState({\n                use: 1,\n                email:'',\n                password:'',\n                newUser: null,\n                user: null,\n                chatroomMap: new Map(),\n                addEventListener: null\n            },()=>this.remoteUser())\n        }\n    }\n    remoteUser = ()=>{\n        setTimeout(()=>this.setState({user:null}),300)\n    }\n\n    handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            this.login()\n        }\n      }\n\n    frameToLogin(){\n        return(\n            <div className='loginframeDiv'  onKeyDown={this.handleKeyDown}>\n                <div className='loginframeTxt1'>ARCHA</div>\n                <div className='placeholderDiv'></div>\n                <div className='loginframeTxt3'>Cloud - messenger</div>\n                <div className='placeholderDiv'></div>\n                <div className='loginframeTxt2'>Willkommen!</div>\n                <div className='loginframeTxt2'>log dich ein oder regestriere dich </div>\n                <div className='placeholderDiv'></div>\n                <div className='loginInputDiv'><input className='loginInput' type='text' name='email' placeholder='E-mail' value={this.state.email} onChange={this.handleChange}></input></div>\n                <div className='placeholderDivHalf'></div>\n                <div className='loginInputDiv'><input className='loginInput' type='password' name='password' placeholder='Passwort'value={this.state.password} onChange={this.handleChange}></input></div>\n                <button className='loginBtn' onClick={()=>this.setState({use:3},()=>this.login())}>Login</button>\n                <button className='regesBtn' onClick={()=>this.setState({use:2})}>registrieren</button>\n            </div>\n        )\n    }\n    topbar(){\n        return(\n            <div className='topbarDivHome'>\n                <Topbar \n                    user={this.state.user} \n                    updateUserHome={this.addUser} \n                    mobil={this.state.mobil} \n                    logout={this.logoutHandle} \n                    useContact={this.state.useContact}\n                    chatroomClose={this.chatroomClose}\n                    chatroomMap={this.state.chatroomMap}\n                    openSelect={this.openSelect}\n                />\n            </div>\n        )\n    }\n\n    use(){\n        switch(this.state.use){\n            case 0:\n                const loginLoad =  this.state.use === 0? true : false\n                return(\n                    <div className='regisDivSwitchLoad'>\n                        <div className='heicSpinner'>\n                            <div className='heicSpinnerStartDiv'>\n                                <ClassicSpinner size={50} margin={2} color='#639cdd' loading={loginLoad}/>\n                            </div>\n                        </div> \n                    </div>\n                )\n            case 1:\n                return(\n                    <div className='regisDivSwitch'>\n                        {this.frameToLogin()}\n                    </div>\n                )\n            // neuer User.....\n            case 2:\n                return(\n                    <div className='regisDivSwitch'>\n                        <Regis mobil={this.state.mobil} back={this.backHandleRegis} newUser={this.newUser}/>\n                    </div>\n                )\n            // einloggen.....\n            case 3:\n                const loading = true\n                return(\n                    <div className='regisDivSwitch'>\n                        <div className='loginframeDiv'>\n                            <div className='placeholderDiv'></div>\n                            <div className='loginframeTxt3'>lade... </div>\n                            <div className='heicSpinner'><ClassicSpinner size={50} margin={2} color='#639cdd' loading={loading}/></div> \n                        </div>               \n                    </div>\n                )\n            // Main Paiper....\n            case 4:\n                return(\n                    <div className='regisDivSwitch'>\n                        <div className='loginframeDiv'>\n                            <Chat \n                                user={this.state.user} \n                                useContact={this.openChat} \n                                chatroomClose={this.state.chatroomClose} \n                                mobile={this.state.mobil} \n                                chatroomMap={this.state.chatroomMap}\n                                updateMap={this.loadMap}\n                                main={this.state.main}\n                            />\n                            <Profile\n                                openChat={this.use4}\n                                user={this.state.user}\n                                userUpgrade={this.profileUserUprade}\n                                main={this.state.main}\n                            />\n                            <ColorMenu\n                                openChat={this.use4}\n                                user={this.state.user}\n                                color={this.profileUserUprade}\n                                main={this.state.main}\n                            />\n                        </div>               \n                    </div>\n                )\n            default: return null\n        }\n    }\n    \n\n    render(){\n        return(\n            <div className={!this.state.mobil?'homeScreen':'homeScreenMobil'} >\n                {this.topbar()}\n                <div className={!this.state.mobil?'loginFrame':'loginFrameMobil'}>\n                    {this.use()}\n                </div>\n            </div>\n        ); \n    }\n}\n\nexport default Home;\n\n\n\n  ","\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './Home';\nimport './Home/index.css'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\n// React Router\n// ========================================\n\n\nfunction App() {\n  \n  \n  return (\n    <div>\n      <Switch>\n        <Route exact path={\"/\"}>\n          <Home/>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\n\n\n\n\n\nReactDOM.render(\n  <React.Fragment>\n    <Router>\n      <App/>\n    </Router>\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n","\n\n\n\nmodule.exports = function () {\n  return  ['/\\uD83C\\uDFF4(?:\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74)\\uDB40\\uDC7F|\\u200D\\u2620\\uFE0F)|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC68(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3]))|\\uD83D\\uDC69\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC68(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83D\\uDC69\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC68(?:\\u200D(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|[#\\0-9]\\uFE0F\\u20E3|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDD1-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDEEB\\uDEEC\\uDEF4-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])|(?:[#\\0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC69\\uDC6E\\uDC70-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3D\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDD1-\\uDDDD])/g']\n  \n}\n\n"],"sourceRoot":""}